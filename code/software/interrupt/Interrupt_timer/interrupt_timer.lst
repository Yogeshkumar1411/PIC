

HI-TECH Software PIC LITE Macro Assembler V9.81 build 7503 
                                                                                               Sat Apr 16 00:04:24 2022

HI-TECH Software Omniscient Code Generator (Lite mode) build 7503
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 7503"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F887
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           	FNCALL	_main,_delay
    43                           	FNROOT	_main
    44                           	FNCALL	intlevel1,_timer
    45                           	global	intlevel1
    46                           	FNROOT	intlevel1
    47                           	global	_count
    48                           	global	_INTCON
    49                           psect	text66,local,class=CODE,delta=2
    50                           global __ptext66
    51  0000                     __ptext66:
    52  000B                     _INTCON	set	11
    53                           	global	_PORTA
    54  0005                     _PORTA	set	5
    55                           	global	_RA0
    56  0028                     _RA0	set	40
    57                           	global	_RA1
    58  0029                     _RA1	set	41
    59                           	global	_T0IF
    60  005A                     _T0IF	set	90
    61                           	global	_OPTION_REG
    62  0081                     _OPTION_REG	set	129
    63                           	global	_TRISA
    64  0085                     _TRISA	set	133
    65                           	global	_ANSEL
    66  0188                     _ANSEL	set	392
    67                           	global	_ANSELH
    68  0189                     _ANSELH	set	393
    69                           	file	"interrupt_timer.as"
    70                           	line	#
    71                           psect cinit,class=CODE,delta=2
    72                           global start_initialization
    73  00B6                     start_initialization:
    74                           
    75                           psect	bssCOMMON,class=COMMON,space=1
    76                           global __pbssCOMMON
    77  0076                     __pbssCOMMON:
    78  0076                     _count:
    79  0076                            ds      2
    80                           
    81                           ; Clear objects allocated to COMMON
    82                           psect cinit,class=CODE,delta=2
    83  00B6  01F6               	clrf	((__pbssCOMMON)+0)&07Fh
    84  00B7  01F7               	clrf	((__pbssCOMMON)+1)&07Fh
    85                           psect cinit,class=CODE,delta=2
    86                           global end_of_initialization
    87                           
    88                           ;End of C runtime variable initialization code
    89                           
    90  00B8                     end_of_initialization:
    91  00B8  0183               clrf status
    92  00B9  120A  118A  2874   ljmp _main	;jump to C main() function
    93                           psect	cstackCOMMON,class=COMMON,space=1
    94                           global __pcstackCOMMON
    95  0070                     __pcstackCOMMON:
    96                           	global	?_timer
    97  0070                     ?_timer:	; 0 bytes @ 0x0
    98                           	global	??_timer
    99  0070                     ??_timer:	; 0 bytes @ 0x0
   100                           	global	?_main
   101  0070                     ?_main:	; 0 bytes @ 0x0
   102  0070                     	ds	4
   103                           	global	?_delay
   104  0074                     ?_delay:	; 0 bytes @ 0x4
   105                           	global	delay@a
   106  0074                     delay@a:	; 2 bytes @ 0x4
   107  0074                     	ds	2
   108                           	global	??_delay
   109  0076                     ??_delay:	; 0 bytes @ 0x6
   110                           	global	??_main
   111  0076                     ??_main:	; 0 bytes @ 0x6
   112 ;;Data sizes: Strings 0, constant 0, data 0, bss 2, persistent 0 stack 0
   113 ;;Auto spaces:   Size  Autos    Used
   114 ;; COMMON          14      6       8
   115 ;; BANK0           80      0       0
   116 ;; BANK1           80      0       0
   117 ;; BANK3           96      0       0
   118 ;; BANK2           96      0       0
   119                           
   120 ;;
   121 ;; Pointer list with targets:
   122                           
   123                           
   124                           
   125 ;;
   126 ;; Critical Paths under _main in COMMON
   127 ;;
   128 ;;   _main->_delay
   129 ;;
   130 ;; Critical Paths under _timer in COMMON
   131 ;;
   132 ;;   None.
   133 ;;
   134 ;; Critical Paths under _main in BANK0
   135 ;;
   136 ;;   None.
   137 ;;
   138 ;; Critical Paths under _timer in BANK0
   139 ;;
   140 ;;   None.
   141 ;;
   142 ;; Critical Paths under _main in BANK1
   143 ;;
   144 ;;   None.
   145 ;;
   146 ;; Critical Paths under _timer in BANK1
   147 ;;
   148 ;;   None.
   149 ;;
   150 ;; Critical Paths under _main in BANK3
   151 ;;
   152 ;;   None.
   153 ;;
   154 ;; Critical Paths under _timer in BANK3
   155 ;;
   156 ;;   None.
   157 ;;
   158 ;; Critical Paths under _main in BANK2
   159 ;;
   160 ;;   None.
   161 ;;
   162 ;; Critical Paths under _timer in BANK2
   163 ;;
   164 ;;   None.
   165                           
   166 ;;
   167 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   168 ;;
   169                           
   170 ;;
   171 ;;Call Graph Tables:
   172 ;;
   173 ;; ---------------------------------------------------------------------------------
   174 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   175 ;; ---------------------------------------------------------------------------------
   176 ;; (0) _main                                                 0     0      0      15
   177 ;;                              _delay
   178 ;; ---------------------------------------------------------------------------------
   179 ;; (1) _delay                                                2     0      2      15
   180 ;;                                              4 COMMON     2     0      2
   181 ;; ---------------------------------------------------------------------------------
   182 ;; Estimated maximum stack depth 1
   183 ;; ---------------------------------------------------------------------------------
   184 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   185 ;; ---------------------------------------------------------------------------------
   186 ;; (2) _timer                                                4     4      0       0
   187 ;;                                              0 COMMON     4     4      0
   188 ;; ---------------------------------------------------------------------------------
   189 ;; Estimated maximum stack depth 2
   190 ;; ---------------------------------------------------------------------------------
   191                           
   192 ;; Call Graph Graphs:
   193                           
   194 ;; _main (ROOT)
   195 ;;   _delay
   196 ;;
   197 ;; _timer (ROOT)
   198 ;;
   199                           
   200 ;; Address spaces:
   201                           
   202 ;;Name               Size   Autos  Total    Cost      Usage
   203 ;;BITCOMMON            E      0       0       0        0.0%
   204 ;;EEDATA             100      0       0       0        0.0%
   205 ;;NULL                 0      0       0       0        0.0%
   206 ;;CODE                 0      0       0       0        0.0%
   207 ;;COMMON               E      6       8       1       57.1%
   208 ;;BITSFR0              0      0       0       1        0.0%
   209 ;;SFR0                 0      0       0       1        0.0%
   210 ;;BITSFR1              0      0       0       2        0.0%
   211 ;;SFR1                 0      0       0       2        0.0%
   212 ;;STACK                0      0       1       2        0.0%
   213 ;;ABS                  0      0       8       3        0.0%
   214 ;;BITBANK0            50      0       0       4        0.0%
   215 ;;BITSFR3              0      0       0       4        0.0%
   216 ;;SFR3                 0      0       0       4        0.0%
   217 ;;BANK0               50      0       0       5        0.0%
   218 ;;BITSFR2              0      0       0       5        0.0%
   219 ;;SFR2                 0      0       0       5        0.0%
   220 ;;BITBANK1            50      0       0       6        0.0%
   221 ;;BANK1               50      0       0       7        0.0%
   222 ;;BITBANK3            60      0       0       8        0.0%
   223 ;;BANK3               60      0       0       9        0.0%
   224 ;;BITBANK2            60      0       0      10        0.0%
   225 ;;BANK2               60      0       0      11        0.0%
   226 ;;DATA                 0      0       9      12        0.0%
   227                           
   228                           	global	_main
   229                           psect	maintext,global,class=CODE,delta=2
   230                           global __pmaintext
   231  0074                     __pmaintext:
   232                           
   233 ;; *************** function _main *****************
   234 ;; Defined at:
   235 ;;		line 31 in file "D:\Embedded\pic\code\software\interrupt\Interrupt_timer\interrupt_timer.c"
   236 ;; Parameters:    Size  Location     Type
   237 ;;		None
   238 ;; Auto vars:     Size  Location     Type
   239 ;;		None
   240 ;; Return value:  Size  Location     Type
   241 ;;		None               void
   242 ;; Registers used:
   243 ;;		wreg, status,2, status,0, pclath, cstack
   244 ;; Tracked objects:
   245 ;;		On entry : 17F/0
   246 ;;		On exit  : 0/0
   247 ;;		Unchanged: 0/0
   248 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   249 ;;      Params:         0       0       0       0       0
   250 ;;      Locals:         0       0       0       0       0
   251 ;;      Temps:          0       0       0       0       0
   252 ;;      Totals:         0       0       0       0       0
   253 ;;Total ram usage:        0 bytes
   254 ;; Hardware stack levels required when called:    2
   255 ;; This function calls:
   256 ;;		_delay
   257 ;; This function is called by:
   258 ;;		Startup code after reset
   259 ;; This function uses a non-reentrant model
   260 ;;
   261                           psect	maintext
   262                           	file	"D:\Embedded\pic\code\software\interrupt\Interrupt_timer\interrupt_timer.c"
   263                           	line	31
   264                           	global	__size_of_main
   265  002E                     	__size_of_main	equ	__end_of_main-_main
   266                           	
   267  0074                     _main:	
   268                           	opt	stack 6
   269                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   270                           	line	32
   271                           	
   272  0074                     l2204:	
   273                           ;interrupt_timer.c: 32: PORTA=0X00;
   274  0074  1283               	bcf	status, 5	;RP0=0, select bank0
   275  0075  1303               	bcf	status, 6	;RP1=0, select bank0
   276  0076  0185               	clrf	(5)	;volatile
   277                           	line	33
   278                           ;interrupt_timer.c: 33: TRISA=0X00;
   279  0077  1683               	bsf	status, 5	;RP0=1, select bank1
   280  0078  1303               	bcf	status, 6	;RP1=0, select bank1
   281  0079  0185               	clrf	(133)^080h	;volatile
   282                           	line	34
   283                           ;interrupt_timer.c: 34: ANSEL=0X00;
   284  007A  1683               	bsf	status, 5	;RP0=1, select bank3
   285  007B  1703               	bsf	status, 6	;RP1=1, select bank3
   286  007C  0188               	clrf	(392)^0180h	;volatile
   287                           	line	35
   288                           ;interrupt_timer.c: 35: ANSELH=0X00;
   289  007D  0189               	clrf	(393)^0180h	;volatile
   290                           	line	36
   291                           	
   292  007E                     l2206:	
   293                           ;interrupt_timer.c: 36: INTCON=0XE0;
   294  007E  30E0               	movlw	(0E0h)
   295  007F  008B               	movwf	(11)	;volatile
   296                           	line	37
   297                           	
   298  0080                     l2208:	
   299                           ;interrupt_timer.c: 37: OPTION_REG=0X07;
   300  0080  3007               	movlw	(07h)
   301  0081  1683               	bsf	status, 5	;RP0=1, select bank1
   302  0082  1303               	bcf	status, 6	;RP1=0, select bank1
   303  0083  0081               	movwf	(129)^080h	;volatile
   304  0084  2885               	goto	l2210
   305                           	line	38
   306                           ;interrupt_timer.c: 38: while(1)
   307                           	
   308  0085                     l1040:	
   309                           	line	40
   310                           	
   311  0085                     l2210:	
   312                           ;interrupt_timer.c: 39: {
   313                           ;interrupt_timer.c: 40: RA0=1;
   314  0085  1283               	bcf	status, 5	;RP0=0, select bank0
   315  0086  1303               	bcf	status, 6	;RP1=0, select bank0
   316  0087  1405               	bsf	(40/8),(40)&7
   317                           	line	41
   318                           	
   319  0088                     l2212:	
   320                           ;interrupt_timer.c: 41: delay(10000);
   321  0088  3010               	movlw	low(02710h)
   322  0089  00F4               	movwf	(?_delay)
   323  008A  3027               	movlw	high(02710h)
   324  008B  00F5               	movwf	((?_delay))+1
   325  008C  120A  118A  20A2   	fcall	_delay
              120A  118A         
   326                           	line	42
   327                           	
   328  0091                     l2214:	
   329                           ;interrupt_timer.c: 42: RA0=0;
   330  0091  1283               	bcf	status, 5	;RP0=0, select bank0
   331  0092  1303               	bcf	status, 6	;RP1=0, select bank0
   332  0093  1005               	bcf	(40/8),(40)&7
   333                           	line	43
   334                           	
   335  0094                     l2216:	
   336                           ;interrupt_timer.c: 43: delay(10000);
   337  0094  3010               	movlw	low(02710h)
   338  0095  00F4               	movwf	(?_delay)
   339  0096  3027               	movlw	high(02710h)
   340  0097  00F5               	movwf	((?_delay))+1
   341  0098  120A  118A  20A2   	fcall	_delay
              120A  118A         
   342  009D  2885               	goto	l2210
   343                           	line	44
   344                           	
   345  009E                     l1041:	
   346                           	line	38
   347  009E  2885               	goto	l2210
   348                           	
   349  009F                     l1042:	
   350                           	line	45
   351                           	
   352  009F                     l1043:	
   353                           	global	start
   354  009F  120A  118A  2812   	ljmp	start
   355                           	opt stack 0
   356                           GLOBAL	__end_of_main
   357  00A2                     	__end_of_main:
   358 ;; =============== function _main ends ============
   359                           
   360                           	signat	_main,88
   361                           	global	_delay
   362                           psect	text67,local,class=CODE,delta=2
   363                           global __ptext67
   364  00A2                     __ptext67:
   365                           
   366 ;; *************** function _delay *****************
   367 ;; Defined at:
   368 ;;		line 7 in file "D:\Embedded\pic\code\software\interrupt\Interrupt_timer\interrupt_timer.c"
   369 ;; Parameters:    Size  Location     Type
   370 ;;  a               2    4[COMMON] unsigned int 
   371 ;; Auto vars:     Size  Location     Type
   372 ;;		None
   373 ;; Return value:  Size  Location     Type
   374 ;;		None               void
   375 ;; Registers used:
   376 ;;		wreg
   377 ;; Tracked objects:
   378 ;;		On entry : 0/0
   379 ;;		On exit  : 0/0
   380 ;;		Unchanged: 0/0
   381 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   382 ;;      Params:         2       0       0       0       0
   383 ;;      Locals:         0       0       0       0       0
   384 ;;      Temps:          0       0       0       0       0
   385 ;;      Totals:         2       0       0       0       0
   386 ;;Total ram usage:        2 bytes
   387 ;; Hardware stack levels used:    1
   388 ;; Hardware stack levels required when called:    1
   389 ;; This function calls:
   390 ;;		Nothing
   391 ;; This function is called by:
   392 ;;		_main
   393 ;; This function uses a non-reentrant model
   394 ;;
   395                           psect	text67
   396                           	file	"D:\Embedded\pic\code\software\interrupt\Interrupt_timer\interrupt_timer.c"
   397                           	line	7
   398                           	global	__size_of_delay
   399  0014                     	__size_of_delay	equ	__end_of_delay-_delay
   400                           	
   401  00A2                     _delay:	
   402                           	opt	stack 6
   403                           ; Regs used in _delay: [wreg]
   404                           	line	8
   405                           	
   406  00A2                     l1412:	
   407                           ;interrupt_timer.c: 8: while(a--);
   408  00A2  28A4               	goto	l1414
   409                           	
   410  00A3                     l1028:	
   411  00A3  28A4               	goto	l1414
   412                           	
   413  00A4                     l1027:	
   414                           	
   415  00A4                     l1414:	
   416  00A4  3001               	movlw	low(01h)
   417  00A5  02F4               	subwf	(delay@a),f
   418  00A6  3000               	movlw	high(01h)
   419  00A7  1C03               	skipc
   420  00A8  03F5               	decf	(delay@a+1),f
   421  00A9  02F5               	subwf	(delay@a+1),f
   422  00AA  30FF               	movlw	high(0FFFFh)
   423  00AB  0675               	xorwf	((delay@a+1)),w
   424  00AC  1D03               	skipz
   425  00AD  28B0               	goto	u15
   426  00AE  30FF               	movlw	low(0FFFFh)
   427  00AF  0674               	xorwf	((delay@a)),w
   428  00B0                     u15:
   429                           
   430  00B0  1D03               	skipz
   431  00B1  28B3               	goto	u11
   432  00B2  28B4               	goto	u10
   433  00B3                     u11:
   434  00B3  28A4               	goto	l1414
   435  00B4                     u10:
   436  00B4  28B5               	goto	l1030
   437                           	
   438  00B5                     l1029:	
   439                           	line	9
   440                           	
   441  00B5                     l1030:	
   442  00B5  0008               	return
   443                           	opt stack 0
   444                           GLOBAL	__end_of_delay
   445  00B6                     	__end_of_delay:
   446 ;; =============== function _delay ends ============
   447                           
   448                           	signat	_delay,4216
   449                           	global	_timer
   450                           psect	text68,local,class=CODE,delta=2
   451                           global __ptext68
   452  0015                     __ptext68:
   453                           
   454 ;; *************** function _timer *****************
   455 ;; Defined at:
   456 ;;		line 11 in file "D:\Embedded\pic\code\software\interrupt\Interrupt_timer\interrupt_timer.c"
   457 ;; Parameters:    Size  Location     Type
   458 ;;		None
   459 ;; Auto vars:     Size  Location     Type
   460 ;;		None
   461 ;; Return value:  Size  Location     Type
   462 ;;		None               void
   463 ;; Registers used:
   464 ;;		wreg, status,2, btemp+1
   465 ;; Tracked objects:
   466 ;;		On entry : 0/0
   467 ;;		On exit  : 0/0
   468 ;;		Unchanged: 0/0
   469 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   470 ;;      Params:         0       0       0       0       0
   471 ;;      Locals:         0       0       0       0       0
   472 ;;      Temps:          4       0       0       0       0
   473 ;;      Totals:         4       0       0       0       0
   474 ;;Total ram usage:        4 bytes
   475 ;; Hardware stack levels used:    1
   476 ;; This function calls:
   477 ;;		Nothing
   478 ;; This function is called by:
   479 ;;		Interrupt level 1
   480 ;; This function uses a non-reentrant model
   481 ;;
   482                           psect	text68
   483                           	file	"D:\Embedded\pic\code\software\interrupt\Interrupt_timer\interrupt_timer.c"
   484                           	line	11
   485                           	global	__size_of_timer
   486  005F                     	__size_of_timer	equ	__end_of_timer-_timer
   487                           	
   488  0015                     _timer:	
   489                           	opt	stack 6
   490                           ; Regs used in _timer: [wreg+status,2+btemp+1]
   491                           psect	intentry,class=CODE,delta=2
   492                           global __pintentry
   493  0004                     __pintentry:
   494                           global interrupt_function
   495  0004                     interrupt_function:
   496                           	global saved_w
   497  007E                     	saved_w	set	btemp+0
   498  0004  00FE               	movwf	saved_w
   499  0005  0E03               	swapf	status,w
   500  0006  00F0               	movwf	(??_timer+0)
   501  0007  0804               	movf	fsr0,w
   502  0008  00F1               	movwf	(??_timer+1)
   503  0009  080A               	movf	pclath,w
   504  000A  00F2               	movwf	(??_timer+2)
   505  000B  1283               	bcf	status, 5	;RP0=0, select bank0
   506  000C  1303               	bcf	status, 6	;RP1=0, select bank0
   507  000D  087F               	movf	btemp+1,w
   508  000E  00F3               	movwf	(??_timer+3)
   509  000F  120A  118A  2815   	ljmp	_timer
   510                           psect	text68
   511                           	line	12
   512                           	
   513  0015                     i1l1416:	
   514                           ;interrupt_timer.c: 12: if(T0IF==1)
   515  0015  1D0B               	btfss	(90/8),(90)&7
   516  0016  2818               	goto	u2_21
   517  0017  2819               	goto	u2_20
   518  0018                     u2_21:
   519  0018  2821               	goto	i1l1422
   520  0019                     u2_20:
   521                           	line	14
   522                           	
   523  0019                     i1l1418:	
   524                           ;interrupt_timer.c: 13: {
   525                           ;interrupt_timer.c: 14: count++;
   526  0019  3001               	movlw	low(01h)
   527  001A  07F6               	addwf	(_count),f
   528  001B  1803               	skipnc
   529  001C  0AF7               	incf	(_count+1),f
   530  001D  3000               	movlw	high(01h)
   531  001E  07F7               	addwf	(_count+1),f
   532                           	line	15
   533                           	
   534  001F                     i1l1420:	
   535                           ;interrupt_timer.c: 15: T0IF=0;
   536  001F  110B               	bcf	(90/8),(90)&7
   537  0020  2821               	goto	i1l1422
   538                           	line	16
   539                           	
   540  0021                     i1l1033:	
   541                           	line	17
   542                           	
   543  0021                     i1l1422:	
   544                           ;interrupt_timer.c: 16: }
   545                           ;interrupt_timer.c: 17: if(count>=50&&count<150)
   546  0021  0877               	movf	(_count+1),w
   547  0022  3A80               	xorlw	80h
   548  0023  00FF               	movwf	btemp+1
   549  0024  3080               	movlw	(high(032h))^80h
   550  0025  027F               	subwf	btemp+1,w
   551  0026  1D03               	skipz
   552  0027  282A               	goto	u3_25
   553  0028  3032               	movlw	low(032h)
   554  0029  0276               	subwf	(_count),w
   555  002A                     u3_25:
   556                           
   557  002A  1C03               	skipc
   558  002B  282D               	goto	u3_21
   559  002C  282E               	goto	u3_20
   560  002D                     u3_21:
   561  002D  283F               	goto	i1l1428
   562  002E                     u3_20:
   563                           	
   564  002E                     i1l1424:	
   565  002E  0877               	movf	(_count+1),w
   566  002F  3A80               	xorlw	80h
   567  0030  00FF               	movwf	btemp+1
   568  0031  3080               	movlw	(high(096h))^80h
   569  0032  027F               	subwf	btemp+1,w
   570  0033  1D03               	skipz
   571  0034  2837               	goto	u4_25
   572  0035  3096               	movlw	low(096h)
   573  0036  0276               	subwf	(_count),w
   574  0037                     u4_25:
   575                           
   576  0037  1803               	skipnc
   577  0038  283A               	goto	u4_21
   578  0039  283B               	goto	u4_20
   579  003A                     u4_21:
   580  003A  283F               	goto	i1l1428
   581  003B                     u4_20:
   582                           	line	19
   583                           	
   584  003B                     i1l1426:	
   585                           ;interrupt_timer.c: 18: {
   586                           ;interrupt_timer.c: 19: RA1=1;
   587  003B  1283               	bcf	status, 5	;RP0=0, select bank0
   588  003C  1303               	bcf	status, 6	;RP1=0, select bank0
   589  003D  1485               	bsf	(41/8),(41)&7
   590  003E  283F               	goto	i1l1428
   591                           	line	20
   592                           	
   593  003F                     i1l1034:	
   594                           	line	21
   595                           	
   596  003F                     i1l1428:	
   597                           ;interrupt_timer.c: 20: }
   598                           ;interrupt_timer.c: 21: if(count>=150&&count<200)
   599  003F  0877               	movf	(_count+1),w
   600  0040  3A80               	xorlw	80h
   601  0041  00FF               	movwf	btemp+1
   602  0042  3080               	movlw	(high(096h))^80h
   603  0043  027F               	subwf	btemp+1,w
   604  0044  1D03               	skipz
   605  0045  2848               	goto	u5_25
   606  0046  3096               	movlw	low(096h)
   607  0047  0276               	subwf	(_count),w
   608  0048                     u5_25:
   609                           
   610  0048  1C03               	skipc
   611  0049  284B               	goto	u5_21
   612  004A  284C               	goto	u5_20
   613  004B                     u5_21:
   614  004B  285D               	goto	i1l1434
   615  004C                     u5_20:
   616                           	
   617  004C                     i1l1430:	
   618  004C  0877               	movf	(_count+1),w
   619  004D  3A80               	xorlw	80h
   620  004E  00FF               	movwf	btemp+1
   621  004F  3080               	movlw	(high(0C8h))^80h
   622  0050  027F               	subwf	btemp+1,w
   623  0051  1D03               	skipz
   624  0052  2855               	goto	u6_25
   625  0053  30C8               	movlw	low(0C8h)
   626  0054  0276               	subwf	(_count),w
   627  0055                     u6_25:
   628                           
   629  0055  1803               	skipnc
   630  0056  2858               	goto	u6_21
   631  0057  2859               	goto	u6_20
   632  0058                     u6_21:
   633  0058  285D               	goto	i1l1434
   634  0059                     u6_20:
   635                           	line	23
   636                           	
   637  0059                     i1l1432:	
   638                           ;interrupt_timer.c: 22: {
   639                           ;interrupt_timer.c: 23: RA1=0;
   640  0059  1283               	bcf	status, 5	;RP0=0, select bank0
   641  005A  1303               	bcf	status, 6	;RP1=0, select bank0
   642  005B  1085               	bcf	(41/8),(41)&7
   643  005C  285D               	goto	i1l1434
   644                           	line	24
   645                           	
   646  005D                     i1l1035:	
   647                           	line	25
   648                           	
   649  005D                     i1l1434:	
   650                           ;interrupt_timer.c: 24: }
   651                           ;interrupt_timer.c: 25: if(count==200)
   652  005D  30C8               	movlw	0C8h
   653  005E  0676               	xorwf	(_count),w
   654  005F  0477               	iorwf	(_count+1),w
   655  0060  1D03               	skipz
   656  0061  2863               	goto	u7_21
   657  0062  2864               	goto	u7_20
   658  0063                     u7_21:
   659  0063  2867               	goto	i1l1037
   660  0064                     u7_20:
   661                           	line	27
   662                           	
   663  0064                     i1l1436:	
   664                           ;interrupt_timer.c: 26: {
   665                           ;interrupt_timer.c: 27: count=0;
   666  0064  01F6               	clrf	(_count)
   667  0065  01F7               	clrf	(_count+1)
   668  0066  2867               	goto	i1l1037
   669                           	line	28
   670                           	
   671  0067                     i1l1036:	
   672                           	line	29
   673                           	
   674  0067                     i1l1037:	
   675  0067  0873               	movf	(??_timer+3),w
   676  0068  1283               	bcf	status, 5	;RP0=0, select bank0
   677  0069  1303               	bcf	status, 6	;RP1=0, select bank0
   678  006A  00FF               	movwf	btemp+1
   679  006B  0872               	movf	(??_timer+2),w
   680  006C  008A               	movwf	pclath
   681  006D  0871               	movf	(??_timer+1),w
   682  006E  0084               	movwf	fsr0
   683  006F  0E70               	swapf	(??_timer+0)^0FFFFFF80h,w
   684  0070  0083               	movwf	status
   685  0071  0EFE               	swapf	saved_w,f
   686  0072  0E7E               	swapf	saved_w,w
   687  0073  0009               	retfie
   688                           	opt stack 0
   689                           GLOBAL	__end_of_timer
   690  0074                     	__end_of_timer:
   691 ;; =============== function _timer ends ============
   692                           
   693                           	signat	_timer,88
   694                           psect	text69,local,class=CODE,delta=2
   695                           global __ptext69
   696  0000                     __ptext69:
   697                           	global	btemp
   698  007E                     	btemp set 07Eh
   699                           
   700                           	DABS	1,126,2	;btemp
   701                           	global	wtemp0
   702  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.81 build 7503 
Symbol Table                                                                                   Sat Apr 16 00:04:24 2022

                  u10 00B4                    u11 00B3                    u15 00B0                   _RA0 0028  
                 _RA1 0029                   fsr0 0004                  l1030 00B5                  l1040 0085  
                l1041 009E                  l1042 009F                  l1027 00A4                  l1043 009F  
                l1028 00A3                  l1029 00B5                  l2210 0085                  l1412 00A2  
                l2212 0088                  l2204 0074                  l1414 00A4                  l2214 0091  
                l2206 007E                  l2216 0094                  l2208 0080                  _T0IF 005A  
                u2_20 0019                  u2_21 0018                  u3_20 002E                  u3_21 002D  
                u3_25 002A                  u4_20 003B                  u4_21 003A                  u4_25 0037  
                u5_20 004C                  u5_21 004B                  u5_25 0048                  u6_20 0059  
                u6_21 0058                  u6_25 0055                  u7_20 0064                  u7_21 0063  
                _main 0074                  btemp 007E                  start 0012                 ?_main 0070  
               _ANSEL 0188                 _PORTA 0005                 _TRISA 0085                 _delay 00A2  
               _count 0076                 _timer 0015                 pclath 000A                 status 0003  
               wtemp0 007E          __end_of_main 00A2                ??_main 0076                ?_delay 0074  
              ?_timer 0070                _ANSELH 0189                i1l1033 0021                i1l1034 003F  
              i1l1035 005D                i1l1036 0067                i1l1037 0067                i1l1420 001F  
              i1l1430 004C                i1l1422 0021                i1l1432 0059                i1l1424 002E  
              i1l1416 0015                i1l1434 005D                i1l1426 003B                i1l1418 0019  
              i1l1436 0064                i1l1428 003F                _INTCON 000B                delay@a 0074  
              saved_w 007E        __pcstackCOMMON 0070         __end_of_delay 00B6         __end_of_timer 0074  
             ??_delay 0076               ??_timer 0070            __pmaintext 0074            __pintentry 0004  
end_of_initialization 00B8   start_initialization 00B6           __pbssCOMMON 0076        __size_of_delay 0014  
      __size_of_timer 005F     interrupt_function 0004              __ptext66 0000              __ptext67 00A2  
            __ptext68 0015              __ptext69 0000         __size_of_main 002E              intlevel1 0000  
          _OPTION_REG 0081  
