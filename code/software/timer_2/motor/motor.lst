

HI-TECH Software PIC LITE Macro Assembler V9.81 build 7503 
                                                                                               Fri Apr 15 23:48:36 2022

HI-TECH Software Omniscient Code Generator (Lite mode) build 7503
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 7503"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F887
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           	FNCALL	_main,_timer
    43                           	FNROOT	_main
    44                           	global	_count
    45                           	global	_PORTC
    46                           psect	text60,local,class=CODE,delta=2
    47                           global __ptext60
    48  0000                     __ptext60:
    49  0007                     _PORTC	set	7
    50                           	global	_T2CON
    51  0012                     _T2CON	set	18
    52                           	global	_TMR2IF
    53  0061                     _TMR2IF	set	97
    54                           	global	_TRISC
    55  0087                     _TRISC	set	135
    56                           	file	"motor.as"
    57                           	line	#
    58                           psect cinit,class=CODE,delta=2
    59                           global start_initialization
    60  07A2                     start_initialization:
    61                           
    62                           psect	bssCOMMON,class=COMMON,space=1
    63                           global __pbssCOMMON
    64  0070                     __pbssCOMMON:
    65  0070                     _count:
    66  0070                            ds      2
    67                           
    68                           ; Clear objects allocated to COMMON
    69                           psect cinit,class=CODE,delta=2
    70  07A2  01F0               	clrf	((__pbssCOMMON)+0)&07Fh
    71  07A3  01F1               	clrf	((__pbssCOMMON)+1)&07Fh
    72                           psect cinit,class=CODE,delta=2
    73                           global end_of_initialization
    74                           
    75                           ;End of C runtime variable initialization code
    76                           
    77  07A4                     end_of_initialization:
    78  07A4  0183               clrf status
    79  07A5  120A  118A  2FA8   ljmp _main	;jump to C main() function
    80                           psect	cstackCOMMON,class=COMMON,space=1
    81                           global __pcstackCOMMON
    82  0072                     __pcstackCOMMON:
    83                           	global	?_timer
    84  0072                     ?_timer:	; 0 bytes @ 0x0
    85                           	global	?_main
    86  0072                     ?_main:	; 0 bytes @ 0x0
    87                           	global	timer@sec
    88  0072                     timer@sec:	; 2 bytes @ 0x0
    89  0072                     	ds	2
    90                           	global	??_timer
    91  0074                     ??_timer:	; 0 bytes @ 0x2
    92                           	global	??_main
    93  0074                     ??_main:	; 0 bytes @ 0x2
    94 ;;Data sizes: Strings 0, constant 0, data 0, bss 2, persistent 0 stack 0
    95 ;;Auto spaces:   Size  Autos    Used
    96 ;; COMMON          14      2       4
    97 ;; BANK0           80      0       0
    98 ;; BANK1           80      0       0
    99 ;; BANK3           96      0       0
   100 ;; BANK2           96      0       0
   101                           
   102 ;;
   103 ;; Pointer list with targets:
   104                           
   105                           
   106                           
   107 ;;
   108 ;; Critical Paths under _main in COMMON
   109 ;;
   110 ;;   _main->_timer
   111 ;;
   112 ;; Critical Paths under _main in BANK0
   113 ;;
   114 ;;   None.
   115 ;;
   116 ;; Critical Paths under _main in BANK1
   117 ;;
   118 ;;   None.
   119 ;;
   120 ;; Critical Paths under _main in BANK3
   121 ;;
   122 ;;   None.
   123 ;;
   124 ;; Critical Paths under _main in BANK2
   125 ;;
   126 ;;   None.
   127                           
   128 ;;
   129 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   130 ;;
   131                           
   132 ;;
   133 ;;Call Graph Tables:
   134 ;;
   135 ;; ---------------------------------------------------------------------------------
   136 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   137 ;; ---------------------------------------------------------------------------------
   138 ;; (0) _main                                                 0     0      0      15
   139 ;;                              _timer
   140 ;; ---------------------------------------------------------------------------------
   141 ;; (1) _timer                                                2     0      2      15
   142 ;;                                              0 COMMON     2     0      2
   143 ;; ---------------------------------------------------------------------------------
   144 ;; Estimated maximum stack depth 1
   145 ;; ---------------------------------------------------------------------------------
   146                           
   147 ;; Call Graph Graphs:
   148                           
   149 ;; _main (ROOT)
   150 ;;   _timer
   151 ;;
   152                           
   153 ;; Address spaces:
   154                           
   155 ;;Name               Size   Autos  Total    Cost      Usage
   156 ;;BITCOMMON            E      0       0       0        0.0%
   157 ;;EEDATA             100      0       0       0        0.0%
   158 ;;NULL                 0      0       0       0        0.0%
   159 ;;CODE                 0      0       0       0        0.0%
   160 ;;COMMON               E      2       4       1       28.6%
   161 ;;BITSFR0              0      0       0       1        0.0%
   162 ;;SFR0                 0      0       0       1        0.0%
   163 ;;BITSFR1              0      0       0       2        0.0%
   164 ;;SFR1                 0      0       0       2        0.0%
   165 ;;STACK                0      0       1       2        0.0%
   166 ;;ABS                  0      0       4       3        0.0%
   167 ;;BITBANK0            50      0       0       4        0.0%
   168 ;;BITSFR3              0      0       0       4        0.0%
   169 ;;SFR3                 0      0       0       4        0.0%
   170 ;;BANK0               50      0       0       5        0.0%
   171 ;;BITSFR2              0      0       0       5        0.0%
   172 ;;SFR2                 0      0       0       5        0.0%
   173 ;;BITBANK1            50      0       0       6        0.0%
   174 ;;BANK1               50      0       0       7        0.0%
   175 ;;BITBANK3            60      0       0       8        0.0%
   176 ;;BANK3               60      0       0       9        0.0%
   177 ;;BITBANK2            60      0       0      10        0.0%
   178 ;;BANK2               60      0       0      11        0.0%
   179 ;;DATA                 0      0       5      12        0.0%
   180                           
   181                           	global	_main
   182                           psect	maintext,global,class=CODE,delta=2
   183                           global __pmaintext
   184  07A8                     __pmaintext:
   185                           
   186 ;; *************** function _main *****************
   187 ;; Defined at:
   188 ;;		line 25 in file "D:\Embedded\pic\code\software\timer_2\motor\motor.c"
   189 ;; Parameters:    Size  Location     Type
   190 ;;		None
   191 ;; Auto vars:     Size  Location     Type
   192 ;;		None
   193 ;; Return value:  Size  Location     Type
   194 ;;		None               void
   195 ;; Registers used:
   196 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   197 ;; Tracked objects:
   198 ;;		On entry : 17F/0
   199 ;;		On exit  : 0/0
   200 ;;		Unchanged: 0/0
   201 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   202 ;;      Params:         0       0       0       0       0
   203 ;;      Locals:         0       0       0       0       0
   204 ;;      Temps:          0       0       0       0       0
   205 ;;      Totals:         0       0       0       0       0
   206 ;;Total ram usage:        0 bytes
   207 ;; Hardware stack levels required when called:    1
   208 ;; This function calls:
   209 ;;		_timer
   210 ;; This function is called by:
   211 ;;		Startup code after reset
   212 ;; This function uses a non-reentrant model
   213 ;;
   214                           psect	maintext
   215                           	file	"D:\Embedded\pic\code\software\timer_2\motor\motor.c"
   216                           	line	25
   217                           	global	__size_of_main
   218  002A                     	__size_of_main	equ	__end_of_main-_main
   219                           	
   220  07A8                     _main:	
   221                           	opt	stack 7
   222                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   223                           	line	26
   224                           	
   225  07A8                     l2185:	
   226                           ;motor.c: 26: PORTC=0X00;
   227  07A8  1283               	bcf	status, 5	;RP0=0, select bank0
   228  07A9  1303               	bcf	status, 6	;RP1=0, select bank0
   229  07AA  0187               	clrf	(7)	;volatile
   230                           	line	27
   231                           ;motor.c: 27: TRISC=0X00;
   232  07AB  1683               	bsf	status, 5	;RP0=1, select bank1
   233  07AC  1303               	bcf	status, 6	;RP1=0, select bank1
   234  07AD  0187               	clrf	(135)^080h	;volatile
   235                           	line	28
   236                           	
   237  07AE                     l2187:	
   238                           ;motor.c: 28: T2CON=0X7F;
   239  07AE  307F               	movlw	(07Fh)
   240  07AF  1283               	bcf	status, 5	;RP0=0, select bank0
   241  07B0  1303               	bcf	status, 6	;RP1=0, select bank0
   242  07B1  0092               	movwf	(18)	;volatile
   243  07B2  2FB3               	goto	l2189
   244                           	line	29
   245                           ;motor.c: 29: while(1)
   246                           	
   247  07B3                     l1035:	
   248                           	line	31
   249                           	
   250  07B3                     l2189:	
   251                           ;motor.c: 30: {
   252                           ;motor.c: 31: PORTC=0X01;
   253  07B3  3001               	movlw	(01h)
   254  07B4  1283               	bcf	status, 5	;RP0=0, select bank0
   255  07B5  1303               	bcf	status, 6	;RP1=0, select bank0
   256  07B6  0087               	movwf	(7)	;volatile
   257                           	line	33
   258                           	
   259  07B7                     l2191:	
   260                           ;motor.c: 33: timer(10);
   261  07B7  300A               	movlw	low(0Ah)
   262  07B8  00F2               	movwf	(?_timer)
   263  07B9  3000               	movlw	high(0Ah)
   264  07BA  00F3               	movwf	((?_timer))+1
   265  07BB  120A  118A  27D2   	fcall	_timer
              120A  118A         
   266                           	line	34
   267                           	
   268  07C0                     l2193:	
   269                           ;motor.c: 34: PORTC=0X02;
   270  07C0  3002               	movlw	(02h)
   271  07C1  1283               	bcf	status, 5	;RP0=0, select bank0
   272  07C2  1303               	bcf	status, 6	;RP1=0, select bank0
   273  07C3  0087               	movwf	(7)	;volatile
   274                           	line	36
   275                           	
   276  07C4                     l2195:	
   277                           ;motor.c: 36: timer(5);
   278  07C4  3005               	movlw	low(05h)
   279  07C5  00F2               	movwf	(?_timer)
   280  07C6  3000               	movlw	high(05h)
   281  07C7  00F3               	movwf	((?_timer))+1
   282  07C8  120A  118A  27D2   	fcall	_timer
              120A  118A         
   283  07CD  2FB3               	goto	l2189
   284                           	line	37
   285                           	
   286  07CE                     l1036:	
   287                           	line	29
   288  07CE  2FB3               	goto	l2189
   289                           	
   290  07CF                     l1037:	
   291                           	line	38
   292                           	
   293  07CF                     l1038:	
   294                           	global	start
   295  07CF  120A  118A  2800   	ljmp	start
   296                           	opt stack 0
   297                           GLOBAL	__end_of_main
   298  07D2                     	__end_of_main:
   299 ;; =============== function _main ends ============
   300                           
   301                           	signat	_main,88
   302                           	global	_timer
   303                           psect	text61,local,class=CODE,delta=2
   304                           global __ptext61
   305  07D2                     __ptext61:
   306                           
   307 ;; *************** function _timer *****************
   308 ;; Defined at:
   309 ;;		line 7 in file "D:\Embedded\pic\code\software\timer_2\motor\motor.c"
   310 ;; Parameters:    Size  Location     Type
   311 ;;  sec             2    0[COMMON] int 
   312 ;; Auto vars:     Size  Location     Type
   313 ;;		None
   314 ;; Return value:  Size  Location     Type
   315 ;;		None               void
   316 ;; Registers used:
   317 ;;		wreg, status,2, btemp+1
   318 ;; Tracked objects:
   319 ;;		On entry : 0/0
   320 ;;		On exit  : 0/0
   321 ;;		Unchanged: 0/0
   322 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   323 ;;      Params:         2       0       0       0       0
   324 ;;      Locals:         0       0       0       0       0
   325 ;;      Temps:          0       0       0       0       0
   326 ;;      Totals:         2       0       0       0       0
   327 ;;Total ram usage:        2 bytes
   328 ;; Hardware stack levels used:    1
   329 ;; This function calls:
   330 ;;		Nothing
   331 ;; This function is called by:
   332 ;;		_main
   333 ;; This function uses a non-reentrant model
   334 ;;
   335                           psect	text61
   336                           	file	"D:\Embedded\pic\code\software\timer_2\motor\motor.c"
   337                           	line	7
   338                           	global	__size_of_timer
   339  002E                     	__size_of_timer	equ	__end_of_timer-_timer
   340                           	
   341  07D2                     _timer:	
   342                           	opt	stack 7
   343                           ; Regs used in _timer: [wreg+status,2+btemp+1]
   344                           	line	8
   345                           	
   346  07D2                     l1407:	
   347                           ;motor.c: 8: while(0<sec)
   348  07D2  2FF1               	goto	l1417
   349                           	
   350  07D3                     l1028:	
   351                           	line	10
   352                           ;motor.c: 9: {
   353                           ;motor.c: 10: if(TMR2IF==1)
   354  07D3  1283               	bcf	status, 5	;RP0=0, select bank0
   355  07D4  1303               	bcf	status, 6	;RP1=0, select bank0
   356  07D5  1C8C               	btfss	(97/8),(97)&7
   357  07D6  2FD8               	goto	u11
   358  07D7  2FD9               	goto	u10
   359  07D8                     u11:
   360  07D8  2FE0               	goto	l1029
   361  07D9                     u10:
   362                           	line	12
   363                           	
   364  07D9                     l1409:	
   365                           ;motor.c: 11: {
   366                           ;motor.c: 12: count++;
   367  07D9  3001               	movlw	low(01h)
   368  07DA  07F0               	addwf	(_count),f
   369  07DB  1803               	skipnc
   370  07DC  0AF1               	incf	(_count+1),f
   371  07DD  3000               	movlw	high(01h)
   372  07DE  07F1               	addwf	(_count+1),f
   373                           	line	13
   374                           	
   375  07DF                     l1411:	
   376                           ;motor.c: 13: TMR2IF=0;
   377  07DF  108C               	bcf	(97/8),(97)&7
   378                           	line	14
   379                           	
   380  07E0                     l1029:	
   381                           	line	16
   382                           ;motor.c: 14: }
   383                           ;motor.c: 16: if(count==15)
   384  07E0  300F               	movlw	0Fh
   385  07E1  0670               	xorwf	(_count),w
   386  07E2  0471               	iorwf	(_count+1),w
   387  07E3  1D03               	skipz
   388  07E4  2FE6               	goto	u21
   389  07E5  2FE7               	goto	u20
   390  07E6                     u21:
   391  07E6  2FF1               	goto	l1417
   392  07E7                     u20:
   393                           	line	18
   394                           	
   395  07E7                     l1413:	
   396                           ;motor.c: 17: {
   397                           ;motor.c: 18: count=0;
   398  07E7  01F0               	clrf	(_count)
   399  07E8  01F1               	clrf	(_count+1)
   400                           	line	19
   401                           	
   402  07E9                     l1415:	
   403                           ;motor.c: 19: sec--;
   404  07E9  30FF               	movlw	low(-1)
   405  07EA  07F2               	addwf	(timer@sec),f
   406  07EB  1803               	skipnc
   407  07EC  0AF3               	incf	(timer@sec+1),f
   408  07ED  30FF               	movlw	high(-1)
   409  07EE  07F3               	addwf	(timer@sec+1),f
   410  07EF  2FF1               	goto	l1417
   411                           	line	20
   412                           	
   413  07F0                     l1030:	
   414  07F0  2FF1               	goto	l1417
   415                           	line	21
   416                           	
   417  07F1                     l1027:	
   418                           	line	8
   419                           	
   420  07F1                     l1417:	
   421  07F1  0873               	movf	(timer@sec+1),w
   422  07F2  3A80               	xorlw	80h
   423  07F3  00FF               	movwf	btemp+1
   424  07F4  3080               	movlw	(high(01h))^80h
   425  07F5  027F               	subwf	btemp+1,w
   426  07F6  1D03               	skipz
   427  07F7  2FFA               	goto	u35
   428  07F8  3001               	movlw	low(01h)
   429  07F9  0272               	subwf	(timer@sec),w
   430  07FA                     u35:
   431                           
   432  07FA  1803               	skipnc
   433  07FB  2FFD               	goto	u31
   434  07FC  2FFE               	goto	u30
   435  07FD                     u31:
   436  07FD  2FD3               	goto	l1028
   437  07FE                     u30:
   438  07FE  2FFF               	goto	l1032
   439                           	
   440  07FF                     l1031:	
   441                           	line	22
   442                           	
   443  07FF                     l1032:	
   444  07FF  0008               	return
   445                           	opt stack 0
   446                           GLOBAL	__end_of_timer
   447  0800                     	__end_of_timer:
   448 ;; =============== function _timer ends ============
   449                           
   450                           	signat	_timer,4216
   451                           psect	text62,local,class=CODE,delta=2
   452                           global __ptext62
   453  0000                     __ptext62:
   454                           	global	btemp
   455  007E                     	btemp set 07Eh
   456                           
   457                           	DABS	1,126,2	;btemp
   458                           	global	wtemp0
   459  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.81 build 7503 
Symbol Table                                                                                   Fri Apr 15 23:48:36 2022

                  u10 07D9                    u11 07D8                    u20 07E7                    u21 07E6  
                  u30 07FE                    u31 07FD                    u35 07FA                  l1030 07F0  
                l1031 07FF                  l1032 07FF                  l1027 07F1                  l1035 07B3  
                l1028 07D3                  l1036 07CE                  l1029 07E0                  l1037 07CF  
                l1038 07CF                  l1411 07DF                  l1413 07E7                  l1415 07E9  
                l1407 07D2                  l1409 07D9                  l1417 07F1                  l2191 07B7  
                l2193 07C0                  l2185 07A8                  l2195 07C4                  l2187 07AE  
                l2189 07B3                  _main 07A8                  btemp 007E                  start 0000  
               ?_main 0072                 _T2CON 0012                 _PORTC 0007                 _TRISC 0087  
               _count 0070                 _timer 07D2                 status 0003                 wtemp0 007E  
        __end_of_main 07D2                ??_main 0074                ?_timer 0072                _TMR2IF 0061  
      __pcstackCOMMON 0072         __end_of_timer 0800               ??_timer 0074            __pmaintext 07A8  
end_of_initialization 07A4   start_initialization 07A2           __pbssCOMMON 0070        __size_of_timer 002E  
            __ptext60 0000              __ptext61 07D2              __ptext62 0000         __size_of_main 002A  
            timer@sec 0072  
