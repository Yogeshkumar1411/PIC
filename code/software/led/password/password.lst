

HI-TECH Software PIC LITE Macro Assembler V9.81 build 7503 
                                                                                               Tue Apr 12 23:44:06 2022

HI-TECH Software Omniscient Code Generator (Lite mode) build 7503
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 7503"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F887
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           	FNROOT	_main
    43                           	global	_PORTB
    44                           psect	maintext,global,class=CODE,delta=2
    45                           global __pmaintext
    46  0762                     __pmaintext:
    47  0006                     _PORTB	set	6
    48                           	global	_PORTC
    49  0007                     _PORTC	set	7
    50                           	global	_RC0
    51  0038                     _RC0	set	56
    52                           	global	_RC1
    53  0039                     _RC1	set	57
    54                           	global	_RC2
    55  003A                     _RC2	set	58
    56                           	global	_RC3
    57  003B                     _RC3	set	59
    58                           	global	_RC4
    59  003C                     _RC4	set	60
    60                           	global	_RC5
    61  003D                     _RC5	set	61
    62                           	global	_TRISB
    63  0086                     _TRISB	set	134
    64                           	global	_TRISC
    65  0087                     _TRISC	set	135
    66                           	global	_ANSEL
    67  0188                     _ANSEL	set	392
    68                           	global	_ANSELH
    69  0189                     _ANSELH	set	393
    70                           	file	"password.as"
    71                           	line	#
    72                           psect cinit,class=CODE,delta=2
    73                           global start_initialization
    74  075E                     start_initialization:
    75                           
    76                           psect cinit,class=CODE,delta=2
    77                           global end_of_initialization
    78                           
    79                           ;End of C runtime variable initialization code
    80                           
    81  075E                     end_of_initialization:
    82  075E  0183               clrf status
    83  075F  120A  118A  2F62   ljmp _main	;jump to C main() function
    84                           psect	cstackCOMMON,class=COMMON,space=1
    85                           global __pcstackCOMMON
    86  0070                     __pcstackCOMMON:
    87                           	global	?_main
    88  0070                     ?_main:	; 0 bytes @ 0x0
    89                           	global	??_main
    90  0070                     ??_main:	; 0 bytes @ 0x0
    91                           	global	main@count
    92  0070                     main@count:	; 2 bytes @ 0x0
    93  0070                     	ds	2
    94 ;;Data sizes: Strings 0, constant 0, data 0, bss 0, persistent 0 stack 0
    95 ;;Auto spaces:   Size  Autos    Used
    96 ;; COMMON          14      2       2
    97 ;; BANK0           80      0       0
    98 ;; BANK1           80      0       0
    99 ;; BANK3           96      0       0
   100 ;; BANK2           96      0       0
   101                           
   102 ;;
   103 ;; Pointer list with targets:
   104                           
   105                           
   106                           
   107 ;;
   108 ;; Critical Paths under _main in COMMON
   109 ;;
   110 ;;   None.
   111 ;;
   112 ;; Critical Paths under _main in BANK0
   113 ;;
   114 ;;   None.
   115 ;;
   116 ;; Critical Paths under _main in BANK1
   117 ;;
   118 ;;   None.
   119 ;;
   120 ;; Critical Paths under _main in BANK3
   121 ;;
   122 ;;   None.
   123 ;;
   124 ;; Critical Paths under _main in BANK2
   125 ;;
   126 ;;   None.
   127                           
   128 ;;
   129 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   130 ;;
   131                           
   132 ;;
   133 ;;Call Graph Tables:
   134 ;;
   135 ;; ---------------------------------------------------------------------------------
   136 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   137 ;; ---------------------------------------------------------------------------------
   138 ;; (0) _main                                                 2     2      0     135
   139 ;;                                              0 COMMON     2     2      0
   140 ;; ---------------------------------------------------------------------------------
   141 ;; Estimated maximum stack depth 0
   142 ;; ---------------------------------------------------------------------------------
   143                           
   144 ;; Call Graph Graphs:
   145                           
   146 ;; _main (ROOT)
   147 ;;
   148                           
   149 ;; Address spaces:
   150                           
   151 ;;Name               Size   Autos  Total    Cost      Usage
   152 ;;BITCOMMON            E      0       0       0        0.0%
   153 ;;EEDATA             100      0       0       0        0.0%
   154 ;;NULL                 0      0       0       0        0.0%
   155 ;;CODE                 0      0       0       0        0.0%
   156 ;;COMMON               E      2       2       1       14.3%
   157 ;;BITSFR0              0      0       0       1        0.0%
   158 ;;SFR0                 0      0       0       1        0.0%
   159 ;;BITSFR1              0      0       0       2        0.0%
   160 ;;SFR1                 0      0       0       2        0.0%
   161 ;;STACK                0      0       0       2        0.0%
   162 ;;ABS                  0      0       0       3        0.0%
   163 ;;BITBANK0            50      0       0       4        0.0%
   164 ;;BITSFR3              0      0       0       4        0.0%
   165 ;;SFR3                 0      0       0       4        0.0%
   166 ;;BANK0               50      0       0       5        0.0%
   167 ;;BITSFR2              0      0       0       5        0.0%
   168 ;;SFR2                 0      0       0       5        0.0%
   169 ;;BITBANK1            50      0       0       6        0.0%
   170 ;;BANK1               50      0       0       7        0.0%
   171 ;;BITBANK3            60      0       0       8        0.0%
   172 ;;BANK3               60      0       0       9        0.0%
   173 ;;BITBANK2            60      0       0      10        0.0%
   174 ;;BANK2               60      0       0      11        0.0%
   175 ;;DATA                 0      0       0      12        0.0%
   176                           
   177                           	global	_main
   178                           psect	maintext
   179                           
   180 ;; *************** function _main *****************
   181 ;; Defined at:
   182 ;;		line 9 in file "D:\Embedded\pic\code\software\led\password\password.c"
   183 ;; Parameters:    Size  Location     Type
   184 ;;		None
   185 ;; Auto vars:     Size  Location     Type
   186 ;;  count           2    0[COMMON] int 
   187 ;; Return value:  Size  Location     Type
   188 ;;		None               void
   189 ;; Registers used:
   190 ;;		wreg, status,2, status,0
   191 ;; Tracked objects:
   192 ;;		On entry : 17F/0
   193 ;;		On exit  : 0/0
   194 ;;		Unchanged: 0/0
   195 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   196 ;;      Params:         0       0       0       0       0
   197 ;;      Locals:         2       0       0       0       0
   198 ;;      Temps:          0       0       0       0       0
   199 ;;      Totals:         2       0       0       0       0
   200 ;;Total ram usage:        2 bytes
   201 ;; This function calls:
   202 ;;		Nothing
   203 ;; This function is called by:
   204 ;;		Startup code after reset
   205 ;; This function uses a non-reentrant model
   206 ;;
   207                           psect	maintext
   208                           	file	"D:\Embedded\pic\code\software\led\password\password.c"
   209                           	line	9
   210                           	global	__size_of_main
   211  009E                     	__size_of_main	equ	__end_of_main-_main
   212                           	
   213  0762                     _main:	
   214                           	opt	stack 8
   215                           ; Regs used in _main: [wreg+status,2+status,0]
   216                           	line	10
   217                           	
   218  0762                     l1421:	
   219                           ;password.c: 10: int count=0;
   220  0762  01F0               	clrf	(main@count)
   221  0763  01F1               	clrf	(main@count+1)
   222                           	line	11
   223                           ;password.c: 11: PORTB=0X00;
   224  0764  1283               	bcf	status, 5	;RP0=0, select bank0
   225  0765  1303               	bcf	status, 6	;RP1=0, select bank0
   226  0766  0186               	clrf	(6)	;volatile
   227                           	line	12
   228                           ;password.c: 12: TRISB=0X00;
   229  0767  1683               	bsf	status, 5	;RP0=1, select bank1
   230  0768  1303               	bcf	status, 6	;RP1=0, select bank1
   231  0769  0186               	clrf	(134)^080h	;volatile
   232                           	line	13
   233                           ;password.c: 13: ANSEL=0X00;
   234  076A  1683               	bsf	status, 5	;RP0=1, select bank3
   235  076B  1703               	bsf	status, 6	;RP1=1, select bank3
   236  076C  0188               	clrf	(392)^0180h	;volatile
   237                           	line	14
   238                           ;password.c: 14: ANSELH=0X00;
   239  076D  0189               	clrf	(393)^0180h	;volatile
   240                           	line	15
   241                           ;password.c: 15: PORTC=0X00;
   242  076E  1283               	bcf	status, 5	;RP0=0, select bank0
   243  076F  1303               	bcf	status, 6	;RP1=0, select bank0
   244  0770  0187               	clrf	(7)	;volatile
   245                           	line	16
   246                           	
   247  0771                     l1423:	
   248                           ;password.c: 16: TRISC=0X3F;
   249  0771  303F               	movlw	(03Fh)
   250  0772  1683               	bsf	status, 5	;RP0=1, select bank1
   251  0773  1303               	bcf	status, 6	;RP1=0, select bank1
   252  0774  0087               	movwf	(135)^080h	;volatile
   253  0775  2F76               	goto	l1425
   254                           	line	17
   255                           ;password.c: 17: while(1)
   256                           	
   257  0776                     l1025:	
   258                           	line	19
   259                           	
   260  0776                     l1425:	
   261                           ;password.c: 18: {
   262                           ;password.c: 19: if((RC0==1)&&(count==0))
   263  0776  1283               	bcf	status, 5	;RP0=0, select bank0
   264  0777  1C07               	btfss	(56/8),(56)&7
   265  0778  2F7A               	goto	u11
   266  0779  2F7B               	goto	u10
   267  077A                     u11:
   268  077A  2F8F               	goto	l1026
   269  077B                     u10:
   270                           	
   271  077B                     l1427:	
   272  077B  0871               	movf	((main@count+1)),w
   273  077C  0470               	iorwf	((main@count)),w
   274  077D  1D03               	skipz
   275  077E  2F80               	goto	u21
   276  077F  2F81               	goto	u20
   277  0780                     u21:
   278  0780  2F8F               	goto	l1026
   279  0781                     u20:
   280                           	line	21
   281                           	
   282  0781                     l1429:	
   283                           ;password.c: 20: {
   284                           ;password.c: 21: count=count+1;
   285  0781  0870               	movf	(main@count),w
   286  0782  3E01               	addlw	low(01h)
   287  0783  00F0               	movwf	(main@count)
   288  0784  0871               	movf	(main@count+1),w
   289  0785  1803               	skipnc
   290  0786  3E01               	addlw	1
   291  0787  3E00               	addlw	high(01h)
   292  0788  00F1               	movwf	1+(main@count)
   293                           	line	22
   294                           ;password.c: 22: while(RC0==1);
   295  0789  2F8A               	goto	l1027
   296                           	
   297  078A                     l1028:	
   298                           	
   299  078A                     l1027:	
   300  078A  1807               	btfsc	(56/8),(56)&7
   301  078B  2F8D               	goto	u31
   302  078C  2F8E               	goto	u30
   303  078D                     u31:
   304  078D  2F8A               	goto	l1027
   305  078E                     u30:
   306  078E  2F8F               	goto	l1026
   307                           	
   308  078F                     l1029:	
   309                           	line	23
   310                           	
   311  078F                     l1026:	
   312                           	line	24
   313                           ;password.c: 23: }
   314                           ;password.c: 24: if((RC2==1)&&(count==1))
   315  078F  1D07               	btfss	(58/8),(58)&7
   316  0790  2F92               	goto	u41
   317  0791  2F93               	goto	u40
   318  0792                     u41:
   319  0792  2FA8               	goto	l1030
   320  0793                     u40:
   321                           	
   322  0793                     l1431:	
   323  0793  3001               	movlw	01h
   324  0794  0670               	xorwf	(main@count),w
   325  0795  0471               	iorwf	(main@count+1),w
   326  0796  1D03               	skipz
   327  0797  2F99               	goto	u51
   328  0798  2F9A               	goto	u50
   329  0799                     u51:
   330  0799  2FA8               	goto	l1030
   331  079A                     u50:
   332                           	line	26
   333                           	
   334  079A                     l1433:	
   335                           ;password.c: 25: {
   336                           ;password.c: 26: count=count+2;
   337  079A  0870               	movf	(main@count),w
   338  079B  3E02               	addlw	low(02h)
   339  079C  00F0               	movwf	(main@count)
   340  079D  0871               	movf	(main@count+1),w
   341  079E  1803               	skipnc
   342  079F  3E01               	addlw	1
   343  07A0  3E00               	addlw	high(02h)
   344  07A1  00F1               	movwf	1+(main@count)
   345                           	line	27
   346                           ;password.c: 27: while(RC2==1);
   347  07A2  2FA3               	goto	l1031
   348                           	
   349  07A3                     l1032:	
   350                           	
   351  07A3                     l1031:	
   352  07A3  1907               	btfsc	(58/8),(58)&7
   353  07A4  2FA6               	goto	u61
   354  07A5  2FA7               	goto	u60
   355  07A6                     u61:
   356  07A6  2FA3               	goto	l1031
   357  07A7                     u60:
   358  07A7  2FA8               	goto	l1030
   359                           	
   360  07A8                     l1033:	
   361                           	line	28
   362                           	
   363  07A8                     l1030:	
   364                           	line	29
   365                           ;password.c: 28: }
   366                           ;password.c: 29: if((RC1==1)&&(count==3))
   367  07A8  1C87               	btfss	(57/8),(57)&7
   368  07A9  2FAB               	goto	u71
   369  07AA  2FAC               	goto	u70
   370  07AB                     u71:
   371  07AB  2FC1               	goto	l1034
   372  07AC                     u70:
   373                           	
   374  07AC                     l1435:	
   375  07AC  3003               	movlw	03h
   376  07AD  0670               	xorwf	(main@count),w
   377  07AE  0471               	iorwf	(main@count+1),w
   378  07AF  1D03               	skipz
   379  07B0  2FB2               	goto	u81
   380  07B1  2FB3               	goto	u80
   381  07B2                     u81:
   382  07B2  2FC1               	goto	l1034
   383  07B3                     u80:
   384                           	line	31
   385                           	
   386  07B3                     l1437:	
   387                           ;password.c: 30: {
   388                           ;password.c: 31: count=count+3;
   389  07B3  0870               	movf	(main@count),w
   390  07B4  3E03               	addlw	low(03h)
   391  07B5  00F0               	movwf	(main@count)
   392  07B6  0871               	movf	(main@count+1),w
   393  07B7  1803               	skipnc
   394  07B8  3E01               	addlw	1
   395  07B9  3E00               	addlw	high(03h)
   396  07BA  00F1               	movwf	1+(main@count)
   397                           	line	32
   398                           ;password.c: 32: while(RC1==1);
   399  07BB  2FBC               	goto	l1035
   400                           	
   401  07BC                     l1036:	
   402                           	
   403  07BC                     l1035:	
   404  07BC  1887               	btfsc	(57/8),(57)&7
   405  07BD  2FBF               	goto	u91
   406  07BE  2FC0               	goto	u90
   407  07BF                     u91:
   408  07BF  2FBC               	goto	l1035
   409  07C0                     u90:
   410  07C0  2FC1               	goto	l1034
   411                           	
   412  07C1                     l1037:	
   413                           	line	33
   414                           	
   415  07C1                     l1034:	
   416                           	line	34
   417                           ;password.c: 33: }
   418                           ;password.c: 34: if((RC3==1)&&(count==6))
   419  07C1  1D87               	btfss	(59/8),(59)&7
   420  07C2  2FC4               	goto	u101
   421  07C3  2FC5               	goto	u100
   422  07C4                     u101:
   423  07C4  2FDA               	goto	l1038
   424  07C5                     u100:
   425                           	
   426  07C5                     l1439:	
   427  07C5  3006               	movlw	06h
   428  07C6  0670               	xorwf	(main@count),w
   429  07C7  0471               	iorwf	(main@count+1),w
   430  07C8  1D03               	skipz
   431  07C9  2FCB               	goto	u111
   432  07CA  2FCC               	goto	u110
   433  07CB                     u111:
   434  07CB  2FDA               	goto	l1038
   435  07CC                     u110:
   436                           	line	36
   437                           	
   438  07CC                     l1441:	
   439                           ;password.c: 35: {
   440                           ;password.c: 36: count=count+4;
   441  07CC  0870               	movf	(main@count),w
   442  07CD  3E04               	addlw	low(04h)
   443  07CE  00F0               	movwf	(main@count)
   444  07CF  0871               	movf	(main@count+1),w
   445  07D0  1803               	skipnc
   446  07D1  3E01               	addlw	1
   447  07D2  3E00               	addlw	high(04h)
   448  07D3  00F1               	movwf	1+(main@count)
   449                           	line	37
   450                           ;password.c: 37: while(RC3==1);
   451  07D4  2FD5               	goto	l1039
   452                           	
   453  07D5                     l1040:	
   454                           	
   455  07D5                     l1039:	
   456  07D5  1987               	btfsc	(59/8),(59)&7
   457  07D6  2FD8               	goto	u121
   458  07D7  2FD9               	goto	u120
   459  07D8                     u121:
   460  07D8  2FD5               	goto	l1039
   461  07D9                     u120:
   462  07D9  2FDA               	goto	l1038
   463                           	
   464  07DA                     l1041:	
   465                           	line	38
   466                           	
   467  07DA                     l1038:	
   468                           	line	39
   469                           ;password.c: 38: }
   470                           ;password.c: 39: if((RC4==1)&&(count==10))
   471  07DA  1E07               	btfss	(60/8),(60)&7
   472  07DB  2FDD               	goto	u131
   473  07DC  2FDE               	goto	u130
   474  07DD                     u131:
   475  07DD  2FED               	goto	l1042
   476  07DE                     u130:
   477                           	
   478  07DE                     l1443:	
   479  07DE  300A               	movlw	0Ah
   480  07DF  0670               	xorwf	(main@count),w
   481  07E0  0471               	iorwf	(main@count+1),w
   482  07E1  1D03               	skipz
   483  07E2  2FE4               	goto	u141
   484  07E3  2FE5               	goto	u140
   485  07E4                     u141:
   486  07E4  2FED               	goto	l1042
   487  07E5                     u140:
   488                           	line	41
   489                           	
   490  07E5                     l1445:	
   491                           ;password.c: 40: {
   492                           ;password.c: 41: PORTB=0X01;
   493  07E5  3001               	movlw	(01h)
   494  07E6  0086               	movwf	(6)	;volatile
   495                           	line	42
   496                           ;password.c: 42: while(RC4==1);
   497  07E7  2FE8               	goto	l1043
   498                           	
   499  07E8                     l1044:	
   500                           	
   501  07E8                     l1043:	
   502  07E8  1A07               	btfsc	(60/8),(60)&7
   503  07E9  2FEB               	goto	u151
   504  07EA  2FEC               	goto	u150
   505  07EB                     u151:
   506  07EB  2FE8               	goto	l1043
   507  07EC                     u150:
   508  07EC  2FED               	goto	l1042
   509                           	
   510  07ED                     l1045:	
   511                           	line	43
   512                           	
   513  07ED                     l1042:	
   514                           	line	44
   515                           ;password.c: 43: }
   516                           ;password.c: 44: if(RC5==1)
   517  07ED  1E87               	btfss	(61/8),(61)&7
   518  07EE  2FF0               	goto	u161
   519  07EF  2FF1               	goto	u160
   520  07F0                     u161:
   521  07F0  2F76               	goto	l1425
   522  07F1                     u160:
   523                           	line	46
   524                           	
   525  07F1                     l1447:	
   526                           ;password.c: 45: {
   527                           ;password.c: 46: count=0;
   528  07F1  01F0               	clrf	(main@count)
   529  07F2  01F1               	clrf	(main@count+1)
   530                           	line	47
   531                           ;password.c: 47: PORTB=0X00;
   532  07F3  0186               	clrf	(6)	;volatile
   533                           	line	48
   534                           ;password.c: 48: while(RC5==1);
   535  07F4  2FF5               	goto	l1047
   536                           	
   537  07F5                     l1048:	
   538                           	
   539  07F5                     l1047:	
   540  07F5  1A87               	btfsc	(61/8),(61)&7
   541  07F6  2FF8               	goto	u171
   542  07F7  2FF9               	goto	u170
   543  07F8                     u171:
   544  07F8  2FF5               	goto	l1047
   545  07F9                     u170:
   546  07F9  2F76               	goto	l1425
   547                           	
   548  07FA                     l1049:	
   549  07FA  2F76               	goto	l1425
   550                           	line	49
   551                           	
   552  07FB                     l1046:	
   553  07FB  2F76               	goto	l1425
   554                           	line	50
   555                           	
   556  07FC                     l1050:	
   557                           	line	17
   558  07FC  2F76               	goto	l1425
   559                           	
   560  07FD                     l1051:	
   561                           	line	51
   562                           	
   563  07FD                     l1052:	
   564                           	global	start
   565  07FD  120A  118A  2800   	ljmp	start
   566                           	opt stack 0
   567                           GLOBAL	__end_of_main
   568  0800                     	__end_of_main:
   569 ;; =============== function _main ends ============
   570                           
   571                           	signat	_main,88
   572                           psect	maintext
   573                           	global	btemp
   574  007E                     	btemp set 07Eh
   575                           
   576                           	DABS	1,126,2	;btemp
   577                           	global	wtemp0
   578  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.81 build 7503 
Symbol Table                                                                                   Tue Apr 12 23:44:06 2022

                  u10 077B                    u11 077A                    u20 0781                    u21 0780  
                  u30 078E                    u31 078D                    u40 0793                    u41 0792  
                  u50 079A                    u51 0799                    u60 07A7                    u61 07A6  
                  u70 07AC                    u71 07AB                    u80 07B3                    u81 07B2  
                  u90 07C0                    u91 07BF                   _RC0 0038                   _RC1 0039  
                 _RC2 003A                   _RC3 003B                   _RC4 003C                   _RC5 003D  
                 u100 07C5                   u101 07C4                   u110 07CC                   u111 07CB  
                 u120 07D9                   u121 07D8                   u130 07DE                   u131 07DD  
                 u140 07E5                   u141 07E4                   u150 07EC                   u151 07EB  
                 u160 07F1                   u161 07F0                   u170 07F9                   u171 07F8  
                l1030 07A8                  l1031 07A3                  l1040 07D5                  l1032 07A3  
                l1041 07DA                  l1033 07A8                  l1025 0776                  l1050 07FC  
                l1042 07ED                  l1034 07C1                  l1026 078F                  l1051 07FD  
                l1043 07E8                  l1035 07BC                  l1027 078A                  l1052 07FD  
                l1044 07E8                  l1036 07BC                  l1028 078A                  l1045 07ED  
                l1037 07C1                  l1029 078F                  l1046 07FB                  l1038 07DA  
                l1047 07F5                  l1039 07D5                  l1048 07F5                  l1049 07FA  
                l1421 0762                  l1431 0793                  l1423 0771                  l1441 07CC  
                l1433 079A                  l1425 0776                  l1443 07DE                  l1435 07AC  
                l1427 077B                  l1445 07E5                  l1437 07B3                  l1429 0781  
                l1447 07F1                  l1439 07C5                  _main 0762                  btemp 007E  
                start 0000                 ?_main 0070                 _ANSEL 0188                 _PORTB 0006  
               _PORTC 0007                 _TRISB 0086                 _TRISC 0087                 status 0003  
               wtemp0 007E          __end_of_main 0800                ??_main 0070                _ANSELH 0189  
      __pcstackCOMMON 0070            __pmaintext 0762  end_of_initialization 075E   start_initialization 075E  
           main@count 0070         __size_of_main 009E  
