

HI-TECH Software PIC LITE Macro Assembler V9.81 build 7503 
                                                                                               Tue Apr 12 23:11:43 2022

HI-TECH Software Omniscient Code Generator (Lite mode) build 7503
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 7503"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F887
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           	FNROOT	_main
    43                           	global	_PORTB
    44                           psect	maintext,global,class=CODE,delta=2
    45                           global __pmaintext
    46  07AC                     __pmaintext:
    47  0006                     _PORTB	set	6
    48                           	global	_PORTC
    49  0007                     _PORTC	set	7
    50                           	global	_RC0
    51  0038                     _RC0	set	56
    52                           	global	_RC1
    53  0039                     _RC1	set	57
    54                           	global	_RC2
    55  003A                     _RC2	set	58
    56                           	global	_TRISB
    57  0086                     _TRISB	set	134
    58                           	global	_TRISC
    59  0087                     _TRISC	set	135
    60                           	global	_ANSEL
    61  0188                     _ANSEL	set	392
    62                           	global	_ANSELH
    63  0189                     _ANSELH	set	393
    64                           	file	"interlock.as"
    65                           	line	#
    66                           psect cinit,class=CODE,delta=2
    67                           global start_initialization
    68  07A8                     start_initialization:
    69                           
    70                           psect cinit,class=CODE,delta=2
    71                           global end_of_initialization
    72                           
    73                           ;End of C runtime variable initialization code
    74                           
    75  07A8                     end_of_initialization:
    76  07A8  0183               clrf status
    77  07A9  120A  118A  2FAC   ljmp _main	;jump to C main() function
    78                           psect	cstackCOMMON,class=COMMON,space=1
    79                           global __pcstackCOMMON
    80  0070                     __pcstackCOMMON:
    81                           	global	?_main
    82  0070                     ?_main:	; 0 bytes @ 0x0
    83                           	global	??_main
    84  0070                     ??_main:	; 0 bytes @ 0x0
    85                           	global	main@flag
    86  0070                     main@flag:	; 2 bytes @ 0x0
    87  0070                     	ds	2
    88 ;;Data sizes: Strings 0, constant 0, data 0, bss 0, persistent 0 stack 0
    89 ;;Auto spaces:   Size  Autos    Used
    90 ;; COMMON          14      2       2
    91 ;; BANK0           80      0       0
    92 ;; BANK1           80      0       0
    93 ;; BANK3           96      0       0
    94 ;; BANK2           96      0       0
    95                           
    96 ;;
    97 ;; Pointer list with targets:
    98                           
    99                           
   100                           
   101 ;;
   102 ;; Critical Paths under _main in COMMON
   103 ;;
   104 ;;   None.
   105 ;;
   106 ;; Critical Paths under _main in BANK0
   107 ;;
   108 ;;   None.
   109 ;;
   110 ;; Critical Paths under _main in BANK1
   111 ;;
   112 ;;   None.
   113 ;;
   114 ;; Critical Paths under _main in BANK3
   115 ;;
   116 ;;   None.
   117 ;;
   118 ;; Critical Paths under _main in BANK2
   119 ;;
   120 ;;   None.
   121                           
   122 ;;
   123 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   124 ;;
   125                           
   126 ;;
   127 ;;Call Graph Tables:
   128 ;;
   129 ;; ---------------------------------------------------------------------------------
   130 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   131 ;; ---------------------------------------------------------------------------------
   132 ;; (0) _main                                                 2     2      0      30
   133 ;;                                              0 COMMON     2     2      0
   134 ;; ---------------------------------------------------------------------------------
   135 ;; Estimated maximum stack depth 0
   136 ;; ---------------------------------------------------------------------------------
   137                           
   138 ;; Call Graph Graphs:
   139                           
   140 ;; _main (ROOT)
   141 ;;
   142                           
   143 ;; Address spaces:
   144                           
   145 ;;Name               Size   Autos  Total    Cost      Usage
   146 ;;BITCOMMON            E      0       0       0        0.0%
   147 ;;EEDATA             100      0       0       0        0.0%
   148 ;;NULL                 0      0       0       0        0.0%
   149 ;;CODE                 0      0       0       0        0.0%
   150 ;;COMMON               E      2       2       1       14.3%
   151 ;;BITSFR0              0      0       0       1        0.0%
   152 ;;SFR0                 0      0       0       1        0.0%
   153 ;;BITSFR1              0      0       0       2        0.0%
   154 ;;SFR1                 0      0       0       2        0.0%
   155 ;;STACK                0      0       0       2        0.0%
   156 ;;ABS                  0      0       0       3        0.0%
   157 ;;BITBANK0            50      0       0       4        0.0%
   158 ;;BITSFR3              0      0       0       4        0.0%
   159 ;;SFR3                 0      0       0       4        0.0%
   160 ;;BANK0               50      0       0       5        0.0%
   161 ;;BITSFR2              0      0       0       5        0.0%
   162 ;;SFR2                 0      0       0       5        0.0%
   163 ;;BITBANK1            50      0       0       6        0.0%
   164 ;;BANK1               50      0       0       7        0.0%
   165 ;;BITBANK3            60      0       0       8        0.0%
   166 ;;BANK3               60      0       0       9        0.0%
   167 ;;BITBANK2            60      0       0      10        0.0%
   168 ;;BANK2               60      0       0      11        0.0%
   169 ;;DATA                 0      0       0      12        0.0%
   170                           
   171                           	global	_main
   172                           psect	maintext
   173                           
   174 ;; *************** function _main *****************
   175 ;; Defined at:
   176 ;;		line 7 in file "D:\Embedded\pic\code\software\led\interlock\interlock.c"
   177 ;; Parameters:    Size  Location     Type
   178 ;;		None
   179 ;; Auto vars:     Size  Location     Type
   180 ;;  flag            2    0[COMMON] int 
   181 ;; Return value:  Size  Location     Type
   182 ;;		None               void
   183 ;; Registers used:
   184 ;;		wreg, status,2, status,0
   185 ;; Tracked objects:
   186 ;;		On entry : 17F/0
   187 ;;		On exit  : 0/0
   188 ;;		Unchanged: 0/0
   189 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   190 ;;      Params:         0       0       0       0       0
   191 ;;      Locals:         2       0       0       0       0
   192 ;;      Temps:          0       0       0       0       0
   193 ;;      Totals:         2       0       0       0       0
   194 ;;Total ram usage:        2 bytes
   195 ;; This function calls:
   196 ;;		Nothing
   197 ;; This function is called by:
   198 ;;		Startup code after reset
   199 ;; This function uses a non-reentrant model
   200 ;;
   201                           psect	maintext
   202                           	file	"D:\Embedded\pic\code\software\led\interlock\interlock.c"
   203                           	line	7
   204                           	global	__size_of_main
   205  0054                     	__size_of_main	equ	__end_of_main-_main
   206                           	
   207  07AC                     _main:	
   208                           	opt	stack 8
   209                           ; Regs used in _main: [wreg+status,2+status,0]
   210                           	line	8
   211                           	
   212  07AC                     l1409:	
   213                           ;interlock.c: 8: int flag=0;
   214  07AC  01F0               	clrf	(main@flag)
   215  07AD  01F1               	clrf	(main@flag+1)
   216                           	line	9
   217                           ;interlock.c: 9: PORTC=0X00;
   218  07AE  1283               	bcf	status, 5	;RP0=0, select bank0
   219  07AF  1303               	bcf	status, 6	;RP1=0, select bank0
   220  07B0  0187               	clrf	(7)	;volatile
   221                           	line	10
   222                           	
   223  07B1                     l1411:	
   224                           ;interlock.c: 10: TRISC=0X07;
   225  07B1  3007               	movlw	(07h)
   226  07B2  1683               	bsf	status, 5	;RP0=1, select bank1
   227  07B3  1303               	bcf	status, 6	;RP1=0, select bank1
   228  07B4  0087               	movwf	(135)^080h	;volatile
   229                           	line	11
   230                           	
   231  07B5                     l1413:	
   232                           ;interlock.c: 11: ANSEL=0X00;
   233  07B5  1683               	bsf	status, 5	;RP0=1, select bank3
   234  07B6  1703               	bsf	status, 6	;RP1=1, select bank3
   235  07B7  0188               	clrf	(392)^0180h	;volatile
   236                           	line	12
   237                           	
   238  07B8                     l1415:	
   239                           ;interlock.c: 12: ANSELH=0X00;
   240  07B8  0189               	clrf	(393)^0180h	;volatile
   241                           	line	13
   242                           	
   243  07B9                     l1417:	
   244                           ;interlock.c: 13: PORTB=0X00;
   245  07B9  1283               	bcf	status, 5	;RP0=0, select bank0
   246  07BA  1303               	bcf	status, 6	;RP1=0, select bank0
   247  07BB  0186               	clrf	(6)	;volatile
   248                           	line	14
   249                           	
   250  07BC                     l1419:	
   251                           ;interlock.c: 14: TRISB=0X00;
   252  07BC  1683               	bsf	status, 5	;RP0=1, select bank1
   253  07BD  1303               	bcf	status, 6	;RP1=0, select bank1
   254  07BE  0186               	clrf	(134)^080h	;volatile
   255  07BF  2FC0               	goto	l1421
   256                           	line	15
   257                           ;interlock.c: 15: while(1)
   258                           	
   259  07C0                     l1025:	
   260                           	line	17
   261                           	
   262  07C0                     l1421:	
   263                           ;interlock.c: 16: {
   264                           ;interlock.c: 17: if(RC0==1&&flag==0)
   265  07C0  1283               	bcf	status, 5	;RP0=0, select bank0
   266  07C1  1C07               	btfss	(56/8),(56)&7
   267  07C2  2FC4               	goto	u11
   268  07C3  2FC5               	goto	u10
   269  07C4                     u11:
   270  07C4  2FD7               	goto	l1026
   271  07C5                     u10:
   272                           	
   273  07C5                     l1423:	
   274  07C5  0871               	movf	((main@flag+1)),w
   275  07C6  0470               	iorwf	((main@flag)),w
   276  07C7  1D03               	skipz
   277  07C8  2FCA               	goto	u21
   278  07C9  2FCB               	goto	u20
   279  07CA                     u21:
   280  07CA  2FD7               	goto	l1026
   281  07CB                     u20:
   282                           	line	19
   283                           	
   284  07CB                     l1425:	
   285                           ;interlock.c: 18: {
   286                           ;interlock.c: 19: PORTB=0X01;
   287  07CB  3001               	movlw	(01h)
   288  07CC  0086               	movwf	(6)	;volatile
   289                           	line	20
   290                           ;interlock.c: 20: flag=1;
   291  07CD  3001               	movlw	low(01h)
   292  07CE  00F0               	movwf	(main@flag)
   293  07CF  3000               	movlw	high(01h)
   294  07D0  00F1               	movwf	((main@flag))+1
   295                           	line	21
   296                           ;interlock.c: 21: while(RC0==1);
   297  07D1  2FD2               	goto	l1027
   298                           	
   299  07D2                     l1028:	
   300                           	
   301  07D2                     l1027:	
   302  07D2  1807               	btfsc	(56/8),(56)&7
   303  07D3  2FD5               	goto	u31
   304  07D4  2FD6               	goto	u30
   305  07D5                     u31:
   306  07D5  2FD2               	goto	l1027
   307  07D6                     u30:
   308  07D6  2FD7               	goto	l1026
   309                           	
   310  07D7                     l1029:	
   311                           	line	22
   312                           	
   313  07D7                     l1026:	
   314                           	line	23
   315                           ;interlock.c: 22: }
   316                           ;interlock.c: 23: if(RC1==1&&flag==0)
   317  07D7  1C87               	btfss	(57/8),(57)&7
   318  07D8  2FDA               	goto	u41
   319  07D9  2FDB               	goto	u40
   320  07DA                     u41:
   321  07DA  2FED               	goto	l1030
   322  07DB                     u40:
   323                           	
   324  07DB                     l1427:	
   325  07DB  0871               	movf	((main@flag+1)),w
   326  07DC  0470               	iorwf	((main@flag)),w
   327  07DD  1D03               	skipz
   328  07DE  2FE0               	goto	u51
   329  07DF  2FE1               	goto	u50
   330  07E0                     u51:
   331  07E0  2FED               	goto	l1030
   332  07E1                     u50:
   333                           	line	25
   334                           	
   335  07E1                     l1429:	
   336                           ;interlock.c: 24: {
   337                           ;interlock.c: 25: PORTB=0X02;
   338  07E1  3002               	movlw	(02h)
   339  07E2  0086               	movwf	(6)	;volatile
   340                           	line	26
   341                           ;interlock.c: 26: flag=1;
   342  07E3  3001               	movlw	low(01h)
   343  07E4  00F0               	movwf	(main@flag)
   344  07E5  3000               	movlw	high(01h)
   345  07E6  00F1               	movwf	((main@flag))+1
   346                           	line	27
   347                           ;interlock.c: 27: while(RC1==1);
   348  07E7  2FE8               	goto	l1031
   349                           	
   350  07E8                     l1032:	
   351                           	
   352  07E8                     l1031:	
   353  07E8  1887               	btfsc	(57/8),(57)&7
   354  07E9  2FEB               	goto	u61
   355  07EA  2FEC               	goto	u60
   356  07EB                     u61:
   357  07EB  2FE8               	goto	l1031
   358  07EC                     u60:
   359  07EC  2FED               	goto	l1030
   360                           	
   361  07ED                     l1033:	
   362                           	line	28
   363                           	
   364  07ED                     l1030:	
   365                           	line	29
   366                           ;interlock.c: 28: }
   367                           ;interlock.c: 29: if(RC2==1)
   368  07ED  1D07               	btfss	(58/8),(58)&7
   369  07EE  2FF0               	goto	u71
   370  07EF  2FF1               	goto	u70
   371  07F0                     u71:
   372  07F0  2FC0               	goto	l1421
   373  07F1                     u70:
   374                           	line	31
   375                           	
   376  07F1                     l1431:	
   377                           ;interlock.c: 30: {
   378                           ;interlock.c: 31: flag=0;
   379  07F1  01F0               	clrf	(main@flag)
   380  07F2  01F1               	clrf	(main@flag+1)
   381                           	line	32
   382                           ;interlock.c: 32: PORTB=0X00;
   383  07F3  0186               	clrf	(6)	;volatile
   384                           	line	33
   385                           ;interlock.c: 33: while(RC2==1);
   386  07F4  2FF5               	goto	l1035
   387                           	
   388  07F5                     l1036:	
   389                           	
   390  07F5                     l1035:	
   391  07F5  1907               	btfsc	(58/8),(58)&7
   392  07F6  2FF8               	goto	u81
   393  07F7  2FF9               	goto	u80
   394  07F8                     u81:
   395  07F8  2FF5               	goto	l1035
   396  07F9                     u80:
   397  07F9  2FC0               	goto	l1421
   398                           	
   399  07FA                     l1037:	
   400  07FA  2FC0               	goto	l1421
   401                           	line	34
   402                           	
   403  07FB                     l1034:	
   404  07FB  2FC0               	goto	l1421
   405                           	line	35
   406                           	
   407  07FC                     l1038:	
   408                           	line	15
   409  07FC  2FC0               	goto	l1421
   410                           	
   411  07FD                     l1039:	
   412                           	line	36
   413                           	
   414  07FD                     l1040:	
   415                           	global	start
   416  07FD  120A  118A  2800   	ljmp	start
   417                           	opt stack 0
   418                           GLOBAL	__end_of_main
   419  0800                     	__end_of_main:
   420 ;; =============== function _main ends ============
   421                           
   422                           	signat	_main,88
   423                           psect	maintext
   424                           	global	btemp
   425  007E                     	btemp set 07Eh
   426                           
   427                           	DABS	1,126,2	;btemp
   428                           	global	wtemp0
   429  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.81 build 7503 
Symbol Table                                                                                   Tue Apr 12 23:11:43 2022

                  u10 07C5                    u11 07C4                    u20 07CB                    u21 07CA  
                  u30 07D6                    u31 07D5                    u40 07DB                    u41 07DA  
                  u50 07E1                    u51 07E0                    u60 07EC                    u61 07EB  
                  u70 07F1                    u71 07F0                    u80 07F9                    u81 07F8  
                 _RC0 0038                   _RC1 0039                   _RC2 003A                  l1030 07ED  
                l1031 07E8                  l1040 07FD                  l1032 07E8                  l1033 07ED  
                l1025 07C0                  l1034 07FB                  l1026 07D7                  l1035 07F5  
                l1027 07D2                  l1036 07F5                  l1028 07D2                  l1037 07FA  
                l1029 07D7                  l1038 07FC                  l1039 07FD                  l1411 07B1  
                l1421 07C0                  l1413 07B5                  l1431 07F1                  l1423 07C5  
                l1415 07B8                  l1425 07CB                  l1417 07B9                  l1409 07AC  
                l1427 07DB                  l1419 07BC                  l1429 07E1                  _main 07AC  
                btemp 007E                  start 0000                 ?_main 0070                 _ANSEL 0188  
               _PORTB 0006                 _PORTC 0007                 _TRISB 0086                 _TRISC 0087  
               status 0003                 wtemp0 007E          __end_of_main 0800                ??_main 0070  
              _ANSELH 0189        __pcstackCOMMON 0070            __pmaintext 07AC  end_of_initialization 07A8  
 start_initialization 07A8         __size_of_main 0054              main@flag 0070  
