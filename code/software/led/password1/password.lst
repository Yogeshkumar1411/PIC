

HI-TECH Software PIC LITE Macro Assembler V9.81 build 7503 
                                                                                               Fri Mar 11 20:40:04 2022

HI-TECH Software Omniscient Code Generator (Lite mode) build 7503
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 7503"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F887
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           	FNROOT	_main
    43                           	global	_PORTA
    44                           psect	maintext,global,class=CODE,delta=2
    45                           global __pmaintext
    46  076A                     __pmaintext:
    47  0005                     _PORTA	set	5
    48                           	global	_PORTC
    49  0007                     _PORTC	set	7
    50                           	global	_RC0
    51  0038                     _RC0	set	56
    52                           	global	_RC1
    53  0039                     _RC1	set	57
    54                           	global	_RC2
    55  003A                     _RC2	set	58
    56                           	global	_RC3
    57  003B                     _RC3	set	59
    58                           	global	_RC4
    59  003C                     _RC4	set	60
    60                           	global	_RC5
    61  003D                     _RC5	set	61
    62                           	global	_TRISA
    63  0085                     _TRISA	set	133
    64                           	global	_TRISC
    65  0087                     _TRISC	set	135
    66                           	global	_ANSEL
    67  0188                     _ANSEL	set	392
    68                           	global	_ANSELH
    69  0189                     _ANSELH	set	393
    70                           	file	"password.as"
    71                           	line	#
    72                           psect cinit,class=CODE,delta=2
    73                           global start_initialization
    74  0766                     start_initialization:
    75                           
    76                           psect cinit,class=CODE,delta=2
    77                           global end_of_initialization
    78                           
    79                           ;End of C runtime variable initialization code
    80                           
    81  0766                     end_of_initialization:
    82  0766  0183               clrf status
    83  0767  120A  118A  2F6A   ljmp _main	;jump to C main() function
    84                           psect	cstackCOMMON,class=COMMON,space=1
    85                           global __pcstackCOMMON
    86  0070                     __pcstackCOMMON:
    87                           	global	?_main
    88  0070                     ?_main:	; 0 bytes @ 0x0
    89                           	global	??_main
    90  0070                     ??_main:	; 0 bytes @ 0x0
    91                           	global	main@count
    92  0070                     main@count:	; 2 bytes @ 0x0
    93  0070                     	ds	2
    94 ;;Data sizes: Strings 0, constant 0, data 0, bss 0, persistent 0 stack 0
    95 ;;Auto spaces:   Size  Autos    Used
    96 ;; COMMON          14      2       2
    97 ;; BANK0           80      0       0
    98 ;; BANK1           80      0       0
    99 ;; BANK3           96      0       0
   100 ;; BANK2           96      0       0
   101                           
   102 ;;
   103 ;; Pointer list with targets:
   104                           
   105                           
   106                           
   107 ;;
   108 ;; Critical Paths under _main in COMMON
   109 ;;
   110 ;;   None.
   111 ;;
   112 ;; Critical Paths under _main in BANK0
   113 ;;
   114 ;;   None.
   115 ;;
   116 ;; Critical Paths under _main in BANK1
   117 ;;
   118 ;;   None.
   119 ;;
   120 ;; Critical Paths under _main in BANK3
   121 ;;
   122 ;;   None.
   123 ;;
   124 ;; Critical Paths under _main in BANK2
   125 ;;
   126 ;;   None.
   127                           
   128 ;;
   129 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   130 ;;
   131                           
   132 ;;
   133 ;;Call Graph Tables:
   134 ;;
   135 ;; ---------------------------------------------------------------------------------
   136 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   137 ;; ---------------------------------------------------------------------------------
   138 ;; (0) _main                                                 2     2      0      75
   139 ;;                                              0 COMMON     2     2      0
   140 ;; ---------------------------------------------------------------------------------
   141 ;; Estimated maximum stack depth 0
   142 ;; ---------------------------------------------------------------------------------
   143                           
   144 ;; Call Graph Graphs:
   145                           
   146 ;; _main (ROOT)
   147 ;;
   148                           
   149 ;; Address spaces:
   150                           
   151 ;;Name               Size   Autos  Total    Cost      Usage
   152 ;;BITCOMMON            E      0       0       0        0.0%
   153 ;;EEDATA             100      0       0       0        0.0%
   154 ;;NULL                 0      0       0       0        0.0%
   155 ;;CODE                 0      0       0       0        0.0%
   156 ;;COMMON               E      2       2       1       14.3%
   157 ;;BITSFR0              0      0       0       1        0.0%
   158 ;;SFR0                 0      0       0       1        0.0%
   159 ;;BITSFR1              0      0       0       2        0.0%
   160 ;;SFR1                 0      0       0       2        0.0%
   161 ;;STACK                0      0       0       2        0.0%
   162 ;;ABS                  0      0       0       3        0.0%
   163 ;;BITBANK0            50      0       0       4        0.0%
   164 ;;BITSFR3              0      0       0       4        0.0%
   165 ;;SFR3                 0      0       0       4        0.0%
   166 ;;BANK0               50      0       0       5        0.0%
   167 ;;BITSFR2              0      0       0       5        0.0%
   168 ;;SFR2                 0      0       0       5        0.0%
   169 ;;BITBANK1            50      0       0       6        0.0%
   170 ;;BANK1               50      0       0       7        0.0%
   171 ;;BITBANK3            60      0       0       8        0.0%
   172 ;;BANK3               60      0       0       9        0.0%
   173 ;;BITBANK2            60      0       0      10        0.0%
   174 ;;BANK2               60      0       0      11        0.0%
   175 ;;DATA                 0      0       0      12        0.0%
   176                           
   177                           	global	_main
   178                           psect	maintext
   179                           
   180 ;; *************** function _main *****************
   181 ;; Defined at:
   182 ;;		line 9 in file "D:\Embedded\pic\code\software\led\password1\password.c"
   183 ;; Parameters:    Size  Location     Type
   184 ;;		None
   185 ;; Auto vars:     Size  Location     Type
   186 ;;  count           2    0[COMMON] int 
   187 ;; Return value:  Size  Location     Type
   188 ;;		None               void
   189 ;; Registers used:
   190 ;;		wreg, status,2, status,0
   191 ;; Tracked objects:
   192 ;;		On entry : 17F/0
   193 ;;		On exit  : 0/0
   194 ;;		Unchanged: 0/0
   195 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   196 ;;      Params:         0       0       0       0       0
   197 ;;      Locals:         2       0       0       0       0
   198 ;;      Temps:          0       0       0       0       0
   199 ;;      Totals:         2       0       0       0       0
   200 ;;Total ram usage:        2 bytes
   201 ;; This function calls:
   202 ;;		Nothing
   203 ;; This function is called by:
   204 ;;		Startup code after reset
   205 ;; This function uses a non-reentrant model
   206 ;;
   207                           psect	maintext
   208                           	file	"D:\Embedded\pic\code\software\led\password1\password.c"
   209                           	line	9
   210                           	global	__size_of_main
   211  0096                     	__size_of_main	equ	__end_of_main-_main
   212                           	
   213  076A                     _main:	
   214                           	opt	stack 8
   215                           ; Regs used in _main: [wreg+status,2+status,0]
   216                           	line	10
   217                           	
   218  076A                     l1421:	
   219                           ;password.c: 10: int count=0;
   220  076A  01F0               	clrf	(main@count)
   221  076B  01F1               	clrf	(main@count+1)
   222                           	line	11
   223                           ;password.c: 11: PORTA=0X00;
   224  076C  1283               	bcf	status, 5	;RP0=0, select bank0
   225  076D  1303               	bcf	status, 6	;RP1=0, select bank0
   226  076E  0185               	clrf	(5)	;volatile
   227                           	line	12
   228                           ;password.c: 12: TRISA=0X00;
   229  076F  1683               	bsf	status, 5	;RP0=1, select bank1
   230  0770  1303               	bcf	status, 6	;RP1=0, select bank1
   231  0771  0185               	clrf	(133)^080h	;volatile
   232                           	line	13
   233                           ;password.c: 13: ANSEL=0X00;
   234  0772  1683               	bsf	status, 5	;RP0=1, select bank3
   235  0773  1703               	bsf	status, 6	;RP1=1, select bank3
   236  0774  0188               	clrf	(392)^0180h	;volatile
   237                           	line	14
   238                           ;password.c: 14: ANSELH=0X00;
   239  0775  0189               	clrf	(393)^0180h	;volatile
   240                           	line	15
   241                           ;password.c: 15: PORTC=0X00;
   242  0776  1283               	bcf	status, 5	;RP0=0, select bank0
   243  0777  1303               	bcf	status, 6	;RP1=0, select bank0
   244  0778  0187               	clrf	(7)	;volatile
   245                           	line	16
   246                           	
   247  0779                     l1423:	
   248                           ;password.c: 16: TRISC=0X1F;
   249  0779  301F               	movlw	(01Fh)
   250  077A  1683               	bsf	status, 5	;RP0=1, select bank1
   251  077B  1303               	bcf	status, 6	;RP1=0, select bank1
   252  077C  0087               	movwf	(135)^080h	;volatile
   253  077D  2F7E               	goto	l1425
   254                           	line	17
   255                           ;password.c: 17: while(1)
   256                           	
   257  077E                     l1025:	
   258                           	line	19
   259                           	
   260  077E                     l1425:	
   261                           ;password.c: 18: {
   262                           ;password.c: 19: if((RC0==1)&&(count==0))
   263  077E  1283               	bcf	status, 5	;RP0=0, select bank0
   264  077F  1C07               	btfss	(56/8),(56)&7
   265  0780  2F82               	goto	u11
   266  0781  2F83               	goto	u10
   267  0782                     u11:
   268  0782  2F95               	goto	l1026
   269  0783                     u10:
   270                           	
   271  0783                     l1427:	
   272  0783  0871               	movf	((main@count+1)),w
   273  0784  0470               	iorwf	((main@count)),w
   274  0785  1D03               	skipz
   275  0786  2F88               	goto	u21
   276  0787  2F89               	goto	u20
   277  0788                     u21:
   278  0788  2F95               	goto	l1026
   279  0789                     u20:
   280                           	line	21
   281                           	
   282  0789                     l1429:	
   283                           ;password.c: 20: {
   284                           ;password.c: 21: count++;
   285  0789  3001               	movlw	low(01h)
   286  078A  07F0               	addwf	(main@count),f
   287  078B  1803               	skipnc
   288  078C  0AF1               	incf	(main@count+1),f
   289  078D  3000               	movlw	high(01h)
   290  078E  07F1               	addwf	(main@count+1),f
   291                           	line	22
   292                           ;password.c: 22: while(RC0==1);
   293  078F  2F90               	goto	l1027
   294                           	
   295  0790                     l1028:	
   296                           	
   297  0790                     l1027:	
   298  0790  1807               	btfsc	(56/8),(56)&7
   299  0791  2F93               	goto	u31
   300  0792  2F94               	goto	u30
   301  0793                     u31:
   302  0793  2F90               	goto	l1027
   303  0794                     u30:
   304  0794  2F95               	goto	l1026
   305                           	
   306  0795                     l1029:	
   307                           	line	23
   308                           	
   309  0795                     l1026:	
   310                           	line	24
   311                           ;password.c: 23: }
   312                           ;password.c: 24: if((RC2==1)&&(count==1))
   313  0795  1D07               	btfss	(58/8),(58)&7
   314  0796  2F98               	goto	u41
   315  0797  2F99               	goto	u40
   316  0798                     u41:
   317  0798  2FAC               	goto	l1030
   318  0799                     u40:
   319                           	
   320  0799                     l1431:	
   321  0799  3001               	movlw	01h
   322  079A  0670               	xorwf	(main@count),w
   323  079B  0471               	iorwf	(main@count+1),w
   324  079C  1D03               	skipz
   325  079D  2F9F               	goto	u51
   326  079E  2FA0               	goto	u50
   327  079F                     u51:
   328  079F  2FAC               	goto	l1030
   329  07A0                     u50:
   330                           	line	26
   331                           	
   332  07A0                     l1433:	
   333                           ;password.c: 25: {
   334                           ;password.c: 26: count++;
   335  07A0  3001               	movlw	low(01h)
   336  07A1  07F0               	addwf	(main@count),f
   337  07A2  1803               	skipnc
   338  07A3  0AF1               	incf	(main@count+1),f
   339  07A4  3000               	movlw	high(01h)
   340  07A5  07F1               	addwf	(main@count+1),f
   341                           	line	27
   342                           ;password.c: 27: while(RC2==1);
   343  07A6  2FA7               	goto	l1031
   344                           	
   345  07A7                     l1032:	
   346                           	
   347  07A7                     l1031:	
   348  07A7  1907               	btfsc	(58/8),(58)&7
   349  07A8  2FAA               	goto	u61
   350  07A9  2FAB               	goto	u60
   351  07AA                     u61:
   352  07AA  2FA7               	goto	l1031
   353  07AB                     u60:
   354  07AB  2FAC               	goto	l1030
   355                           	
   356  07AC                     l1033:	
   357                           	line	28
   358                           	
   359  07AC                     l1030:	
   360                           	line	29
   361                           ;password.c: 28: }
   362                           ;password.c: 29: if((RC1==1)&&(count==2))
   363  07AC  1C87               	btfss	(57/8),(57)&7
   364  07AD  2FAF               	goto	u71
   365  07AE  2FB0               	goto	u70
   366  07AF                     u71:
   367  07AF  2FC3               	goto	l1034
   368  07B0                     u70:
   369                           	
   370  07B0                     l1435:	
   371  07B0  3002               	movlw	02h
   372  07B1  0670               	xorwf	(main@count),w
   373  07B2  0471               	iorwf	(main@count+1),w
   374  07B3  1D03               	skipz
   375  07B4  2FB6               	goto	u81
   376  07B5  2FB7               	goto	u80
   377  07B6                     u81:
   378  07B6  2FC3               	goto	l1034
   379  07B7                     u80:
   380                           	line	31
   381                           	
   382  07B7                     l1437:	
   383                           ;password.c: 30: {
   384                           ;password.c: 31: count++;
   385  07B7  3001               	movlw	low(01h)
   386  07B8  07F0               	addwf	(main@count),f
   387  07B9  1803               	skipnc
   388  07BA  0AF1               	incf	(main@count+1),f
   389  07BB  3000               	movlw	high(01h)
   390  07BC  07F1               	addwf	(main@count+1),f
   391                           	line	32
   392                           ;password.c: 32: while(RC1==1);
   393  07BD  2FBE               	goto	l1035
   394                           	
   395  07BE                     l1036:	
   396                           	
   397  07BE                     l1035:	
   398  07BE  1887               	btfsc	(57/8),(57)&7
   399  07BF  2FC1               	goto	u91
   400  07C0  2FC2               	goto	u90
   401  07C1                     u91:
   402  07C1  2FBE               	goto	l1035
   403  07C2                     u90:
   404  07C2  2FC3               	goto	l1034
   405                           	
   406  07C3                     l1037:	
   407                           	line	33
   408                           	
   409  07C3                     l1034:	
   410                           	line	34
   411                           ;password.c: 33: }
   412                           ;password.c: 34: if((RC3==1)&&(count==3))
   413  07C3  1D87               	btfss	(59/8),(59)&7
   414  07C4  2FC6               	goto	u101
   415  07C5  2FC7               	goto	u100
   416  07C6                     u101:
   417  07C6  2FDA               	goto	l1038
   418  07C7                     u100:
   419                           	
   420  07C7                     l1439:	
   421  07C7  3003               	movlw	03h
   422  07C8  0670               	xorwf	(main@count),w
   423  07C9  0471               	iorwf	(main@count+1),w
   424  07CA  1D03               	skipz
   425  07CB  2FCD               	goto	u111
   426  07CC  2FCE               	goto	u110
   427  07CD                     u111:
   428  07CD  2FDA               	goto	l1038
   429  07CE                     u110:
   430                           	line	36
   431                           	
   432  07CE                     l1441:	
   433                           ;password.c: 35: {
   434                           ;password.c: 36: count++;
   435  07CE  3001               	movlw	low(01h)
   436  07CF  07F0               	addwf	(main@count),f
   437  07D0  1803               	skipnc
   438  07D1  0AF1               	incf	(main@count+1),f
   439  07D2  3000               	movlw	high(01h)
   440  07D3  07F1               	addwf	(main@count+1),f
   441                           	line	37
   442                           ;password.c: 37: while(RC3==1);
   443  07D4  2FD5               	goto	l1039
   444                           	
   445  07D5                     l1040:	
   446                           	
   447  07D5                     l1039:	
   448  07D5  1987               	btfsc	(59/8),(59)&7
   449  07D6  2FD8               	goto	u121
   450  07D7  2FD9               	goto	u120
   451  07D8                     u121:
   452  07D8  2FD5               	goto	l1039
   453  07D9                     u120:
   454  07D9  2FDA               	goto	l1038
   455                           	
   456  07DA                     l1041:	
   457                           	line	38
   458                           	
   459  07DA                     l1038:	
   460                           	line	39
   461                           ;password.c: 38: }
   462                           ;password.c: 39: if((RC4==1)&&(count==4))
   463  07DA  1E07               	btfss	(60/8),(60)&7
   464  07DB  2FDD               	goto	u131
   465  07DC  2FDE               	goto	u130
   466  07DD                     u131:
   467  07DD  2FED               	goto	l1042
   468  07DE                     u130:
   469                           	
   470  07DE                     l1443:	
   471  07DE  3004               	movlw	04h
   472  07DF  0670               	xorwf	(main@count),w
   473  07E0  0471               	iorwf	(main@count+1),w
   474  07E1  1D03               	skipz
   475  07E2  2FE4               	goto	u141
   476  07E3  2FE5               	goto	u140
   477  07E4                     u141:
   478  07E4  2FED               	goto	l1042
   479  07E5                     u140:
   480                           	line	41
   481                           	
   482  07E5                     l1445:	
   483                           ;password.c: 40: {
   484                           ;password.c: 41: PORTA=0X01;
   485  07E5  3001               	movlw	(01h)
   486  07E6  0085               	movwf	(5)	;volatile
   487                           	line	42
   488                           ;password.c: 42: while(RC4==1);
   489  07E7  2FE8               	goto	l1043
   490                           	
   491  07E8                     l1044:	
   492                           	
   493  07E8                     l1043:	
   494  07E8  1A07               	btfsc	(60/8),(60)&7
   495  07E9  2FEB               	goto	u151
   496  07EA  2FEC               	goto	u150
   497  07EB                     u151:
   498  07EB  2FE8               	goto	l1043
   499  07EC                     u150:
   500  07EC  2FED               	goto	l1042
   501                           	
   502  07ED                     l1045:	
   503                           	line	43
   504                           	
   505  07ED                     l1042:	
   506                           	line	44
   507                           ;password.c: 43: }
   508                           ;password.c: 44: if(RC5==1)
   509  07ED  1E87               	btfss	(61/8),(61)&7
   510  07EE  2FF0               	goto	u161
   511  07EF  2FF1               	goto	u160
   512  07F0                     u161:
   513  07F0  2F7E               	goto	l1425
   514  07F1                     u160:
   515                           	line	46
   516                           	
   517  07F1                     l1447:	
   518                           ;password.c: 45: {
   519                           ;password.c: 46: count=0;
   520  07F1  01F0               	clrf	(main@count)
   521  07F2  01F1               	clrf	(main@count+1)
   522                           	line	47
   523                           ;password.c: 47: PORTA=0X00;
   524  07F3  0185               	clrf	(5)	;volatile
   525                           	line	48
   526                           ;password.c: 48: while(RC5==1);
   527  07F4  2FF5               	goto	l1047
   528                           	
   529  07F5                     l1048:	
   530                           	
   531  07F5                     l1047:	
   532  07F5  1A87               	btfsc	(61/8),(61)&7
   533  07F6  2FF8               	goto	u171
   534  07F7  2FF9               	goto	u170
   535  07F8                     u171:
   536  07F8  2FF5               	goto	l1047
   537  07F9                     u170:
   538  07F9  2F7E               	goto	l1425
   539                           	
   540  07FA                     l1049:	
   541  07FA  2F7E               	goto	l1425
   542                           	line	49
   543                           	
   544  07FB                     l1046:	
   545  07FB  2F7E               	goto	l1425
   546                           	line	50
   547                           	
   548  07FC                     l1050:	
   549                           	line	17
   550  07FC  2F7E               	goto	l1425
   551                           	
   552  07FD                     l1051:	
   553                           	line	51
   554                           	
   555  07FD                     l1052:	
   556                           	global	start
   557  07FD  120A  118A  2800   	ljmp	start
   558                           	opt stack 0
   559                           GLOBAL	__end_of_main
   560  0800                     	__end_of_main:
   561 ;; =============== function _main ends ============
   562                           
   563                           	signat	_main,88
   564                           psect	maintext
   565                           	global	btemp
   566  007E                     	btemp set 07Eh
   567                           
   568                           	DABS	1,126,2	;btemp
   569                           	global	wtemp0
   570  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.81 build 7503 
Symbol Table                                                                                   Fri Mar 11 20:40:04 2022

                  u10 0783                    u11 0782                    u20 0789                    u21 0788  
                  u30 0794                    u31 0793                    u40 0799                    u41 0798  
                  u50 07A0                    u51 079F                    u60 07AB                    u61 07AA  
                  u70 07B0                    u71 07AF                    u80 07B7                    u81 07B6  
                  u90 07C2                    u91 07C1                   _RC0 0038                   _RC1 0039  
                 _RC2 003A                   _RC3 003B                   _RC4 003C                   _RC5 003D  
                 u100 07C7                   u101 07C6                   u110 07CE                   u111 07CD  
                 u120 07D9                   u121 07D8                   u130 07DE                   u131 07DD  
                 u140 07E5                   u141 07E4                   u150 07EC                   u151 07EB  
                 u160 07F1                   u161 07F0                   u170 07F9                   u171 07F8  
                l1030 07AC                  l1031 07A7                  l1040 07D5                  l1032 07A7  
                l1041 07DA                  l1033 07AC                  l1025 077E                  l1050 07FC  
                l1042 07ED                  l1034 07C3                  l1026 0795                  l1051 07FD  
                l1043 07E8                  l1035 07BE                  l1027 0790                  l1052 07FD  
                l1044 07E8                  l1036 07BE                  l1028 0790                  l1045 07ED  
                l1037 07C3                  l1029 0795                  l1046 07FB                  l1038 07DA  
                l1047 07F5                  l1039 07D5                  l1048 07F5                  l1049 07FA  
                l1421 076A                  l1431 0799                  l1423 0779                  l1441 07CE  
                l1433 07A0                  l1425 077E                  l1443 07DE                  l1435 07B0  
                l1427 0783                  l1445 07E5                  l1437 07B7                  l1429 0789  
                l1447 07F1                  l1439 07C7                  _main 076A                  btemp 007E  
                start 0000                 ?_main 0070                 _ANSEL 0188                 _PORTA 0005  
               _PORTC 0007                 _TRISA 0085                 _TRISC 0087                 status 0003  
               wtemp0 007E          __end_of_main 0800                ??_main 0070                _ANSELH 0189  
      __pcstackCOMMON 0070            __pmaintext 076A  end_of_initialization 0766   start_initialization 0766  
           main@count 0070         __size_of_main 0096  
