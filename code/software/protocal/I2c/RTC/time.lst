

HI-TECH Software PIC LITE Macro Assembler V9.81 build 7503 
                                                                                               Tue Jun 28 11:48:16 2022

HI-TECH Software Omniscient Code Generator (Lite mode) build 7503
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 7503"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F887
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           	FNCALL	_main,_lcd_cmd
    43                           	FNCALL	_main,_I2C_Start
    44                           	FNCALL	_main,_I2C_Slave
    45                           	FNCALL	_main,_I2C_Restart
    46                           	FNCALL	_main,_I2C_Read
    47                           	FNCALL	_main,_I2C_Stop
    48                           	FNCALL	_main,_conversion
    49                           	FNCALL	_main,_delay
    50                           	FNCALL	_conversion,_lcd_cmd
    51                           	FNCALL	_conversion,_string
    52                           	FNCALL	_string,_lcd_cmd
    53                           	FNCALL	_I2C_Restart,_hold
    54                           	FNCALL	_I2C_Slave,_hold
    55                           	FNCALL	_I2C_Stop,_hold
    56                           	FNCALL	_I2C_Start,_hold
    57                           	FNCALL	_lcd_cmd,_delay
    58                           	FNROOT	_main
    59                           	global	_PORTC
    60                           psect	text276,local,class=CODE,delta=2
    61                           global __ptext276
    62  0000                     __ptext276:
    63  0007                     _PORTC	set	7
    64                           	global	_PORTD
    65  0008                     _PORTD	set	8
    66                           	global	_PORTE
    67  0009                     _PORTE	set	9
    68                           	global	_SSPBUF
    69  0013                     _SSPBUF	set	19
    70                           	global	_SSPCON
    71  0014                     _SSPCON	set	20
    72                           	global	_RC0
    73  0038                     _RC0	set	56
    74                           	global	_RE0
    75  0048                     _RE0	set	72
    76                           	global	_RE1
    77  0049                     _RE1	set	73
    78                           	global	_SSPIF
    79  0063                     _SSPIF	set	99
    80                           	global	_SSPOV
    81  00A6                     _SSPOV	set	166
    82                           	global	_SSPADD
    83  0093                     _SSPADD	set	147
    84                           	global	_TRISC
    85  0087                     _TRISC	set	135
    86                           	global	_TRISD
    87  0088                     _TRISD	set	136
    88                           	global	_TRISE
    89  0089                     _TRISE	set	137
    90                           	global	_ACKDT
    91  048D                     _ACKDT	set	1165
    92                           	global	_ACKEN
    93  048C                     _ACKEN	set	1164
    94                           	global	_ACKSTAT
    95  048E                     _ACKSTAT	set	1166
    96                           	global	_BF
    97  04A0                     _BF	set	1184
    98                           	global	_PEN
    99  048A                     _PEN	set	1162
   100                           	global	_RCEN
   101  048B                     _RCEN	set	1163
   102                           	global	_RSEN
   103  0489                     _RSEN	set	1161
   104                           	global	_SEN
   105  0488                     _SEN	set	1160
   106                           	global	_SMP
   107  04A7                     _SMP	set	1191
   108                           	global	_ANSEL
   109  0188                     _ANSEL	set	392
   110                           	global	_ANSELH
   111  0189                     _ANSELH	set	393
   112                           psect	strings,class=STRING,delta=2
   113                           global __pstrings
   114  0003                     __pstrings:
   115                           ;	global	stringdir,stringtab,__stringbase
   116  0003                     stringtab:
   117                           ;	String table - string pointers are 1 byte each
   118  0003                     stringcode:stringdir:
      + 0003                     stringdir:	
   119  0003  3000               movlw high(stringdir)
   120  0004  008A               movwf pclath
   121  0005  0804               movf fsr,w
   122  0006  0A84               incf fsr
   123  0007  0782               	addwf pc
   124  0008                     __stringbase:
   125  0008  3400               	retlw	0
   126                           psect	strings
   127                           	
   128  0009                     STR_1:	
   129  0009  3474               	retlw	116	;'t'
   130  000A  3469               	retlw	105	;'i'
   131  000B  346D               	retlw	109	;'m'
   132  000C  3465               	retlw	101	;'e'
   133  000D  343A               	retlw	58	;':'
   134  000E  3420               	retlw	32	;' '
   135  000F  3400               	retlw	0
   136                           psect	strings
   137                           	
   138  0010                     STR_2:	
   139  0010  3444               	retlw	68	;'D'
   140  0011  3461               	retlw	97	;'a'
   141  0012  3474               	retlw	116	;'t'
   142  0013  3465               	retlw	101	;'e'
   143  0014  343A               	retlw	58	;':'
   144  0015  3420               	retlw	32	;' '
   145  0016  3400               	retlw	0
   146                           psect	strings
   147                           	file	"time.as"
   148                           	line	#
   149                           psect cinit,class=CODE,delta=2
   150                           global start_initialization
   151  0550                     start_initialization:
   152                           
   153                           psect cinit,class=CODE,delta=2
   154                           global end_of_initialization
   155                           
   156                           ;End of C runtime variable initialization code
   157                           
   158  0550                     end_of_initialization:
   159  0550  0183               clrf status
   160  0551  120A  118A  2E0E   ljmp _main	;jump to C main() function
   161                           psect	cstackCOMMON,class=COMMON,space=1
   162                           global __pcstackCOMMON
   163  0070                     __pcstackCOMMON:
   164                           	global	?_delay
   165  0070                     ?_delay:	; 0 bytes @ 0x0
   166                           	global	?_hold
   167  0070                     ?_hold:	; 0 bytes @ 0x0
   168                           	global	??_hold
   169  0070                     ??_hold:	; 0 bytes @ 0x0
   170                           	global	?_I2C_Start
   171  0070                     ?_I2C_Start:	; 0 bytes @ 0x0
   172                           	global	??_I2C_Start
   173  0070                     ??_I2C_Start:	; 0 bytes @ 0x0
   174                           	global	?_I2C_Stop
   175  0070                     ?_I2C_Stop:	; 0 bytes @ 0x0
   176                           	global	??_I2C_Stop
   177  0070                     ??_I2C_Stop:	; 0 bytes @ 0x0
   178                           	global	?_I2C_Slave
   179  0070                     ?_I2C_Slave:	; 0 bytes @ 0x0
   180                           	global	??_I2C_Slave
   181  0070                     ??_I2C_Slave:	; 0 bytes @ 0x0
   182                           	global	?_I2C_Restart
   183  0070                     ?_I2C_Restart:	; 0 bytes @ 0x0
   184                           	global	??_I2C_Restart
   185  0070                     ??_I2C_Restart:	; 0 bytes @ 0x0
   186                           	global	?_string
   187  0070                     ?_string:	; 0 bytes @ 0x0
   188                           	global	?_conversion
   189  0070                     ?_conversion:	; 0 bytes @ 0x0
   190                           	global	?_main
   191  0070                     ?_main:	; 0 bytes @ 0x0
   192                           	global	?_I2C_Read
   193  0070                     ?_I2C_Read:	; 1 bytes @ 0x0
   194                           	global	I2C_Slave@data
   195  0070                     I2C_Slave@data:	; 1 bytes @ 0x0
   196                           	global	delay@ms
   197  0070                     delay@ms:	; 2 bytes @ 0x0
   198                           	global	I2C_Read@i
   199  0070                     I2C_Read@i:	; 2 bytes @ 0x0
   200  0070                     	ds	2
   201                           	global	??_delay
   202  0072                     ??_delay:	; 0 bytes @ 0x2
   203                           	global	?_lcd_cmd
   204  0072                     ?_lcd_cmd:	; 0 bytes @ 0x2
   205                           	global	??_I2C_Read
   206  0072                     ??_I2C_Read:	; 0 bytes @ 0x2
   207                           	global	lcd_cmd@c
   208  0072                     lcd_cmd@c:	; 1 bytes @ 0x2
   209  0072                     	ds	1
   210                           	global	??_lcd_cmd
   211  0073                     ??_lcd_cmd:	; 0 bytes @ 0x3
   212                           	global	lcd_cmd@a
   213  0073                     lcd_cmd@a:	; 1 bytes @ 0x3
   214                           	global	I2C_Read@read
   215  0073                     I2C_Read@read:	; 1 bytes @ 0x3
   216  0073                     	ds	1
   217                           	global	??_string
   218  0074                     ??_string:	; 0 bytes @ 0x4
   219  0074                     	ds	1
   220                           	global	string@p
   221  0075                     string@p:	; 1 bytes @ 0x5
   222  0075                     	ds	1
   223                           	global	??_conversion
   224  0076                     ??_conversion:	; 0 bytes @ 0x6
   225  0076                     	ds	2
   226                           	global	conversion@disp
   227  0078                     conversion@disp:	; 1 bytes @ 0x8
   228  0078                     	ds	1
   229                           	global	??_main
   230  0079                     ??_main:	; 0 bytes @ 0x9
   231  0079                     	ds	3
   232                           psect	cstackBANK0,class=BANK0,space=1
   233                           global __pcstackBANK0
   234  0020                     __pcstackBANK0:
   235                           	global	main@read
   236  0020                     main@read:	; 7 bytes @ 0x0
   237  0020                     	ds	7
   238                           	global	main@i
   239  0027                     main@i:	; 1 bytes @ 0x7
   240  0027                     	ds	1
   241 ;;Data sizes: Strings 14, constant 0, data 0, bss 0, persistent 0 stack 0
   242 ;;Auto spaces:   Size  Autos    Used
   243 ;; COMMON          14     12      12
   244 ;; BANK0           80      8       8
   245 ;; BANK1           80      0       0
   246 ;; BANK3           96      0       0
   247 ;; BANK2           96      0       0
   248                           
   249 ;;
   250 ;; Pointer list with targets:
   251                           
   252 ;; conversion@disp	PTR unsigned char  size(1) Largest target is 7
   253 ;;		 -> main@read(BANK0[7]), 
   254 ;;
   255 ;; string@p	PTR unsigned char  size(1) Largest target is 7
   256 ;;		 -> STR_2(CODE[7]), STR_1(CODE[7]), 
   257 ;;
   258                           
   259                           
   260 ;;
   261 ;; Critical Paths under _main in COMMON
   262 ;;
   263 ;;   _main->_conversion
   264 ;;   _conversion->_string
   265 ;;   _string->_lcd_cmd
   266 ;;   _lcd_cmd->_delay
   267 ;;
   268 ;; Critical Paths under _main in BANK0
   269 ;;
   270 ;;   None.
   271 ;;
   272 ;; Critical Paths under _main in BANK1
   273 ;;
   274 ;;   None.
   275 ;;
   276 ;; Critical Paths under _main in BANK3
   277 ;;
   278 ;;   None.
   279 ;;
   280 ;; Critical Paths under _main in BANK2
   281 ;;
   282 ;;   None.
   283                           
   284 ;;
   285 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   286 ;;
   287                           
   288 ;;
   289 ;;Call Graph Tables:
   290 ;;
   291 ;; ---------------------------------------------------------------------------------
   292 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   293 ;; ---------------------------------------------------------------------------------
   294 ;; (0) _main                                                13    13      0     813
   295 ;;                                              9 COMMON     3     3      0
   296 ;;                                              0 BANK0      8     8      0
   297 ;;                            _lcd_cmd
   298 ;;                          _I2C_Start
   299 ;;                          _I2C_Slave
   300 ;;                        _I2C_Restart
   301 ;;                           _I2C_Read
   302 ;;                           _I2C_Stop
   303 ;;                         _conversion
   304 ;;                              _delay
   305 ;; ---------------------------------------------------------------------------------
   306 ;; (1) _conversion                                           3     3      0     507
   307 ;;                                              6 COMMON     3     3      0
   308 ;;                            _lcd_cmd
   309 ;;                             _string
   310 ;; ---------------------------------------------------------------------------------
   311 ;; (2) _string                                               2     2      0     111
   312 ;;                                              4 COMMON     2     2      0
   313 ;;                            _lcd_cmd
   314 ;; ---------------------------------------------------------------------------------
   315 ;; (1) _I2C_Restart                                          0     0      0       0
   316 ;;                               _hold
   317 ;; ---------------------------------------------------------------------------------
   318 ;; (1) _I2C_Slave                                            1     1      0      22
   319 ;;                                              0 COMMON     1     1      0
   320 ;;                               _hold
   321 ;; ---------------------------------------------------------------------------------
   322 ;; (1) _I2C_Stop                                             0     0      0       0
   323 ;;                               _hold
   324 ;; ---------------------------------------------------------------------------------
   325 ;; (1) _I2C_Start                                            0     0      0       0
   326 ;;                               _hold
   327 ;; ---------------------------------------------------------------------------------
   328 ;; (3) _lcd_cmd                                              2     1      1      66
   329 ;;                                              2 COMMON     2     1      1
   330 ;;                              _delay
   331 ;; ---------------------------------------------------------------------------------
   332 ;; (1) _I2C_Read                                             4     2      2      45
   333 ;;                                              0 COMMON     4     2      2
   334 ;; ---------------------------------------------------------------------------------
   335 ;; (2) _hold                                                 0     0      0       0
   336 ;; ---------------------------------------------------------------------------------
   337 ;; (1) _delay                                                2     0      2      22
   338 ;;                                              0 COMMON     2     0      2
   339 ;; ---------------------------------------------------------------------------------
   340 ;; Estimated maximum stack depth 3
   341 ;; ---------------------------------------------------------------------------------
   342                           
   343 ;; Call Graph Graphs:
   344                           
   345 ;; _main (ROOT)
   346 ;;   _lcd_cmd
   347 ;;     _delay
   348 ;;   _I2C_Start
   349 ;;     _hold
   350 ;;   _I2C_Slave
   351 ;;     _hold
   352 ;;   _I2C_Restart
   353 ;;     _hold
   354 ;;   _I2C_Read
   355 ;;   _I2C_Stop
   356 ;;     _hold
   357 ;;   _conversion
   358 ;;     _lcd_cmd
   359 ;;       _delay
   360 ;;     _string
   361 ;;       _lcd_cmd
   362 ;;         _delay
   363 ;;   _delay
   364 ;;
   365                           
   366 ;; Address spaces:
   367                           
   368 ;;Name               Size   Autos  Total    Cost      Usage
   369 ;;BITCOMMON            E      0       0       0        0.0%
   370 ;;EEDATA             100      0       0       0        0.0%
   371 ;;NULL                 0      0       0       0        0.0%
   372 ;;CODE                 0      0       0       0        0.0%
   373 ;;COMMON               E      C       C       1       85.7%
   374 ;;BITSFR0              0      0       0       1        0.0%
   375 ;;SFR0                 0      0       0       1        0.0%
   376 ;;BITSFR1              0      0       0       2        0.0%
   377 ;;SFR1                 0      0       0       2        0.0%
   378 ;;STACK                0      0       4       2        0.0%
   379 ;;ABS                  0      0       0       3        0.0%
   380 ;;BITBANK0            50      0       0       4        0.0%
   381 ;;BITSFR3              0      0       0       4        0.0%
   382 ;;SFR3                 0      0       0       4        0.0%
   383 ;;BANK0               50      8       8       5       10.0%
   384 ;;BITSFR2              0      0       0       5        0.0%
   385 ;;SFR2                 0      0       0       5        0.0%
   386 ;;BITBANK1            50      0       0       6        0.0%
   387 ;;BANK1               50      0       0       7        0.0%
   388 ;;BITBANK3            60      0       0       8        0.0%
   389 ;;BANK3               60      0       0       9        0.0%
   390 ;;BITBANK2            60      0       0      10        0.0%
   391 ;;BANK2               60      0       0      11        0.0%
   392 ;;DATA                 0      0       0      12        0.0%
   393                           
   394                           	global	_main
   395                           psect	maintext,global,class=CODE,delta=2
   396                           global __pmaintext
   397  060E                     __pmaintext:
   398                           
   399 ;; *************** function _main *****************
   400 ;; Defined at:
   401 ;;		line 100 in file "D:\Embedded\pic\code\software\protocal\I2c\RTC\time.c"
   402 ;; Parameters:    Size  Location     Type
   403 ;;		None
   404 ;; Auto vars:     Size  Location     Type
   405 ;;  read            7    0[BANK0 ] unsigned char [7]
   406 ;;  i               1    7[BANK0 ] unsigned char 
   407 ;;  write           1    0        unsigned char 
   408 ;;  j               1    0        unsigned char 
   409 ;; Return value:  Size  Location     Type
   410 ;;		None               void
   411 ;; Registers used:
   412 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   413 ;; Tracked objects:
   414 ;;		On entry : 17F/0
   415 ;;		On exit  : 0/0
   416 ;;		Unchanged: 0/0
   417 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   418 ;;      Params:         0       0       0       0       0
   419 ;;      Locals:         0       8       0       0       0
   420 ;;      Temps:          3       0       0       0       0
   421 ;;      Totals:         3       8       0       0       0
   422 ;;Total ram usage:       11 bytes
   423 ;; Hardware stack levels required when called:    4
   424 ;; This function calls:
   425 ;;		_lcd_cmd
   426 ;;		_I2C_Start
   427 ;;		_I2C_Slave
   428 ;;		_I2C_Restart
   429 ;;		_I2C_Read
   430 ;;		_I2C_Stop
   431 ;;		_conversion
   432 ;;		_delay
   433 ;; This function is called by:
   434 ;;		Startup code after reset
   435 ;; This function uses a non-reentrant model
   436 ;;
   437                           psect	maintext
   438                           	file	"D:\Embedded\pic\code\software\protocal\I2c\RTC\time.c"
   439                           	line	100
   440                           	global	__size_of_main
   441  009C                     	__size_of_main	equ	__end_of_main-_main
   442                           	
   443  060E                     _main:	
   444                           	opt	stack 4
   445                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   446                           	line	102
   447                           	
   448  060E                     l2467:	
   449                           ;time.c: 101: unsigned char i,j,read[7],write;
   450                           ;time.c: 102: TRISC=0X18;
   451  060E  3018               	movlw	(018h)
   452  060F  1683               	bsf	status, 5	;RP0=1, select bank1
   453  0610  1303               	bcf	status, 6	;RP1=0, select bank1
   454  0611  0087               	movwf	(135)^080h	;volatile
   455                           	line	103
   456                           	
   457  0612                     l2469:	
   458                           ;time.c: 103: PORTC=0X00;
   459  0612  1283               	bcf	status, 5	;RP0=0, select bank0
   460  0613  1303               	bcf	status, 6	;RP1=0, select bank0
   461  0614  0187               	clrf	(7)	;volatile
   462                           	line	104
   463                           	
   464  0615                     l2471:	
   465                           ;time.c: 104: TRISD=0X00;
   466  0615  1683               	bsf	status, 5	;RP0=1, select bank1
   467  0616  1303               	bcf	status, 6	;RP1=0, select bank1
   468  0617  0188               	clrf	(136)^080h	;volatile
   469                           	line	105
   470                           	
   471  0618                     l2473:	
   472                           ;time.c: 105: PORTD=0X00;
   473  0618  1283               	bcf	status, 5	;RP0=0, select bank0
   474  0619  1303               	bcf	status, 6	;RP1=0, select bank0
   475  061A  0188               	clrf	(8)	;volatile
   476                           	line	106
   477                           	
   478  061B                     l2475:	
   479                           ;time.c: 106: TRISE=0X00;
   480  061B  1683               	bsf	status, 5	;RP0=1, select bank1
   481  061C  1303               	bcf	status, 6	;RP1=0, select bank1
   482  061D  0189               	clrf	(137)^080h	;volatile
   483                           	line	107
   484                           	
   485  061E                     l2477:	
   486                           ;time.c: 107: PORTE=0X00;
   487  061E  1283               	bcf	status, 5	;RP0=0, select bank0
   488  061F  1303               	bcf	status, 6	;RP1=0, select bank0
   489  0620  0189               	clrf	(9)	;volatile
   490                           	line	108
   491                           	
   492  0621                     l2479:	
   493                           ;time.c: 108: ANSEL=0X00;
   494  0621  1683               	bsf	status, 5	;RP0=1, select bank3
   495  0622  1703               	bsf	status, 6	;RP1=1, select bank3
   496  0623  0188               	clrf	(392)^0180h	;volatile
   497                           	line	109
   498                           	
   499  0624                     l2481:	
   500                           ;time.c: 109: ANSELH=0X00;
   501  0624  0189               	clrf	(393)^0180h	;volatile
   502                           	line	110
   503                           	
   504  0625                     l2483:	
   505                           ;time.c: 110: SMP=1;
   506  0625  1683               	bsf	status, 5	;RP0=1, select bank1
   507  0626  1303               	bcf	status, 6	;RP1=0, select bank1
   508  0627  1794               	bsf	(1191/8)^080h,(1191)&7
   509                           	line	111
   510                           	
   511  0628                     l2485:	
   512                           ;time.c: 111: SSPCON=0X28;
   513  0628  3028               	movlw	(028h)
   514  0629  1283               	bcf	status, 5	;RP0=0, select bank0
   515  062A  1303               	bcf	status, 6	;RP1=0, select bank0
   516  062B  0094               	movwf	(20)	;volatile
   517                           	line	112
   518                           	
   519  062C                     l2487:	
   520                           ;time.c: 112: SSPADD=4;
   521  062C  3004               	movlw	(04h)
   522  062D  1683               	bsf	status, 5	;RP0=1, select bank1
   523  062E  1303               	bcf	status, 6	;RP1=0, select bank1
   524  062F  0093               	movwf	(147)^080h	;volatile
   525                           	line	114
   526                           	
   527  0630                     l2489:	
   528                           ;time.c: 114: lcd_cmd(0,0X38);
   529  0630  3038               	movlw	(038h)
   530  0631  00F9               	movwf	(??_main+0)+0
   531  0632  0879               	movf	(??_main+0)+0,w
   532  0633  00F2               	movwf	(?_lcd_cmd)
   533  0634  3000               	movlw	(0)
   534  0635  120A  118A  25C5   	fcall	_lcd_cmd
              120A  118A         
   535                           	line	115
   536                           	
   537  063A                     l2491:	
   538                           ;time.c: 115: lcd_cmd(0,0X0E);
   539  063A  300E               	movlw	(0Eh)
   540  063B  00F9               	movwf	(??_main+0)+0
   541  063C  0879               	movf	(??_main+0)+0,w
   542  063D  00F2               	movwf	(?_lcd_cmd)
   543  063E  3000               	movlw	(0)
   544  063F  120A  118A  25C5   	fcall	_lcd_cmd
              120A  118A         
   545  0644  2E45               	goto	l2493
   546                           	line	129
   547                           ;time.c: 129: while(1)
   548                           	
   549  0645                     l1073:	
   550                           	line	131
   551                           	
   552  0645                     l2493:	
   553                           ;time.c: 130: {
   554                           ;time.c: 131: I2C_Start();
   555  0645  120A  118A  255D   	fcall	_I2C_Start
              120A  118A         
   556                           	line	132
   557                           	
   558  064A                     l2495:	
   559                           ;time.c: 132: I2C_Slave(0XD0);
   560  064A  30D0               	movlw	(0D0h)
   561  064B  120A  118A  258C   	fcall	_I2C_Slave
              120A  118A         
   562                           	line	133
   563                           	
   564  0650                     l2497:	
   565                           ;time.c: 133: I2C_Slave(0X00);
   566  0650  3000               	movlw	(0)
   567  0651  120A  118A  258C   	fcall	_I2C_Slave
              120A  118A         
   568                           	line	134
   569                           	
   570  0656                     l2499:	
   571                           ;time.c: 134: I2C_Restart();
   572  0656  120A  118A  256F   	fcall	_I2C_Restart
              120A  118A         
   573                           	line	135
   574                           	
   575  065B                     l2501:	
   576                           ;time.c: 135: I2C_Slave(0XD1);
   577  065B  30D1               	movlw	(0D1h)
   578  065C  120A  118A  258C   	fcall	_I2C_Slave
              120A  118A         
   579                           	line	136
   580                           	
   581  0661                     l2503:	
   582                           ;time.c: 136: for(i=0;i<7;i++)
   583  0661  1283               	bcf	status, 5	;RP0=0, select bank0
   584  0662  1303               	bcf	status, 6	;RP1=0, select bank0
   585  0663  01A7               	clrf	(main@i)
   586                           	
   587  0664                     l2505:	
   588  0664  3007               	movlw	(07h)
   589  0665  0227               	subwf	(main@i),w
   590  0666  1C03               	skipc
   591  0667  2E69               	goto	u2501
   592  0668  2E6A               	goto	u2500
   593  0669                     u2501:
   594  0669  2E6C               	goto	l1074
   595  066A                     u2500:
   596  066A  2E91               	goto	l2515
   597                           	
   598  066B                     l2507:	
   599  066B  2E91               	goto	l2515
   600                           	line	137
   601                           	
   602  066C                     l1074:	
   603                           	line	138
   604                           ;time.c: 137: {
   605                           ;time.c: 138: RCEN=1;
   606  066C  1683               	bsf	status, 5	;RP0=1, select bank1
   607  066D  1303               	bcf	status, 6	;RP1=0, select bank1
   608  066E  1591               	bsf	(1163/8)^080h,(1163)&7
   609                           	line	139
   610                           	
   611  066F                     l2509:	
   612                           ;time.c: 139: read[i]=I2C_Read(i);
   613  066F  1283               	bcf	status, 5	;RP0=0, select bank0
   614  0670  1303               	bcf	status, 6	;RP1=0, select bank0
   615  0671  0827               	movf	(main@i),w
   616  0672  00F9               	movwf	(??_main+0)+0
   617  0673  01FA               	clrf	(??_main+0)+0+1
   618  0674  0879               	movf	0+(??_main+0)+0,w
   619  0675  00F0               	movwf	(?_I2C_Read)
   620  0676  087A               	movf	1+(??_main+0)+0,w
   621  0677  00F1               	movwf	(?_I2C_Read+1)
   622  0678  120A  118A  25A2   	fcall	_I2C_Read
              120A  118A         
   623  067D  00FB               	movwf	(??_main+2)+0
   624  067E  1283               	bcf	status, 5	;RP0=0, select bank0
   625  067F  1303               	bcf	status, 6	;RP1=0, select bank0
   626  0680  0827               	movf	(main@i),w
   627  0681  3E20               	addlw	main@read&0ffh
   628  0682  0084               	movwf	fsr0
   629  0683  087B               	movf	(??_main+2)+0,w
   630  0684  1383               	bcf	status, 7	;select IRP bank0
   631  0685  0080               	movwf	indf
   632                           	line	136
   633                           	
   634  0686                     l2511:	
   635  0686  3001               	movlw	(01h)
   636  0687  00F9               	movwf	(??_main+0)+0
   637  0688  0879               	movf	(??_main+0)+0,w
   638  0689  07A7               	addwf	(main@i),f
   639                           	
   640  068A                     l2513:	
   641  068A  3007               	movlw	(07h)
   642  068B  0227               	subwf	(main@i),w
   643  068C  1C03               	skipc
   644  068D  2E8F               	goto	u2511
   645  068E  2E90               	goto	u2510
   646  068F                     u2511:
   647  068F  2E6C               	goto	l1074
   648  0690                     u2510:
   649  0690  2E91               	goto	l2515
   650                           	
   651  0691                     l1075:	
   652                           	line	141
   653                           	
   654  0691                     l2515:	
   655                           ;time.c: 140: }
   656                           ;time.c: 141: I2C_Stop();
   657  0691  120A  118A  2566   	fcall	_I2C_Stop
              120A  118A         
   658                           	line	142
   659                           	
   660  0696                     l2517:	
   661                           ;time.c: 142: conversion(read);
   662  0696  3020               	movlw	(main@read)&0ffh
   663  0697  120A  118A  26AA   	fcall	_conversion
              120A  118A         
   664                           	line	143
   665                           	
   666  069C                     l2519:	
   667                           ;time.c: 143: delay(1000);
   668  069C  30E8               	movlw	low(03E8h)
   669  069D  00F0               	movwf	(?_delay)
   670  069E  3003               	movlw	high(03E8h)
   671  069F  00F1               	movwf	((?_delay))+1
   672  06A0  120A  118A  2578   	fcall	_delay
              120A  118A         
   673  06A5  2E45               	goto	l2493
   674                           	line	145
   675                           	
   676  06A6                     l1076:	
   677                           	line	129
   678  06A6  2E45               	goto	l2493
   679                           	
   680  06A7                     l1077:	
   681                           	line	146
   682                           	
   683  06A7                     l1078:	
   684                           	global	start
   685  06A7  120A  118A  2800   	ljmp	start
   686                           	opt stack 0
   687                           GLOBAL	__end_of_main
   688  06AA                     	__end_of_main:
   689 ;; =============== function _main ends ============
   690                           
   691                           	signat	_main,88
   692                           	global	_conversion
   693                           psect	text277,local,class=CODE,delta=2
   694                           global __ptext277
   695  06AA                     __ptext277:
   696                           
   697 ;; *************** function _conversion *****************
   698 ;; Defined at:
   699 ;;		line 59 in file "D:\Embedded\pic\code\software\protocal\I2c\RTC\time.c"
   700 ;; Parameters:    Size  Location     Type
   701 ;;  disp            1    wreg     PTR unsigned char 
   702 ;;		 -> main@read(7), 
   703 ;; Auto vars:     Size  Location     Type
   704 ;;  disp            1    8[COMMON] PTR unsigned char 
   705 ;;		 -> main@read(7), 
   706 ;; Return value:  Size  Location     Type
   707 ;;		None               void
   708 ;; Registers used:
   709 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   710 ;; Tracked objects:
   711 ;;		On entry : 0/0
   712 ;;		On exit  : 0/0
   713 ;;		Unchanged: 0/0
   714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   715 ;;      Params:         0       0       0       0       0
   716 ;;      Locals:         1       0       0       0       0
   717 ;;      Temps:          2       0       0       0       0
   718 ;;      Totals:         3       0       0       0       0
   719 ;;Total ram usage:        3 bytes
   720 ;; Hardware stack levels used:    1
   721 ;; Hardware stack levels required when called:    3
   722 ;; This function calls:
   723 ;;		_lcd_cmd
   724 ;;		_string
   725 ;; This function is called by:
   726 ;;		_main
   727 ;; This function uses a non-reentrant model
   728 ;;
   729                           psect	text277
   730                           	file	"D:\Embedded\pic\code\software\protocal\I2c\RTC\time.c"
   731                           	line	59
   732                           	global	__size_of_conversion
   733  0156                     	__size_of_conversion	equ	__end_of_conversion-_conversion
   734                           	
   735  06AA                     _conversion:	
   736                           	opt	stack 4
   737                           ; Regs used in _conversion: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   738                           ;conversion@disp stored from wreg
   739  06AA  00F8               	movwf	(conversion@disp)
   740                           	line	60
   741                           	
   742  06AB                     l2427:	
   743                           ;time.c: 60: lcd_cmd(0,0X80);
   744  06AB  3080               	movlw	(080h)
   745  06AC  00F6               	movwf	(??_conversion+0)+0
   746  06AD  0876               	movf	(??_conversion+0)+0,w
   747  06AE  00F2               	movwf	(?_lcd_cmd)
   748  06AF  3000               	movlw	(0)
   749  06B0  120A  118A  25C5   	fcall	_lcd_cmd
              120A  118A         
   750                           	line	61
   751                           	
   752  06B5                     l2429:	
   753                           ;time.c: 61: string("time: ");
   754  06B5  3001               	movlw	((STR_1-__stringbase))&0ffh
   755  06B6  120A  118A  25E9   	fcall	_string
              120A  118A         
   756                           	line	62
   757                           	
   758  06BB                     l2431:	
   759                           ;time.c: 62: lcd_cmd(1,((disp[2]&0X30)>>4)+0X30);
   760  06BB  0878               	movf	(conversion@disp),w
   761  06BC  3E02               	addlw	02h
   762  06BD  0084               	movwf	fsr0
   763  06BE  1383               	bcf	status, 7	;select IRP bank0
   764  06BF  0800               	movf	indf,w
   765  06C0  00F6               	movwf	(??_conversion+0)+0
   766  06C1  3004               	movlw	04h
   767  06C2                     u2415:
   768  06C2  1003               	clrc
   769  06C3  0CF6               	rrf	(??_conversion+0)+0,f
   770  06C4  3EFF               	addlw	-1
   771  06C5  1D03               	skipz
   772  06C6  2EC2               	goto	u2415
   773  06C7  0876               	movf	0+(??_conversion+0)+0,w
   774  06C8  3903               	andlw	03h
   775  06C9  3E30               	addlw	030h
   776  06CA  00F7               	movwf	(??_conversion+1)+0
   777  06CB  0877               	movf	(??_conversion+1)+0,w
   778  06CC  00F2               	movwf	(?_lcd_cmd)
   779  06CD  3001               	movlw	(01h)
   780  06CE  120A  118A  25C5   	fcall	_lcd_cmd
              120A  118A         
   781                           	line	63
   782                           	
   783  06D3                     l2433:	
   784                           ;time.c: 63: lcd_cmd(1,(disp[2]&0X0F)+0X30);
   785  06D3  0878               	movf	(conversion@disp),w
   786  06D4  3E02               	addlw	02h
   787  06D5  0084               	movwf	fsr0
   788  06D6  1383               	bcf	status, 7	;select IRP bank0
   789  06D7  0800               	movf	indf,w
   790  06D8  390F               	andlw	0Fh
   791  06D9  3E30               	addlw	030h
   792  06DA  00F6               	movwf	(??_conversion+0)+0
   793  06DB  0876               	movf	(??_conversion+0)+0,w
   794  06DC  00F2               	movwf	(?_lcd_cmd)
   795  06DD  3001               	movlw	(01h)
   796  06DE  120A  118A  25C5   	fcall	_lcd_cmd
              120A  118A         
   797                           	line	64
   798                           	
   799  06E3                     l2435:	
   800                           ;time.c: 64: lcd_cmd(1,':');
   801  06E3  303A               	movlw	(03Ah)
   802  06E4  00F6               	movwf	(??_conversion+0)+0
   803  06E5  0876               	movf	(??_conversion+0)+0,w
   804  06E6  00F2               	movwf	(?_lcd_cmd)
   805  06E7  3001               	movlw	(01h)
   806  06E8  120A  118A  25C5   	fcall	_lcd_cmd
              120A  118A         
   807                           	line	66
   808                           ;time.c: 66: lcd_cmd(1,((disp[1]&0X70)>>4)+0X30);
   809  06ED  0878               	movf	(conversion@disp),w
   810  06EE  3E01               	addlw	01h
   811  06EF  0084               	movwf	fsr0
   812  06F0  1383               	bcf	status, 7	;select IRP bank0
   813  06F1  0800               	movf	indf,w
   814  06F2  00F6               	movwf	(??_conversion+0)+0
   815  06F3  3004               	movlw	04h
   816  06F4                     u2425:
   817  06F4  1003               	clrc
   818  06F5  0CF6               	rrf	(??_conversion+0)+0,f
   819  06F6  3EFF               	addlw	-1
   820  06F7  1D03               	skipz
   821  06F8  2EF4               	goto	u2425
   822  06F9  0876               	movf	0+(??_conversion+0)+0,w
   823  06FA  3907               	andlw	07h
   824  06FB  3E30               	addlw	030h
   825  06FC  00F7               	movwf	(??_conversion+1)+0
   826  06FD  0877               	movf	(??_conversion+1)+0,w
   827  06FE  00F2               	movwf	(?_lcd_cmd)
   828  06FF  3001               	movlw	(01h)
   829  0700  120A  118A  25C5   	fcall	_lcd_cmd
              120A  118A         
   830                           	line	67
   831                           ;time.c: 67: lcd_cmd(1,(disp[1]&0X0F)+0X30);
   832  0705  0878               	movf	(conversion@disp),w
   833  0706  3E01               	addlw	01h
   834  0707  0084               	movwf	fsr0
   835  0708  1383               	bcf	status, 7	;select IRP bank0
   836  0709  0800               	movf	indf,w
   837  070A  390F               	andlw	0Fh
   838  070B  3E30               	addlw	030h
   839  070C  00F6               	movwf	(??_conversion+0)+0
   840  070D  0876               	movf	(??_conversion+0)+0,w
   841  070E  00F2               	movwf	(?_lcd_cmd)
   842  070F  3001               	movlw	(01h)
   843  0710  120A  118A  25C5   	fcall	_lcd_cmd
              120A  118A         
   844                           	line	68
   845                           	
   846  0715                     l2437:	
   847                           ;time.c: 68: lcd_cmd(1,':');
   848  0715  303A               	movlw	(03Ah)
   849  0716  00F6               	movwf	(??_conversion+0)+0
   850  0717  0876               	movf	(??_conversion+0)+0,w
   851  0718  00F2               	movwf	(?_lcd_cmd)
   852  0719  3001               	movlw	(01h)
   853  071A  120A  118A  25C5   	fcall	_lcd_cmd
              120A  118A         
   854                           	line	70
   855                           	
   856  071F                     l2439:	
   857                           ;time.c: 70: lcd_cmd(1,((disp[0]&0X70)>>4)+0X30);
   858  071F  0878               	movf	(conversion@disp),w
   859  0720  0084               	movwf	fsr0
   860  0721  1383               	bcf	status, 7	;select IRP bank0
   861  0722  0800               	movf	indf,w
   862  0723  00F6               	movwf	(??_conversion+0)+0
   863  0724  3004               	movlw	04h
   864  0725                     u2435:
   865  0725  1003               	clrc
   866  0726  0CF6               	rrf	(??_conversion+0)+0,f
   867  0727  3EFF               	addlw	-1
   868  0728  1D03               	skipz
   869  0729  2F25               	goto	u2435
   870  072A  0876               	movf	0+(??_conversion+0)+0,w
   871  072B  3907               	andlw	07h
   872  072C  3E30               	addlw	030h
   873  072D  00F7               	movwf	(??_conversion+1)+0
   874  072E  0877               	movf	(??_conversion+1)+0,w
   875  072F  00F2               	movwf	(?_lcd_cmd)
   876  0730  3001               	movlw	(01h)
   877  0731  120A  118A  25C5   	fcall	_lcd_cmd
              120A  118A         
   878                           	line	71
   879                           	
   880  0736                     l2441:	
   881                           ;time.c: 71: lcd_cmd(1,(disp[0]&0X0F)+0X30);
   882  0736  0878               	movf	(conversion@disp),w
   883  0737  0084               	movwf	fsr0
   884  0738  1383               	bcf	status, 7	;select IRP bank0
   885  0739  0800               	movf	indf,w
   886  073A  390F               	andlw	0Fh
   887  073B  3E30               	addlw	030h
   888  073C  00F6               	movwf	(??_conversion+0)+0
   889  073D  0876               	movf	(??_conversion+0)+0,w
   890  073E  00F2               	movwf	(?_lcd_cmd)
   891  073F  3001               	movlw	(01h)
   892  0740  120A  118A  25C5   	fcall	_lcd_cmd
              120A  118A         
   893                           	line	72
   894                           	
   895  0745                     l2443:	
   896                           ;time.c: 72: if(disp[2]==0X12&&disp[1]==0X11&&disp[0]==0X00)
   897  0745  0878               	movf	(conversion@disp),w
   898  0746  3E02               	addlw	02h
   899  0747  0084               	movwf	fsr0
   900  0748  1383               	bcf	status, 7	;select IRP bank0
   901  0749  0800               	movf	indf,w
   902  074A  3A12               	xorlw	012h
   903  074B  1D03               	skipz
   904  074C  2F4E               	goto	u2441
   905  074D  2F4F               	goto	u2440
   906  074E                     u2441:
   907  074E  2F63               	goto	l2451
   908  074F                     u2440:
   909                           	
   910  074F                     l2445:	
   911  074F  0878               	movf	(conversion@disp),w
   912  0750  3E01               	addlw	01h
   913  0751  0084               	movwf	fsr0
   914  0752  0800               	movf	indf,w
   915  0753  3A11               	xorlw	011h
   916  0754  1D03               	skipz
   917  0755  2F57               	goto	u2451
   918  0756  2F58               	goto	u2450
   919  0757                     u2451:
   920  0757  2F63               	goto	l2451
   921  0758                     u2450:
   922                           	
   923  0758                     l2447:	
   924  0758  0878               	movf	(conversion@disp),w
   925  0759  0084               	movwf	fsr0
   926  075A  0880               	movf	indf,f
   927  075B  1D03               	skipz
   928  075C  2F5E               	goto	u2461
   929  075D  2F5F               	goto	u2460
   930  075E                     u2461:
   931  075E  2F63               	goto	l2451
   932  075F                     u2460:
   933                           	line	74
   934                           	
   935  075F                     l2449:	
   936                           ;time.c: 73: {
   937                           ;time.c: 74: RC0=1;
   938  075F  1283               	bcf	status, 5	;RP0=0, select bank0
   939  0760  1303               	bcf	status, 6	;RP1=0, select bank0
   940  0761  1407               	bsf	(56/8),(56)&7
   941  0762  2F63               	goto	l2451
   942                           	line	75
   943                           	
   944  0763                     l1069:	
   945                           	line	78
   946                           	
   947  0763                     l2451:	
   948                           ;time.c: 75: }
   949                           ;time.c: 78: lcd_cmd(0,0XC0);
   950  0763  30C0               	movlw	(0C0h)
   951  0764  00F6               	movwf	(??_conversion+0)+0
   952  0765  0876               	movf	(??_conversion+0)+0,w
   953  0766  00F2               	movwf	(?_lcd_cmd)
   954  0767  3000               	movlw	(0)
   955  0768  120A  118A  25C5   	fcall	_lcd_cmd
              120A  118A         
   956                           	line	79
   957                           	
   958  076D                     l2453:	
   959                           ;time.c: 79: string("Date: ");
   960  076D  3008               	movlw	((STR_2-__stringbase))&0ffh
   961  076E  120A  118A  25E9   	fcall	_string
              120A  118A         
   962                           	line	84
   963                           	
   964  0773                     l2455:	
   965                           ;time.c: 84: lcd_cmd(1,((disp[4]&0X30)>>4)+0X30);
   966  0773  0878               	movf	(conversion@disp),w
   967  0774  3E04               	addlw	04h
   968  0775  0084               	movwf	fsr0
   969  0776  1383               	bcf	status, 7	;select IRP bank0
   970  0777  0800               	movf	indf,w
   971  0778  00F6               	movwf	(??_conversion+0)+0
   972  0779  3004               	movlw	04h
   973  077A                     u2475:
   974  077A  1003               	clrc
   975  077B  0CF6               	rrf	(??_conversion+0)+0,f
   976  077C  3EFF               	addlw	-1
   977  077D  1D03               	skipz
   978  077E  2F7A               	goto	u2475
   979  077F  0876               	movf	0+(??_conversion+0)+0,w
   980  0780  3903               	andlw	03h
   981  0781  3E30               	addlw	030h
   982  0782  00F7               	movwf	(??_conversion+1)+0
   983  0783  0877               	movf	(??_conversion+1)+0,w
   984  0784  00F2               	movwf	(?_lcd_cmd)
   985  0785  3001               	movlw	(01h)
   986  0786  120A  118A  25C5   	fcall	_lcd_cmd
              120A  118A         
   987                           	line	85
   988                           	
   989  078B                     l2457:	
   990                           ;time.c: 85: lcd_cmd(1,(disp[4]&0X0F)+0X30);
   991  078B  0878               	movf	(conversion@disp),w
   992  078C  3E04               	addlw	04h
   993  078D  0084               	movwf	fsr0
   994  078E  1383               	bcf	status, 7	;select IRP bank0
   995  078F  0800               	movf	indf,w
   996  0790  390F               	andlw	0Fh
   997  0791  3E30               	addlw	030h
   998  0792  00F6               	movwf	(??_conversion+0)+0
   999  0793  0876               	movf	(??_conversion+0)+0,w
  1000  0794  00F2               	movwf	(?_lcd_cmd)
  1001  0795  3001               	movlw	(01h)
  1002  0796  120A  118A  25C5   	fcall	_lcd_cmd
              120A  118A         
  1003                           	line	86
  1004                           	
  1005  079B                     l2459:	
  1006                           ;time.c: 86: lcd_cmd(1,'/');
  1007  079B  302F               	movlw	(02Fh)
  1008  079C  00F6               	movwf	(??_conversion+0)+0
  1009  079D  0876               	movf	(??_conversion+0)+0,w
  1010  079E  00F2               	movwf	(?_lcd_cmd)
  1011  079F  3001               	movlw	(01h)
  1012  07A0  120A  118A  25C5   	fcall	_lcd_cmd
              120A  118A         
  1013                           	line	88
  1014                           ;time.c: 88: lcd_cmd(1,((disp[5]&0X10)>>4)+0X30);
  1015  07A5  0878               	movf	(conversion@disp),w
  1016  07A6  3E05               	addlw	05h
  1017  07A7  0084               	movwf	fsr0
  1018  07A8  1383               	bcf	status, 7	;select IRP bank0
  1019  07A9  0800               	movf	indf,w
  1020  07AA  00F6               	movwf	(??_conversion+0)+0
  1021  07AB  3004               	movlw	04h
  1022  07AC                     u2485:
  1023  07AC  1003               	clrc
  1024  07AD  0CF6               	rrf	(??_conversion+0)+0,f
  1025  07AE  3EFF               	addlw	-1
  1026  07AF  1D03               	skipz
  1027  07B0  2FAC               	goto	u2485
  1028  07B1  0876               	movf	0+(??_conversion+0)+0,w
  1029  07B2  3901               	andlw	01h
  1030  07B3  3E30               	addlw	030h
  1031  07B4  00F7               	movwf	(??_conversion+1)+0
  1032  07B5  0877               	movf	(??_conversion+1)+0,w
  1033  07B6  00F2               	movwf	(?_lcd_cmd)
  1034  07B7  3001               	movlw	(01h)
  1035  07B8  120A  118A  25C5   	fcall	_lcd_cmd
              120A  118A         
  1036                           	line	89
  1037                           ;time.c: 89: lcd_cmd(1,(disp[5]&0X0F)+0X30);
  1038  07BD  0878               	movf	(conversion@disp),w
  1039  07BE  3E05               	addlw	05h
  1040  07BF  0084               	movwf	fsr0
  1041  07C0  1383               	bcf	status, 7	;select IRP bank0
  1042  07C1  0800               	movf	indf,w
  1043  07C2  390F               	andlw	0Fh
  1044  07C3  3E30               	addlw	030h
  1045  07C4  00F6               	movwf	(??_conversion+0)+0
  1046  07C5  0876               	movf	(??_conversion+0)+0,w
  1047  07C6  00F2               	movwf	(?_lcd_cmd)
  1048  07C7  3001               	movlw	(01h)
  1049  07C8  120A  118A  25C5   	fcall	_lcd_cmd
              120A  118A         
  1050                           	line	90
  1051                           	
  1052  07CD                     l2461:	
  1053                           ;time.c: 90: lcd_cmd(1,'/');
  1054  07CD  302F               	movlw	(02Fh)
  1055  07CE  00F6               	movwf	(??_conversion+0)+0
  1056  07CF  0876               	movf	(??_conversion+0)+0,w
  1057  07D0  00F2               	movwf	(?_lcd_cmd)
  1058  07D1  3001               	movlw	(01h)
  1059  07D2  120A  118A  25C5   	fcall	_lcd_cmd
              120A  118A         
  1060                           	line	92
  1061                           	
  1062  07D7                     l2463:	
  1063                           ;time.c: 92: lcd_cmd(1,((disp[6]&0XF0)>>4)+0X30);
  1064  07D7  0878               	movf	(conversion@disp),w
  1065  07D8  3E06               	addlw	06h
  1066  07D9  0084               	movwf	fsr0
  1067  07DA  1383               	bcf	status, 7	;select IRP bank0
  1068  07DB  0800               	movf	indf,w
  1069  07DC  00F6               	movwf	(??_conversion+0)+0
  1070  07DD  3004               	movlw	04h
  1071  07DE                     u2495:
  1072  07DE  1003               	clrc
  1073  07DF  0CF6               	rrf	(??_conversion+0)+0,f
  1074  07E0  3EFF               	addlw	-1
  1075  07E1  1D03               	skipz
  1076  07E2  2FDE               	goto	u2495
  1077  07E3  0876               	movf	0+(??_conversion+0)+0,w
  1078  07E4  390F               	andlw	0Fh
  1079  07E5  3E30               	addlw	030h
  1080  07E6  00F7               	movwf	(??_conversion+1)+0
  1081  07E7  0877               	movf	(??_conversion+1)+0,w
  1082  07E8  00F2               	movwf	(?_lcd_cmd)
  1083  07E9  3001               	movlw	(01h)
  1084  07EA  120A  118A  25C5   	fcall	_lcd_cmd
              120A  118A         
  1085                           	line	93
  1086                           	
  1087  07EF                     l2465:	
  1088                           ;time.c: 93: lcd_cmd(1,(disp[6]&0X0F)+0X30);
  1089  07EF  0878               	movf	(conversion@disp),w
  1090  07F0  3E06               	addlw	06h
  1091  07F1  0084               	movwf	fsr0
  1092  07F2  1383               	bcf	status, 7	;select IRP bank0
  1093  07F3  0800               	movf	indf,w
  1094  07F4  390F               	andlw	0Fh
  1095  07F5  3E30               	addlw	030h
  1096  07F6  00F6               	movwf	(??_conversion+0)+0
  1097  07F7  0876               	movf	(??_conversion+0)+0,w
  1098  07F8  00F2               	movwf	(?_lcd_cmd)
  1099  07F9  3001               	movlw	(01h)
  1100  07FA  120A  118A  25C5   	fcall	_lcd_cmd
              120A  118A         
  1101                           	line	98
  1102                           	
  1103  07FF                     l1070:	
  1104  07FF  0008               	return
  1105                           	opt stack 0
  1106                           GLOBAL	__end_of_conversion
  1107  0800                     	__end_of_conversion:
  1108 ;; =============== function _conversion ends ============
  1109                           
  1110                           	signat	_conversion,4216
  1111                           	global	_string
  1112                           psect	text278,local,class=CODE,delta=2
  1113                           global __ptext278
  1114  05E9                     __ptext278:
  1115                           
  1116 ;; *************** function _string *****************
  1117 ;; Defined at:
  1118 ;;		line 52 in file "D:\Embedded\pic\code\software\protocal\I2c\RTC\time.c"
  1119 ;; Parameters:    Size  Location     Type
  1120 ;;  p               1    wreg     PTR unsigned char 
  1121 ;;		 -> STR_2(7), STR_1(7), 
  1122 ;; Auto vars:     Size  Location     Type
  1123 ;;  p               1    5[COMMON] PTR unsigned char 
  1124 ;;		 -> STR_2(7), STR_1(7), 
  1125 ;; Return value:  Size  Location     Type
  1126 ;;		None               void
  1127 ;; Registers used:
  1128 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1129 ;; Tracked objects:
  1130 ;;		On entry : 0/0
  1131 ;;		On exit  : 0/0
  1132 ;;		Unchanged: 0/0
  1133 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1134 ;;      Params:         0       0       0       0       0
  1135 ;;      Locals:         1       0       0       0       0
  1136 ;;      Temps:          1       0       0       0       0
  1137 ;;      Totals:         2       0       0       0       0
  1138 ;;Total ram usage:        2 bytes
  1139 ;; Hardware stack levels used:    1
  1140 ;; Hardware stack levels required when called:    2
  1141 ;; This function calls:
  1142 ;;		_lcd_cmd
  1143 ;; This function is called by:
  1144 ;;		_conversion
  1145 ;; This function uses a non-reentrant model
  1146 ;;
  1147                           psect	text278
  1148                           	file	"D:\Embedded\pic\code\software\protocal\I2c\RTC\time.c"
  1149                           	line	52
  1150                           	global	__size_of_string
  1151  0025                     	__size_of_string	equ	__end_of_string-_string
  1152                           	
  1153  05E9                     _string:	
  1154                           	opt	stack 4
  1155                           ; Regs used in _string: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1156                           ;string@p stored from wreg
  1157  05E9  00F5               	movwf	(string@p)
  1158                           	line	53
  1159                           	
  1160  05EA                     l2419:	
  1161                           ;time.c: 53: while(*p)
  1162  05EA  2E00               	goto	l2425
  1163                           	
  1164  05EB                     l1064:	
  1165                           	line	55
  1166                           	
  1167  05EB                     l2421:	
  1168                           ;time.c: 54: {
  1169                           ;time.c: 55: lcd_cmd(1,*p++);
  1170  05EB  0875               	movf	(string@p),w
  1171  05EC  0084               	movwf	fsr0
  1172  05ED  120A  118A  2003   	fcall	stringdir
              120A  118A         
  1173  05F2  00F4               	movwf	(??_string+0)+0
  1174  05F3  0874               	movf	(??_string+0)+0,w
  1175  05F4  00F2               	movwf	(?_lcd_cmd)
  1176  05F5  3001               	movlw	(01h)
  1177  05F6  120A  118A  25C5   	fcall	_lcd_cmd
              120A  118A         
  1178                           	
  1179  05FB                     l2423:	
  1180  05FB  3001               	movlw	(01h)
  1181  05FC  00F4               	movwf	(??_string+0)+0
  1182  05FD  0874               	movf	(??_string+0)+0,w
  1183  05FE  07F5               	addwf	(string@p),f
  1184  05FF  2E00               	goto	l2425
  1185                           	line	56
  1186                           	
  1187  0600                     l1063:	
  1188                           	line	53
  1189                           	
  1190  0600                     l2425:	
  1191  0600  0875               	movf	(string@p),w
  1192  0601  0084               	movwf	fsr0
  1193  0602  120A  118A  2003   	fcall	stringdir
              120A  118A         
  1194  0607  3800               	iorlw	0
  1195  0608  1D03               	skipz
  1196  0609  2E0B               	goto	u2401
  1197  060A  2E0C               	goto	u2400
  1198  060B                     u2401:
  1199  060B  2DEB               	goto	l2421
  1200  060C                     u2400:
  1201  060C  2E0D               	goto	l1066
  1202                           	
  1203  060D                     l1065:	
  1204                           	line	57
  1205                           	
  1206  060D                     l1066:	
  1207  060D  0008               	return
  1208                           	opt stack 0
  1209                           GLOBAL	__end_of_string
  1210  060E                     	__end_of_string:
  1211 ;; =============== function _string ends ============
  1212                           
  1213                           	signat	_string,4216
  1214                           	global	_I2C_Restart
  1215                           psect	text279,local,class=CODE,delta=2
  1216                           global __ptext279
  1217  056F                     __ptext279:
  1218                           
  1219 ;; *************** function _I2C_Restart *****************
  1220 ;; Defined at:
  1221 ;;		line 29 in file "D:\Embedded\pic\code\software\protocal\I2c\RTC\time.c"
  1222 ;; Parameters:    Size  Location     Type
  1223 ;;		None
  1224 ;; Auto vars:     Size  Location     Type
  1225 ;;		None
  1226 ;; Return value:  Size  Location     Type
  1227 ;;		None               void
  1228 ;; Registers used:
  1229 ;;		status,2, status,0, pclath, cstack
  1230 ;; Tracked objects:
  1231 ;;		On entry : 0/0
  1232 ;;		On exit  : 0/0
  1233 ;;		Unchanged: 0/0
  1234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1235 ;;      Params:         0       0       0       0       0
  1236 ;;      Locals:         0       0       0       0       0
  1237 ;;      Temps:          0       0       0       0       0
  1238 ;;      Totals:         0       0       0       0       0
  1239 ;;Total ram usage:        0 bytes
  1240 ;; Hardware stack levels used:    1
  1241 ;; Hardware stack levels required when called:    1
  1242 ;; This function calls:
  1243 ;;		_hold
  1244 ;; This function is called by:
  1245 ;;		_main
  1246 ;; This function uses a non-reentrant model
  1247 ;;
  1248                           psect	text279
  1249                           	file	"D:\Embedded\pic\code\software\protocal\I2c\RTC\time.c"
  1250                           	line	29
  1251                           	global	__size_of_I2C_Restart
  1252  0009                     	__size_of_I2C_Restart	equ	__end_of_I2C_Restart-_I2C_Restart
  1253                           	
  1254  056F                     _I2C_Restart:	
  1255                           	opt	stack 6
  1256                           ; Regs used in _I2C_Restart: [status,2+status,0+pclath+cstack]
  1257                           	line	30
  1258                           	
  1259  056F                     l2415:	
  1260                           ;time.c: 30: RSEN=1;
  1261  056F  1683               	bsf	status, 5	;RP0=1, select bank1
  1262  0570  1303               	bcf	status, 6	;RP1=0, select bank1
  1263  0571  1491               	bsf	(1161/8)^080h,(1161)&7
  1264                           	line	31
  1265                           	
  1266  0572                     l2417:	
  1267                           ;time.c: 31: hold();
  1268  0572  120A  118A  2554   	fcall	_hold
              120A  118A         
  1269                           	line	32
  1270                           	
  1271  0577                     l1052:	
  1272  0577  0008               	return
  1273                           	opt stack 0
  1274                           GLOBAL	__end_of_I2C_Restart
  1275  0578                     	__end_of_I2C_Restart:
  1276 ;; =============== function _I2C_Restart ends ============
  1277                           
  1278                           	signat	_I2C_Restart,88
  1279                           	global	_I2C_Slave
  1280                           psect	text280,local,class=CODE,delta=2
  1281                           global __ptext280
  1282  058C                     __ptext280:
  1283                           
  1284 ;; *************** function _I2C_Slave *****************
  1285 ;; Defined at:
  1286 ;;		line 22 in file "D:\Embedded\pic\code\software\protocal\I2c\RTC\time.c"
  1287 ;; Parameters:    Size  Location     Type
  1288 ;;  data            1    wreg     unsigned char 
  1289 ;; Auto vars:     Size  Location     Type
  1290 ;;  data            1    0[COMMON] unsigned char 
  1291 ;; Return value:  Size  Location     Type
  1292 ;;		None               void
  1293 ;; Registers used:
  1294 ;;		wreg, status,2, status,0, pclath, cstack
  1295 ;; Tracked objects:
  1296 ;;		On entry : 0/0
  1297 ;;		On exit  : 0/0
  1298 ;;		Unchanged: 0/0
  1299 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1300 ;;      Params:         0       0       0       0       0
  1301 ;;      Locals:         1       0       0       0       0
  1302 ;;      Temps:          0       0       0       0       0
  1303 ;;      Totals:         1       0       0       0       0
  1304 ;;Total ram usage:        1 bytes
  1305 ;; Hardware stack levels used:    1
  1306 ;; Hardware stack levels required when called:    1
  1307 ;; This function calls:
  1308 ;;		_hold
  1309 ;; This function is called by:
  1310 ;;		_main
  1311 ;; This function uses a non-reentrant model
  1312 ;;
  1313                           psect	text280
  1314                           	file	"D:\Embedded\pic\code\software\protocal\I2c\RTC\time.c"
  1315                           	line	22
  1316                           	global	__size_of_I2C_Slave
  1317  0016                     	__size_of_I2C_Slave	equ	__end_of_I2C_Slave-_I2C_Slave
  1318                           	
  1319  058C                     _I2C_Slave:	
  1320                           	opt	stack 6
  1321                           ; Regs used in _I2C_Slave: [wreg+status,2+status,0+pclath+cstack]
  1322                           ;I2C_Slave@data stored from wreg
  1323  058C  00F0               	movwf	(I2C_Slave@data)
  1324                           	line	23
  1325                           	
  1326  058D                     l2409:	
  1327                           ;time.c: 23: ACKSTAT=1;
  1328  058D  1683               	bsf	status, 5	;RP0=1, select bank1
  1329  058E  1303               	bcf	status, 6	;RP1=0, select bank1
  1330  058F  1711               	bsf	(1166/8)^080h,(1166)&7
  1331                           	line	24
  1332                           	
  1333  0590                     l2411:	
  1334                           ;time.c: 24: SSPBUF=data;
  1335  0590  0870               	movf	(I2C_Slave@data),w
  1336  0591  1283               	bcf	status, 5	;RP0=0, select bank0
  1337  0592  1303               	bcf	status, 6	;RP1=0, select bank0
  1338  0593  0093               	movwf	(19)	;volatile
  1339                           	line	25
  1340                           ;time.c: 25: while(ACKSTAT==1);
  1341  0594  2D95               	goto	l1046
  1342                           	
  1343  0595                     l1047:	
  1344                           	
  1345  0595                     l1046:	
  1346  0595  1683               	bsf	status, 5	;RP0=1, select bank1
  1347  0596  1303               	bcf	status, 6	;RP1=0, select bank1
  1348  0597  1B11               	btfsc	(1166/8)^080h,(1166)&7
  1349  0598  2D9A               	goto	u2391
  1350  0599  2D9B               	goto	u2390
  1351  059A                     u2391:
  1352  059A  2D95               	goto	l1046
  1353  059B                     u2390:
  1354  059B  2D9C               	goto	l2413
  1355                           	
  1356  059C                     l1048:	
  1357                           	line	26
  1358                           	
  1359  059C                     l2413:	
  1360                           ;time.c: 26: hold();
  1361  059C  120A  118A  2554   	fcall	_hold
              120A  118A         
  1362                           	line	27
  1363                           	
  1364  05A1                     l1049:	
  1365  05A1  0008               	return
  1366                           	opt stack 0
  1367                           GLOBAL	__end_of_I2C_Slave
  1368  05A2                     	__end_of_I2C_Slave:
  1369 ;; =============== function _I2C_Slave ends ============
  1370                           
  1371                           	signat	_I2C_Slave,4216
  1372                           	global	_I2C_Stop
  1373                           psect	text281,local,class=CODE,delta=2
  1374                           global __ptext281
  1375  0566                     __ptext281:
  1376                           
  1377 ;; *************** function _I2C_Stop *****************
  1378 ;; Defined at:
  1379 ;;		line 17 in file "D:\Embedded\pic\code\software\protocal\I2c\RTC\time.c"
  1380 ;; Parameters:    Size  Location     Type
  1381 ;;		None
  1382 ;; Auto vars:     Size  Location     Type
  1383 ;;		None
  1384 ;; Return value:  Size  Location     Type
  1385 ;;		None               void
  1386 ;; Registers used:
  1387 ;;		status,2, status,0, pclath, cstack
  1388 ;; Tracked objects:
  1389 ;;		On entry : 0/0
  1390 ;;		On exit  : 0/0
  1391 ;;		Unchanged: 0/0
  1392 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1393 ;;      Params:         0       0       0       0       0
  1394 ;;      Locals:         0       0       0       0       0
  1395 ;;      Temps:          0       0       0       0       0
  1396 ;;      Totals:         0       0       0       0       0
  1397 ;;Total ram usage:        0 bytes
  1398 ;; Hardware stack levels used:    1
  1399 ;; Hardware stack levels required when called:    1
  1400 ;; This function calls:
  1401 ;;		_hold
  1402 ;; This function is called by:
  1403 ;;		_main
  1404 ;; This function uses a non-reentrant model
  1405 ;;
  1406                           psect	text281
  1407                           	file	"D:\Embedded\pic\code\software\protocal\I2c\RTC\time.c"
  1408                           	line	17
  1409                           	global	__size_of_I2C_Stop
  1410  0009                     	__size_of_I2C_Stop	equ	__end_of_I2C_Stop-_I2C_Stop
  1411                           	
  1412  0566                     _I2C_Stop:	
  1413                           	opt	stack 6
  1414                           ; Regs used in _I2C_Stop: [status,2+status,0+pclath+cstack]
  1415                           	line	18
  1416                           	
  1417  0566                     l2405:	
  1418                           ;time.c: 18: PEN=1;
  1419  0566  1683               	bsf	status, 5	;RP0=1, select bank1
  1420  0567  1303               	bcf	status, 6	;RP1=0, select bank1
  1421  0568  1511               	bsf	(1162/8)^080h,(1162)&7
  1422                           	line	19
  1423                           	
  1424  0569                     l2407:	
  1425                           ;time.c: 19: hold();
  1426  0569  120A  118A  2554   	fcall	_hold
              120A  118A         
  1427                           	line	20
  1428                           	
  1429  056E                     l1043:	
  1430  056E  0008               	return
  1431                           	opt stack 0
  1432                           GLOBAL	__end_of_I2C_Stop
  1433  056F                     	__end_of_I2C_Stop:
  1434 ;; =============== function _I2C_Stop ends ============
  1435                           
  1436                           	signat	_I2C_Stop,88
  1437                           	global	_I2C_Start
  1438                           psect	text282,local,class=CODE,delta=2
  1439                           global __ptext282
  1440  055D                     __ptext282:
  1441                           
  1442 ;; *************** function _I2C_Start *****************
  1443 ;; Defined at:
  1444 ;;		line 12 in file "D:\Embedded\pic\code\software\protocal\I2c\RTC\time.c"
  1445 ;; Parameters:    Size  Location     Type
  1446 ;;		None
  1447 ;; Auto vars:     Size  Location     Type
  1448 ;;		None
  1449 ;; Return value:  Size  Location     Type
  1450 ;;		None               void
  1451 ;; Registers used:
  1452 ;;		status,2, status,0, pclath, cstack
  1453 ;; Tracked objects:
  1454 ;;		On entry : 0/0
  1455 ;;		On exit  : 0/0
  1456 ;;		Unchanged: 0/0
  1457 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1458 ;;      Params:         0       0       0       0       0
  1459 ;;      Locals:         0       0       0       0       0
  1460 ;;      Temps:          0       0       0       0       0
  1461 ;;      Totals:         0       0       0       0       0
  1462 ;;Total ram usage:        0 bytes
  1463 ;; Hardware stack levels used:    1
  1464 ;; Hardware stack levels required when called:    1
  1465 ;; This function calls:
  1466 ;;		_hold
  1467 ;; This function is called by:
  1468 ;;		_main
  1469 ;; This function uses a non-reentrant model
  1470 ;;
  1471                           psect	text282
  1472                           	file	"D:\Embedded\pic\code\software\protocal\I2c\RTC\time.c"
  1473                           	line	12
  1474                           	global	__size_of_I2C_Start
  1475  0009                     	__size_of_I2C_Start	equ	__end_of_I2C_Start-_I2C_Start
  1476                           	
  1477  055D                     _I2C_Start:	
  1478                           	opt	stack 6
  1479                           ; Regs used in _I2C_Start: [status,2+status,0+pclath+cstack]
  1480                           	line	13
  1481                           	
  1482  055D                     l2401:	
  1483                           ;time.c: 13: SEN=1;
  1484  055D  1683               	bsf	status, 5	;RP0=1, select bank1
  1485  055E  1303               	bcf	status, 6	;RP1=0, select bank1
  1486  055F  1411               	bsf	(1160/8)^080h,(1160)&7
  1487                           	line	14
  1488                           	
  1489  0560                     l2403:	
  1490                           ;time.c: 14: hold();
  1491  0560  120A  118A  2554   	fcall	_hold
              120A  118A         
  1492                           	line	15
  1493                           	
  1494  0565                     l1040:	
  1495  0565  0008               	return
  1496                           	opt stack 0
  1497                           GLOBAL	__end_of_I2C_Start
  1498  0566                     	__end_of_I2C_Start:
  1499 ;; =============== function _I2C_Start ends ============
  1500                           
  1501                           	signat	_I2C_Start,88
  1502                           	global	_lcd_cmd
  1503                           psect	text283,local,class=CODE,delta=2
  1504                           global __ptext283
  1505  05C5                     __ptext283:
  1506                           
  1507 ;; *************** function _lcd_cmd *****************
  1508 ;; Defined at:
  1509 ;;		line 9 in file "D:\Embedded\pic\code\software\protocal\I2c\RTC\lcd.h"
  1510 ;; Parameters:    Size  Location     Type
  1511 ;;  a               1    wreg     unsigned char 
  1512 ;;  c               1    2[COMMON] unsigned char 
  1513 ;; Auto vars:     Size  Location     Type
  1514 ;;  a               1    3[COMMON] unsigned char 
  1515 ;; Return value:  Size  Location     Type
  1516 ;;		None               void
  1517 ;; Registers used:
  1518 ;;		wreg, status,2, status,0, pclath, cstack
  1519 ;; Tracked objects:
  1520 ;;		On entry : 0/0
  1521 ;;		On exit  : 0/0
  1522 ;;		Unchanged: 0/0
  1523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1524 ;;      Params:         1       0       0       0       0
  1525 ;;      Locals:         1       0       0       0       0
  1526 ;;      Temps:          0       0       0       0       0
  1527 ;;      Totals:         2       0       0       0       0
  1528 ;;Total ram usage:        2 bytes
  1529 ;; Hardware stack levels used:    1
  1530 ;; Hardware stack levels required when called:    1
  1531 ;; This function calls:
  1532 ;;		_delay
  1533 ;; This function is called by:
  1534 ;;		_string
  1535 ;;		_conversion
  1536 ;;		_main
  1537 ;; This function uses a non-reentrant model
  1538 ;;
  1539                           psect	text283
  1540                           	file	"D:\Embedded\pic\code\software\protocal\I2c\RTC\lcd.h"
  1541                           	line	9
  1542                           	global	__size_of_lcd_cmd
  1543  0024                     	__size_of_lcd_cmd	equ	__end_of_lcd_cmd-_lcd_cmd
  1544                           	
  1545  05C5                     _lcd_cmd:	
  1546                           	opt	stack 4
  1547                           ; Regs used in _lcd_cmd: [wreg+status,2+status,0+pclath+cstack]
  1548                           ;lcd_cmd@a stored from wreg
  1549  05C5  00F3               	movwf	(lcd_cmd@a)
  1550                           	line	10
  1551                           	
  1552  05C6                     l2389:	
  1553                           ;lcd.h: 10: RE0=a;
  1554  05C6  1873               	btfsc	(lcd_cmd@a),0
  1555  05C7  2DC9               	goto	u2371
  1556  05C8  2DCD               	goto	u2370
  1557                           	
  1558  05C9                     u2371:
  1559  05C9  1283               	bcf	status, 5	;RP0=0, select bank0
  1560  05CA  1303               	bcf	status, 6	;RP1=0, select bank0
  1561  05CB  1409               	bsf	(72/8),(72)&7
  1562  05CC  2DD0               	goto	u2384
  1563  05CD                     u2370:
  1564  05CD  1283               	bcf	status, 5	;RP0=0, select bank0
  1565  05CE  1303               	bcf	status, 6	;RP1=0, select bank0
  1566  05CF  1009               	bcf	(72/8),(72)&7
  1567  05D0                     u2384:
  1568                           	line	11
  1569                           	
  1570  05D0                     l2391:	
  1571                           ;lcd.h: 11: PORTD=c;
  1572  05D0  0872               	movf	(lcd_cmd@c),w
  1573  05D1  0088               	movwf	(8)	;volatile
  1574                           	line	12
  1575                           	
  1576  05D2                     l2393:	
  1577                           ;lcd.h: 12: RE1=1;
  1578  05D2  1489               	bsf	(73/8),(73)&7
  1579                           	line	13
  1580                           	
  1581  05D3                     l2395:	
  1582                           ;lcd.h: 13: delay(100);
  1583  05D3  3064               	movlw	low(064h)
  1584  05D4  00F0               	movwf	(?_delay)
  1585  05D5  3000               	movlw	high(064h)
  1586  05D6  00F1               	movwf	((?_delay))+1
  1587  05D7  120A  118A  2578   	fcall	_delay
              120A  118A         
  1588                           	line	14
  1589                           	
  1590  05DC                     l2397:	
  1591                           ;lcd.h: 14: RE1=0;
  1592  05DC  1283               	bcf	status, 5	;RP0=0, select bank0
  1593  05DD  1303               	bcf	status, 6	;RP1=0, select bank0
  1594  05DE  1089               	bcf	(73/8),(73)&7
  1595                           	line	15
  1596                           	
  1597  05DF                     l2399:	
  1598                           ;lcd.h: 15: delay(100);
  1599  05DF  3064               	movlw	low(064h)
  1600  05E0  00F0               	movwf	(?_delay)
  1601  05E1  3000               	movlw	high(064h)
  1602  05E2  00F1               	movwf	((?_delay))+1
  1603  05E3  120A  118A  2578   	fcall	_delay
              120A  118A         
  1604                           	line	16
  1605                           	
  1606  05E8                     l1031:	
  1607  05E8  0008               	return
  1608                           	opt stack 0
  1609                           GLOBAL	__end_of_lcd_cmd
  1610  05E9                     	__end_of_lcd_cmd:
  1611 ;; =============== function _lcd_cmd ends ============
  1612                           
  1613                           	signat	_lcd_cmd,8312
  1614                           	global	_I2C_Read
  1615                           psect	text284,local,class=CODE,delta=2
  1616                           global __ptext284
  1617  05A2                     __ptext284:
  1618                           
  1619 ;; *************** function _I2C_Read *****************
  1620 ;; Defined at:
  1621 ;;		line 34 in file "D:\Embedded\pic\code\software\protocal\I2c\RTC\time.c"
  1622 ;; Parameters:    Size  Location     Type
  1623 ;;  i               2    0[COMMON] unsigned int 
  1624 ;; Auto vars:     Size  Location     Type
  1625 ;;  read            1    3[COMMON] unsigned char 
  1626 ;; Return value:  Size  Location     Type
  1627 ;;                  1    wreg      unsigned char 
  1628 ;; Registers used:
  1629 ;;		wreg
  1630 ;; Tracked objects:
  1631 ;;		On entry : 0/0
  1632 ;;		On exit  : 0/0
  1633 ;;		Unchanged: 0/0
  1634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1635 ;;      Params:         2       0       0       0       0
  1636 ;;      Locals:         1       0       0       0       0
  1637 ;;      Temps:          1       0       0       0       0
  1638 ;;      Totals:         4       0       0       0       0
  1639 ;;Total ram usage:        4 bytes
  1640 ;; Hardware stack levels used:    1
  1641 ;; This function calls:
  1642 ;;		Nothing
  1643 ;; This function is called by:
  1644 ;;		_main
  1645 ;; This function uses a non-reentrant model
  1646 ;;
  1647                           psect	text284
  1648                           	file	"D:\Embedded\pic\code\software\protocal\I2c\RTC\time.c"
  1649                           	line	34
  1650                           	global	__size_of_I2C_Read
  1651  0023                     	__size_of_I2C_Read	equ	__end_of_I2C_Read-_I2C_Read
  1652                           	
  1653  05A2                     _I2C_Read:	
  1654                           	opt	stack 7
  1655                           ; Regs used in _I2C_Read: [wreg]
  1656                           	line	36
  1657                           	
  1658  05A2                     l2375:	
  1659                           ;time.c: 35: unsigned char read;
  1660                           ;time.c: 36: if(i==6)
  1661  05A2  3006               	movlw	06h
  1662  05A3  0670               	xorwf	(I2C_Read@i),w
  1663  05A4  0471               	iorwf	(I2C_Read@i+1),w
  1664  05A5  1D03               	skipz
  1665  05A6  2DA8               	goto	u2351
  1666  05A7  2DA9               	goto	u2350
  1667  05A8                     u2351:
  1668  05A8  2DAD               	goto	l1055
  1669  05A9                     u2350:
  1670                           	line	38
  1671                           	
  1672  05A9                     l2377:	
  1673                           ;time.c: 37: {
  1674                           ;time.c: 38: ACKDT=1;
  1675  05A9  1683               	bsf	status, 5	;RP0=1, select bank1
  1676  05AA  1303               	bcf	status, 6	;RP1=0, select bank1
  1677  05AB  1691               	bsf	(1165/8)^080h,(1165)&7
  1678                           	line	39
  1679                           ;time.c: 39: }
  1680  05AC  2DB2               	goto	l1057
  1681                           	line	40
  1682                           	
  1683  05AD                     l1055:	
  1684                           	line	42
  1685                           ;time.c: 40: else
  1686                           ;time.c: 41: {
  1687                           ;time.c: 42: ACKDT=0;
  1688  05AD  1683               	bsf	status, 5	;RP0=1, select bank1
  1689  05AE  1303               	bcf	status, 6	;RP1=0, select bank1
  1690  05AF  1291               	bcf	(1165/8)^080h,(1165)&7
  1691  05B0  2DB2               	goto	l1057
  1692                           	line	43
  1693                           	
  1694  05B1                     l1056:	
  1695                           	line	44
  1696                           ;time.c: 43: }
  1697                           ;time.c: 44: while(BF==0);
  1698  05B1  2DB2               	goto	l1057
  1699                           	
  1700  05B2                     l1058:	
  1701                           	
  1702  05B2                     l1057:	
  1703  05B2  1C14               	btfss	(1184/8)^080h,(1184)&7
  1704  05B3  2DB5               	goto	u2361
  1705  05B4  2DB6               	goto	u2360
  1706  05B5                     u2361:
  1707  05B5  2DB2               	goto	l1057
  1708  05B6                     u2360:
  1709  05B6  2DB7               	goto	l2379
  1710                           	
  1711  05B7                     l1059:	
  1712                           	line	45
  1713                           	
  1714  05B7                     l2379:	
  1715                           ;time.c: 45: read=SSPBUF;
  1716  05B7  1283               	bcf	status, 5	;RP0=0, select bank0
  1717  05B8  1303               	bcf	status, 6	;RP1=0, select bank0
  1718  05B9  0813               	movf	(19),w	;volatile
  1719  05BA  00F2               	movwf	(??_I2C_Read+0)+0
  1720  05BB  0872               	movf	(??_I2C_Read+0)+0,w
  1721  05BC  00F3               	movwf	(I2C_Read@read)
  1722                           	line	46
  1723                           	
  1724  05BD                     l2381:	
  1725                           ;time.c: 46: SSPOV=0;
  1726  05BD  1314               	bcf	(166/8),(166)&7
  1727                           	line	47
  1728                           	
  1729  05BE                     l2383:	
  1730                           ;time.c: 47: ACKEN=1;
  1731  05BE  1683               	bsf	status, 5	;RP0=1, select bank1
  1732  05BF  1303               	bcf	status, 6	;RP1=0, select bank1
  1733  05C0  1611               	bsf	(1164/8)^080h,(1164)&7
  1734                           	line	48
  1735                           	
  1736  05C1                     l2385:	
  1737                           ;time.c: 48: BF=0;
  1738  05C1  1014               	bcf	(1184/8)^080h,(1184)&7
  1739                           	line	49
  1740                           ;time.c: 49: return read;
  1741  05C2  0873               	movf	(I2C_Read@read),w
  1742  05C3  2DC4               	goto	l1060
  1743                           	
  1744  05C4                     l2387:	
  1745                           	line	50
  1746                           	
  1747  05C4                     l1060:	
  1748  05C4  0008               	return
  1749                           	opt stack 0
  1750                           GLOBAL	__end_of_I2C_Read
  1751  05C5                     	__end_of_I2C_Read:
  1752 ;; =============== function _I2C_Read ends ============
  1753                           
  1754                           	signat	_I2C_Read,4217
  1755                           	global	_hold
  1756                           psect	text285,local,class=CODE,delta=2
  1757                           global __ptext285
  1758  0554                     __ptext285:
  1759                           
  1760 ;; *************** function _hold *****************
  1761 ;; Defined at:
  1762 ;;		line 7 in file "D:\Embedded\pic\code\software\protocal\I2c\RTC\time.c"
  1763 ;; Parameters:    Size  Location     Type
  1764 ;;		None
  1765 ;; Auto vars:     Size  Location     Type
  1766 ;;		None
  1767 ;; Return value:  Size  Location     Type
  1768 ;;		None               void
  1769 ;; Registers used:
  1770 ;;		None
  1771 ;; Tracked objects:
  1772 ;;		On entry : 0/0
  1773 ;;		On exit  : 0/0
  1774 ;;		Unchanged: 0/0
  1775 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1776 ;;      Params:         0       0       0       0       0
  1777 ;;      Locals:         0       0       0       0       0
  1778 ;;      Temps:          0       0       0       0       0
  1779 ;;      Totals:         0       0       0       0       0
  1780 ;;Total ram usage:        0 bytes
  1781 ;; Hardware stack levels used:    1
  1782 ;; This function calls:
  1783 ;;		Nothing
  1784 ;; This function is called by:
  1785 ;;		_I2C_Start
  1786 ;;		_I2C_Stop
  1787 ;;		_I2C_Slave
  1788 ;;		_I2C_Restart
  1789 ;; This function uses a non-reentrant model
  1790 ;;
  1791                           psect	text285
  1792                           	file	"D:\Embedded\pic\code\software\protocal\I2c\RTC\time.c"
  1793                           	line	7
  1794                           	global	__size_of_hold
  1795  0009                     	__size_of_hold	equ	__end_of_hold-_hold
  1796                           	
  1797  0554                     _hold:	
  1798                           	opt	stack 6
  1799                           ; Regs used in _hold: []
  1800                           	line	8
  1801                           	
  1802  0554                     l2373:	
  1803                           ;time.c: 8: while(SSPIF==0);
  1804  0554  2D55               	goto	l1034
  1805                           	
  1806  0555                     l1035:	
  1807                           	
  1808  0555                     l1034:	
  1809  0555  1283               	bcf	status, 5	;RP0=0, select bank0
  1810  0556  1303               	bcf	status, 6	;RP1=0, select bank0
  1811  0557  1D8C               	btfss	(99/8),(99)&7
  1812  0558  2D5A               	goto	u2341
  1813  0559  2D5B               	goto	u2340
  1814  055A                     u2341:
  1815  055A  2D55               	goto	l1034
  1816  055B                     u2340:
  1817                           	
  1818  055B                     l1036:	
  1819                           	line	9
  1820                           ;time.c: 9: SSPIF=0;
  1821  055B  118C               	bcf	(99/8),(99)&7
  1822                           	line	10
  1823                           	
  1824  055C                     l1037:	
  1825  055C  0008               	return
  1826                           	opt stack 0
  1827                           GLOBAL	__end_of_hold
  1828  055D                     	__end_of_hold:
  1829 ;; =============== function _hold ends ============
  1830                           
  1831                           	signat	_hold,88
  1832                           	global	_delay
  1833                           psect	text286,local,class=CODE,delta=2
  1834                           global __ptext286
  1835  0578                     __ptext286:
  1836                           
  1837 ;; *************** function _delay *****************
  1838 ;; Defined at:
  1839 ;;		line 5 in file "D:\Embedded\pic\code\software\protocal\I2c\RTC\lcd.h"
  1840 ;; Parameters:    Size  Location     Type
  1841 ;;  ms              2    0[COMMON] unsigned int 
  1842 ;; Auto vars:     Size  Location     Type
  1843 ;;		None
  1844 ;; Return value:  Size  Location     Type
  1845 ;;		None               void
  1846 ;; Registers used:
  1847 ;;		wreg
  1848 ;; Tracked objects:
  1849 ;;		On entry : 0/0
  1850 ;;		On exit  : 0/0
  1851 ;;		Unchanged: 0/0
  1852 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1853 ;;      Params:         2       0       0       0       0
  1854 ;;      Locals:         0       0       0       0       0
  1855 ;;      Temps:          0       0       0       0       0
  1856 ;;      Totals:         2       0       0       0       0
  1857 ;;Total ram usage:        2 bytes
  1858 ;; Hardware stack levels used:    1
  1859 ;; This function calls:
  1860 ;;		Nothing
  1861 ;; This function is called by:
  1862 ;;		_lcd_cmd
  1863 ;;		_main
  1864 ;; This function uses a non-reentrant model
  1865 ;;
  1866                           psect	text286
  1867                           	file	"D:\Embedded\pic\code\software\protocal\I2c\RTC\lcd.h"
  1868                           	line	5
  1869                           	global	__size_of_delay
  1870  0014                     	__size_of_delay	equ	__end_of_delay-_delay
  1871                           	
  1872  0578                     _delay:	
  1873                           	opt	stack 7
  1874                           ; Regs used in _delay: [wreg]
  1875                           	line	6
  1876                           	
  1877  0578                     l2369:	
  1878                           ;lcd.h: 6: while(ms--);
  1879  0578  2D7A               	goto	l2371
  1880                           	
  1881  0579                     l1026:	
  1882  0579  2D7A               	goto	l2371
  1883                           	
  1884  057A                     l1025:	
  1885                           	
  1886  057A                     l2371:	
  1887  057A  3001               	movlw	low(01h)
  1888  057B  02F0               	subwf	(delay@ms),f
  1889  057C  3000               	movlw	high(01h)
  1890  057D  1C03               	skipc
  1891  057E  03F1               	decf	(delay@ms+1),f
  1892  057F  02F1               	subwf	(delay@ms+1),f
  1893  0580  30FF               	movlw	high(0FFFFh)
  1894  0581  0671               	xorwf	((delay@ms+1)),w
  1895  0582  1D03               	skipz
  1896  0583  2D86               	goto	u2335
  1897  0584  30FF               	movlw	low(0FFFFh)
  1898  0585  0670               	xorwf	((delay@ms)),w
  1899  0586                     u2335:
  1900                           
  1901  0586  1D03               	skipz
  1902  0587  2D89               	goto	u2331
  1903  0588  2D8A               	goto	u2330
  1904  0589                     u2331:
  1905  0589  2D7A               	goto	l2371
  1906  058A                     u2330:
  1907  058A  2D8B               	goto	l1028
  1908                           	
  1909  058B                     l1027:	
  1910                           	line	7
  1911                           	
  1912  058B                     l1028:	
  1913  058B  0008               	return
  1914                           	opt stack 0
  1915                           GLOBAL	__end_of_delay
  1916  058C                     	__end_of_delay:
  1917 ;; =============== function _delay ends ============
  1918                           
  1919                           	signat	_delay,4216
  1920                           psect	text287,local,class=CODE,delta=2
  1921                           global __ptext287
  1922  0000                     __ptext287:
  1923                           	global	btemp
  1924  007E                     	btemp set 07Eh
  1925                           
  1926                           	DABS	1,126,2	;btemp
  1927                           	global	wtemp0
  1928  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.81 build 7503 
Symbol Table                                                                                   Tue Jun 28 11:48:16 2022

                   pc 0002    __size_of_I2C_Slave 0016    __size_of_I2C_Start 0009                    _BF 04A0  
                  fsr 0004                   _RC0 0038                   _RE0 0048                   _RE1 0049  
                 _PEN 048A                   _SEN 0488                   _SMP 04A7                   fsr0 0004  
                 indf 0000  __size_of_I2C_Restart 0009                  l1031 05E8                  l1040 0565  
                l1025 057A                  l1026 0579                  l1034 0555                  l1027 058B  
                l1035 0555                  l1043 056E                  l1028 058B                  l1036 055B  
                l1060 05C4                  l1052 0577                  l1037 055C                  l1046 0595  
                l1070 07FF                  l1055 05AD                  l1047 0595                  l1063 0600  
                l1056 05B1                  l1048 059C                  l1064 05EB                  l1057 05B2  
                l1049 05A1                  l1065 060D                  l1073 0645                  l1058 05B2  
                l1066 060D                  l1074 066C                  l1059 05B7                  l1075 0691  
                l1076 06A6                  l1069 0763                  l1077 06A7                  l1078 06A7  
                l2401 055D                  l2403 0560                  l2411 0590                  l2405 0566  
                l2413 059C                  l2421 05EB                  l2501 065B                  l2407 0569  
                l2415 056F                  l2423 05FB                  l2431 06BB                  l2511 0686  
                l2503 0661                  l2409 058D                  l2417 0572                  l2425 0600  
                l2441 0736                  l2433 06D3                  l2513 068A                  l2505 0664  
                l2371 057A                  l2419 05EA                  l2451 0763                  l2443 0745  
                l2435 06E3                  l2427 06AB                  l2507 066B                  l2515 0691  
                l2373 0554                  l2381 05BD                  l2461 07CD                  l2453 076D  
                l2445 074F                  l2437 0715                  l2429 06B5                  l2517 0696  
                l2509 066F                  l2383 05BE                  l2375 05A2                  l2391 05D0  
                l2463 07D7                  l2455 0773                  l2447 0758                  l2439 071F  
                l2519 069C                  l2471 0615                  l2369 0578                  l2385 05C1  
                l2377 05A9                  l2393 05D2                  l2465 07EF                  l2457 078B  
                l2449 075F                  l2481 0624                  l2473 0618                  l2387 05C4  
                l2379 05B7                  l2395 05D3                  l2459 079B                  l2491 063A  
                l2483 0625                  l2475 061B                  l2467 060E                  l2397 05DC  
                l2389 05C6                  l2493 0645                  l2485 0628                  l2477 061E  
                l2469 0612                  l2399 05DF                  l2495 064A                  l2487 062C  
                l2479 0621                  l2497 0650                  l2489 0630                  l2499 0656  
                STR_1 0009                  STR_2 0010                  u2400 060C                  u2401 060B  
                u2330 058A                  u2331 0589                  u2340 055B                  u2500 066A  
                u2341 055A                  u2501 0669                  u2350 05A9                  u2510 0690  
                u2335 0586                  u2351 05A8                  u2415 06C2                  u2511 068F  
                u2360 05B6                  u2440 074F                  u2361 05B5                  u2441 074E  
                u2425 06F4                  u2370 05CD                  u2450 0758                  u2371 05C9  
                u2451 0757                  u2435 0725                  u2460 075F                  u2461 075E  
                u2390 059B                  u2391 059A                  u2384 05D0                  u2475 077A  
                u2485 07AC                  u2495 07DE                  _RCEN 048B                  _RSEN 0489  
                _main 060E                  _hold 0554      __end_of_I2C_Read 05C5                  btemp 007E  
    __end_of_I2C_Stop 056F                  start 0000                 ?_main 0070                 ?_hold 0070  
               _ACKEN 048C                 _ACKDT 048D                 _ANSEL 0188                 _PORTC 0007  
               _PORTD 0008                 _PORTE 0009                 _TRISC 0087                 _TRISD 0088  
               _TRISE 0089                 _SSPIF 0063                 _SSPOV 00A6       __end_of_lcd_cmd 05E9  
               _delay 0578                 main@i 0027     __end_of_I2C_Slave 05A2     __end_of_I2C_Start 0566  
               pclath 000A                 status 0003                 wtemp0 007E          __end_of_main 06AA  
        __end_of_hold 055D                ??_main 0079                ??_hold 0070             I2C_Read@i 0070  
              ?_delay 0070                _ANSELH 0189                _SSPADD 0093                _SSPCON 0014  
              _SSPBUF 0013             ??_lcd_cmd 0073                _string 05E9             ?_I2C_Read 0070  
           ?_I2C_Stop 0070        __pcstackCOMMON 0070         __end_of_delay 058C            ??_I2C_Read 0072  
          ??_I2C_Stop 0070               ??_delay 0072            __pmaintext 060E          I2C_Read@read 0073  
             _ACKSTAT 048E               ?_string 0070         ??_I2C_Restart 0070            _conversion 06AA  
           _I2C_Slave 058C             _I2C_Start 055D               _lcd_cmd 05C5       __size_of_string 0025  
             delay@ms 0070   __end_of_I2C_Restart 0578  end_of_initialization 0550            ?_I2C_Slave 0070  
          ?_I2C_Start 0070               string@p 0075     __size_of_I2C_Read 0023     __size_of_I2C_Stop 0009  
         ?_conversion 0070           _I2C_Restart 056F        __end_of_string 060E   start_initialization 0550  
         ??_I2C_Slave 0070           ??_I2C_Start 0070              ??_string 0074   __size_of_conversion 0156  
       __pcstackBANK0 0020             __ptext280 058C             __ptext281 0566             __ptext282 055D  
           __ptext283 05C5             __ptext284 05A2             __ptext276 0000             __ptext285 0554  
           __ptext277 06AA             __ptext286 0578             __ptext278 05E9             __ptext287 0000  
           __ptext279 056F             __pstrings 0003              ?_lcd_cmd 0072              _I2C_Read 05A2  
            _I2C_Stop 0566        __size_of_delay 0014         I2C_Slave@data 0070           __stringbase 0008  
        ??_conversion 0076      __size_of_lcd_cmd 0024          ?_I2C_Restart 0070    __end_of_conversion 0800  
       __size_of_main 009C         __size_of_hold 0009              lcd_cmd@a 0073              lcd_cmd@c 0072  
            main@read 0020        conversion@disp 0078             stringcode 0003              stringdir 0003  
            stringtab 0003  
