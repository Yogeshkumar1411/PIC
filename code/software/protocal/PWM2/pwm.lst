

HI-TECH Software PIC LITE Macro Assembler V9.81 build 7503 
                                                                                               Tue Jun 28 12:39:05 2022

HI-TECH Software Omniscient Code Generator (Lite mode) build 7503
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 7503"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F887
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           	FNCALL	_main,_adc
    43                           	FNCALL	_main,_motor
    44                           	FNCALL	_motor,_delay
    45                           	FNROOT	_main
    46                           	global	_DV
    47                           	global	_high
    48                           	global	_low
    49                           	global	_write
    50                           psect	nvCOMMON,class=COMMON,space=1
    51                           global __pnvCOMMON
    52  007C                     __pnvCOMMON:
    53  007C                     _write:
    54  007C                            ds      2
    55                           
    56                           	global	_ADCON0
    57  001F                     _ADCON0	set	31
    58                           	global	_ADRESH
    59  001E                     _ADRESH	set	30
    60                           	global	_CCP2CON
    61  001D                     _CCP2CON	set	29
    62                           	global	_CCPR2L
    63  001B                     _CCPR2L	set	27
    64                           	global	_PORTA
    65  0005                     _PORTA	set	5
    66                           	global	_PORTC
    67  0007                     _PORTC	set	7
    68                           	global	_T2CON
    69  0012                     _T2CON	set	18
    70                           	global	_ADCON1
    71  009F                     _ADCON1	set	159
    72                           	global	_ADRESL
    73  009E                     _ADRESL	set	158
    74                           	global	_TRISA
    75  0085                     _TRISA	set	133
    76                           	global	_TRISC
    77  0087                     _TRISC	set	135
    78                           	global	_ANSEL
    79  0188                     _ANSEL	set	392
    80                           	global	_ANSELH
    81  0189                     _ANSELH	set	393
    82                           	file	"pwm.as"
    83                           	line	#
    84                           psect cinit,class=CODE,delta=2
    85                           global start_initialization
    86  0758                     start_initialization:
    87                           
    88                           psect	bssCOMMON,class=COMMON,space=1
    89                           global __pbssCOMMON
    90  0070                     __pbssCOMMON:
    91  0070                     _DV:
    92  0070                            ds      2
    93                           
    94  0072                     _high:
    95  0072                            ds      2
    96                           
    97  0074                     _low:
    98  0074                            ds      2
    99                           
   100                           ; Clear objects allocated to COMMON
   101                           psect cinit,class=CODE,delta=2
   102  0758  01F0               	clrf	((__pbssCOMMON)+0)&07Fh
   103  0759  01F1               	clrf	((__pbssCOMMON)+1)&07Fh
   104  075A  01F2               	clrf	((__pbssCOMMON)+2)&07Fh
   105  075B  01F3               	clrf	((__pbssCOMMON)+3)&07Fh
   106  075C  01F4               	clrf	((__pbssCOMMON)+4)&07Fh
   107  075D  01F5               	clrf	((__pbssCOMMON)+5)&07Fh
   108                           psect cinit,class=CODE,delta=2
   109                           global end_of_initialization
   110                           
   111                           ;End of C runtime variable initialization code
   112                           
   113  075E                     end_of_initialization:
   114  075E  0183               clrf status
   115  075F  120A  118A  2FCC   ljmp _main	;jump to C main() function
   116                           psect	cstackCOMMON,class=COMMON,space=1
   117                           global __pcstackCOMMON
   118  0076                     __pcstackCOMMON:
   119                           	global	?_delay
   120  0076                     ?_delay:	; 0 bytes @ 0x0
   121                           	global	?_main
   122  0076                     ?_main:	; 0 bytes @ 0x0
   123                           	global	?_adc
   124  0076                     ?_adc:	; 2 bytes @ 0x0
   125                           	global	delay@ms
   126  0076                     delay@ms:	; 2 bytes @ 0x0
   127  0076                     	ds	2
   128                           	global	??_delay
   129  0078                     ??_delay:	; 0 bytes @ 0x2
   130                           	global	?_motor
   131  0078                     ?_motor:	; 0 bytes @ 0x2
   132                           	global	??_adc
   133  0078                     ??_adc:	; 0 bytes @ 0x2
   134                           	global	motor@samp
   135  0078                     motor@samp:	; 2 bytes @ 0x2
   136  0078                     	ds	2
   137                           	global	??_motor
   138  007A                     ??_motor:	; 0 bytes @ 0x4
   139  007A                     	ds	2
   140                           	global	??_main
   141  007C                     ??_main:	; 0 bytes @ 0x6
   142 ;;Data sizes: Strings 0, constant 0, data 0, bss 6, persistent 2 stack 0
   143 ;;Auto spaces:   Size  Autos    Used
   144 ;; COMMON          14      6      14
   145 ;; BANK0           80      0       0
   146 ;; BANK1           80      0       0
   147 ;; BANK3           96      0       0
   148 ;; BANK2           96      0       0
   149                           
   150 ;;
   151 ;; Pointer list with targets:
   152                           
   153 ;; ?_adc	int  size(1) Largest target is 0
   154 ;;
   155                           
   156                           
   157 ;;
   158 ;; Critical Paths under _main in COMMON
   159 ;;
   160 ;;   _main->_motor
   161 ;;   _motor->_delay
   162 ;;
   163 ;; Critical Paths under _main in BANK0
   164 ;;
   165 ;;   None.
   166 ;;
   167 ;; Critical Paths under _main in BANK1
   168 ;;
   169 ;;   None.
   170 ;;
   171 ;; Critical Paths under _main in BANK3
   172 ;;
   173 ;;   None.
   174 ;;
   175 ;; Critical Paths under _main in BANK2
   176 ;;
   177 ;;   None.
   178                           
   179 ;;
   180 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   181 ;;
   182                           
   183 ;;
   184 ;;Call Graph Tables:
   185 ;;
   186 ;; ---------------------------------------------------------------------------------
   187 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   188 ;; ---------------------------------------------------------------------------------
   189 ;; (0) _main                                                 0     0      0      45
   190 ;;                                _adc
   191 ;;                              _motor
   192 ;; ---------------------------------------------------------------------------------
   193 ;; (1) _motor                                                4     2      2      45
   194 ;;                                              2 COMMON     4     2      2
   195 ;;                              _delay
   196 ;; ---------------------------------------------------------------------------------
   197 ;; (1) _adc                                                  4     2      2       0
   198 ;;                                              0 COMMON     4     2      2
   199 ;; ---------------------------------------------------------------------------------
   200 ;; (2) _delay                                                2     0      2      15
   201 ;;                                              0 COMMON     2     0      2
   202 ;; ---------------------------------------------------------------------------------
   203 ;; Estimated maximum stack depth 2
   204 ;; ---------------------------------------------------------------------------------
   205                           
   206 ;; Call Graph Graphs:
   207                           
   208 ;; _main (ROOT)
   209 ;;   _adc
   210 ;;   _motor
   211 ;;     _delay
   212 ;;
   213                           
   214 ;; Address spaces:
   215                           
   216 ;;Name               Size   Autos  Total    Cost      Usage
   217 ;;BITCOMMON            E      0       0       0        0.0%
   218 ;;EEDATA             100      0       0       0        0.0%
   219 ;;NULL                 0      0       0       0        0.0%
   220 ;;CODE                 0      0       0       0        0.0%
   221 ;;COMMON               E      6       E       1      100.0%
   222 ;;BITSFR0              0      0       0       1        0.0%
   223 ;;SFR0                 0      0       0       1        0.0%
   224 ;;BITSFR1              0      0       0       2        0.0%
   225 ;;SFR1                 0      0       0       2        0.0%
   226 ;;STACK                0      0       2       2        0.0%
   227 ;;ABS                  0      0       E       3        0.0%
   228 ;;BITBANK0            50      0       0       4        0.0%
   229 ;;BITSFR3              0      0       0       4        0.0%
   230 ;;SFR3                 0      0       0       4        0.0%
   231 ;;BANK0               50      0       0       5        0.0%
   232 ;;BITSFR2              0      0       0       5        0.0%
   233 ;;SFR2                 0      0       0       5        0.0%
   234 ;;BITBANK1            50      0       0       6        0.0%
   235 ;;BANK1               50      0       0       7        0.0%
   236 ;;BITBANK3            60      0       0       8        0.0%
   237 ;;BANK3               60      0       0       9        0.0%
   238 ;;BITBANK2            60      0       0      10        0.0%
   239 ;;BANK2               60      0       0      11        0.0%
   240 ;;DATA                 0      0      10      12        0.0%
   241                           
   242                           	global	_main
   243                           psect	maintext,global,class=CODE,delta=2
   244                           global __pmaintext
   245  07CC                     __pmaintext:
   246                           
   247 ;; *************** function _main *****************
   248 ;; Defined at:
   249 ;;		line 28 in file "D:\Embedded\pic\code\software\protocal\PWM2\pwm.c"
   250 ;; Parameters:    Size  Location     Type
   251 ;;		None
   252 ;; Auto vars:     Size  Location     Type
   253 ;;		None
   254 ;; Return value:  Size  Location     Type
   255 ;;		None               void
   256 ;; Registers used:
   257 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   258 ;; Tracked objects:
   259 ;;		On entry : 17F/0
   260 ;;		On exit  : 0/0
   261 ;;		Unchanged: 0/0
   262 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   263 ;;      Params:         0       0       0       0       0
   264 ;;      Locals:         0       0       0       0       0
   265 ;;      Temps:          0       0       0       0       0
   266 ;;      Totals:         0       0       0       0       0
   267 ;;Total ram usage:        0 bytes
   268 ;; Hardware stack levels required when called:    2
   269 ;; This function calls:
   270 ;;		_adc
   271 ;;		_motor
   272 ;; This function is called by:
   273 ;;		Startup code after reset
   274 ;; This function uses a non-reentrant model
   275 ;;
   276                           psect	maintext
   277                           	file	"D:\Embedded\pic\code\software\protocal\PWM2\pwm.c"
   278                           	line	28
   279                           	global	__size_of_main
   280  0034                     	__size_of_main	equ	__end_of_main-_main
   281                           	
   282  07CC                     _main:	
   283                           	opt	stack 6
   284                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   285                           	line	29
   286                           	
   287  07CC                     l2201:	
   288                           ;pwm.c: 29: TRISA=0X01;
   289  07CC  3001               	movlw	(01h)
   290  07CD  1683               	bsf	status, 5	;RP0=1, select bank1
   291  07CE  1303               	bcf	status, 6	;RP1=0, select bank1
   292  07CF  0085               	movwf	(133)^080h	;volatile
   293                           	line	30
   294                           	
   295  07D0                     l2203:	
   296                           ;pwm.c: 30: PORTA=0X00;
   297  07D0  1283               	bcf	status, 5	;RP0=0, select bank0
   298  07D1  1303               	bcf	status, 6	;RP1=0, select bank0
   299  07D2  0185               	clrf	(5)	;volatile
   300                           	line	31
   301                           	
   302  07D3                     l2205:	
   303                           ;pwm.c: 31: TRISC=0X00;
   304  07D3  1683               	bsf	status, 5	;RP0=1, select bank1
   305  07D4  1303               	bcf	status, 6	;RP1=0, select bank1
   306  07D5  0187               	clrf	(135)^080h	;volatile
   307                           	line	32
   308                           	
   309  07D6                     l2207:	
   310                           ;pwm.c: 32: PORTC=0X00;
   311  07D6  1283               	bcf	status, 5	;RP0=0, select bank0
   312  07D7  1303               	bcf	status, 6	;RP1=0, select bank0
   313  07D8  0187               	clrf	(7)	;volatile
   314                           	line	33
   315                           	
   316  07D9                     l2209:	
   317                           ;pwm.c: 33: ANSEL=0X01;
   318  07D9  3001               	movlw	(01h)
   319  07DA  1683               	bsf	status, 5	;RP0=1, select bank3
   320  07DB  1703               	bsf	status, 6	;RP1=1, select bank3
   321  07DC  0088               	movwf	(392)^0180h	;volatile
   322                           	line	34
   323                           ;pwm.c: 34: ANSELH=0X00;
   324  07DD  0189               	clrf	(393)^0180h	;volatile
   325                           	line	35
   326                           	
   327  07DE                     l2211:	
   328                           ;pwm.c: 35: T2CON=0X07;
   329  07DE  3007               	movlw	(07h)
   330  07DF  1283               	bcf	status, 5	;RP0=0, select bank0
   331  07E0  1303               	bcf	status, 6	;RP1=0, select bank0
   332  07E1  0092               	movwf	(18)	;volatile
   333                           	line	36
   334                           	
   335  07E2                     l2213:	
   336                           ;pwm.c: 36: CCP2CON=0X0F;
   337  07E2  300F               	movlw	(0Fh)
   338  07E3  009D               	movwf	(29)	;volatile
   339  07E4  2FE5               	goto	l2215
   340                           	line	37
   341                           ;pwm.c: 37: while(1)
   342                           	
   343  07E5                     l1045:	
   344                           	line	39
   345                           	
   346  07E5                     l2215:	
   347                           ;pwm.c: 38: {
   348                           ;pwm.c: 39: write=adc();
   349  07E5  120A  118A  279D   	fcall	_adc
              120A  118A         
   350  07EA  0877               	movf	(1+(?_adc)),w
   351  07EB  01FD               	clrf	(_write+1)
   352  07EC  07FD               	addwf	(_write+1)
   353  07ED  0876               	movf	(0+(?_adc)),w
   354  07EE  01FC               	clrf	(_write)
   355  07EF  07FC               	addwf	(_write)
   356                           
   357                           	line	40
   358                           	
   359  07F0                     l2217:	
   360                           ;pwm.c: 40: motor(write);
   361  07F0  087D               	movf	(_write+1),w
   362  07F1  01F9               	clrf	(?_motor+1)
   363  07F2  07F9               	addwf	(?_motor+1)
   364  07F3  087C               	movf	(_write),w
   365  07F4  01F8               	clrf	(?_motor)
   366  07F5  07F8               	addwf	(?_motor)
   367                           
   368  07F6  120A  118A  2776   	fcall	_motor
              120A  118A         
   369  07FB  2FE5               	goto	l2215
   370                           	line	41
   371                           	
   372  07FC                     l1046:	
   373                           	line	37
   374  07FC  2FE5               	goto	l2215
   375                           	
   376  07FD                     l1047:	
   377                           	line	42
   378                           	
   379  07FD                     l1048:	
   380                           	global	start
   381  07FD  120A  118A  2800   	ljmp	start
   382                           	opt stack 0
   383                           GLOBAL	__end_of_main
   384  0800                     	__end_of_main:
   385 ;; =============== function _main ends ============
   386                           
   387                           	signat	_main,88
   388                           	global	_motor
   389                           psect	text79,local,class=CODE,delta=2
   390                           global __ptext79
   391  0776                     __ptext79:
   392                           
   393 ;; *************** function _motor *****************
   394 ;; Defined at:
   395 ;;		line 11 in file "D:\Embedded\pic\code\software\protocal\PWM2\pwm.c"
   396 ;; Parameters:    Size  Location     Type
   397 ;;  samp            2    2[COMMON] int 
   398 ;; Auto vars:     Size  Location     Type
   399 ;;		None
   400 ;; Return value:  Size  Location     Type
   401 ;;		None               void
   402 ;; Registers used:
   403 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   404 ;; Tracked objects:
   405 ;;		On entry : 0/0
   406 ;;		On exit  : 0/0
   407 ;;		Unchanged: 0/0
   408 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   409 ;;      Params:         2       0       0       0       0
   410 ;;      Locals:         0       0       0       0       0
   411 ;;      Temps:          2       0       0       0       0
   412 ;;      Totals:         4       0       0       0       0
   413 ;;Total ram usage:        4 bytes
   414 ;; Hardware stack levels used:    1
   415 ;; Hardware stack levels required when called:    1
   416 ;; This function calls:
   417 ;;		_delay
   418 ;; This function is called by:
   419 ;;		_main
   420 ;; This function uses a non-reentrant model
   421 ;;
   422                           psect	text79
   423                           	file	"D:\Embedded\pic\code\software\protocal\PWM2\pwm.c"
   424                           	line	11
   425                           	global	__size_of_motor
   426  0027                     	__size_of_motor	equ	__end_of_motor-_motor
   427                           	
   428  0776                     _motor:	
   429                           	opt	stack 6
   430                           ; Regs used in _motor: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   431                           	line	12
   432                           	
   433  0776                     l2195:	
   434                           ;pwm.c: 12: CCPR2L=samp>>2;
   435  0776  0879               	movf	(motor@samp+1),w
   436  0777  00FB               	movwf	(??_motor+0)+0+1
   437  0778  0878               	movf	(motor@samp),w
   438  0779  00FA               	movwf	(??_motor+0)+0
   439  077A  3002               	movlw	02h
   440  077B  00FF               	movwf	btemp+1
   441  077C                     u2155:
   442  077C  0D7B               	rlf	(??_motor+0)+1,w
   443  077D  0CFB               	rrf	(??_motor+0)+1,f
   444  077E  0CFA               	rrf	(??_motor+0)+0,f
   445  077F  0BFF               	decfsz	btemp+1,f
   446  0780  2F7C               	goto	u2155
   447  0781  087A               	movf	0+(??_motor+0)+0,w
   448  0782  1283               	bcf	status, 5	;RP0=0, select bank0
   449  0783  1303               	bcf	status, 6	;RP1=0, select bank0
   450  0784  009B               	movwf	(27)	;volatile
   451                           	line	13
   452                           	
   453  0785                     l2197:	
   454                           ;pwm.c: 13: CCP2CON|=(samp&0X03)<<4;
   455  0785  0878               	movf	(motor@samp),w
   456  0786  3903               	andlw	03h
   457  0787  00FA               	movwf	(??_motor+0)+0
   458  0788  3003               	movlw	(04h)-1
   459  0789                     u2165:
   460  0789  1003               	clrc
   461  078A  0DFA               	rlf	(??_motor+0)+0,f
   462  078B  3EFF               	addlw	-1
   463  078C  1D03               	skipz
   464  078D  2F89               	goto	u2165
   465  078E  1003               	clrc
   466  078F  0D7A               	rlf	(??_motor+0)+0,w
   467  0790  00FB               	movwf	(??_motor+1)+0
   468  0791  087B               	movf	(??_motor+1)+0,w
   469  0792  049D               	iorwf	(29),f	;volatile
   470                           	line	14
   471                           	
   472  0793                     l2199:	
   473                           ;pwm.c: 14: delay(100);
   474  0793  3064               	movlw	low(064h)
   475  0794  00F6               	movwf	(?_delay)
   476  0795  3000               	movlw	high(064h)
   477  0796  00F7               	movwf	((?_delay))+1
   478  0797  120A  118A  2762   	fcall	_delay
              120A  118A         
   479                           	line	15
   480                           	
   481  079C                     l1039:	
   482  079C  0008               	return
   483                           	opt stack 0
   484                           GLOBAL	__end_of_motor
   485  079D                     	__end_of_motor:
   486 ;; =============== function _motor ends ============
   487                           
   488                           	signat	_motor,4216
   489                           	global	_adc
   490                           psect	text80,local,class=CODE,delta=2
   491                           global __ptext80
   492  079D                     __ptext80:
   493                           
   494 ;; *************** function _adc *****************
   495 ;; Defined at:
   496 ;;		line 18 in file "D:\Embedded\pic\code\software\protocal\PWM2\pwm.c"
   497 ;; Parameters:    Size  Location     Type
   498 ;;		None
   499 ;; Auto vars:     Size  Location     Type
   500 ;;		None
   501 ;; Return value:  Size  Location     Type
   502 ;;                  2    0[COMMON] int 
   503 ;; Registers used:
   504 ;;		wreg, status,2, status,0, btemp+1
   505 ;; Tracked objects:
   506 ;;		On entry : 0/0
   507 ;;		On exit  : 0/0
   508 ;;		Unchanged: 0/0
   509 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   510 ;;      Params:         2       0       0       0       0
   511 ;;      Locals:         0       0       0       0       0
   512 ;;      Temps:          2       0       0       0       0
   513 ;;      Totals:         4       0       0       0       0
   514 ;;Total ram usage:        4 bytes
   515 ;; Hardware stack levels used:    1
   516 ;; This function calls:
   517 ;;		Nothing
   518 ;; This function is called by:
   519 ;;		_main
   520 ;; This function uses a non-reentrant model
   521 ;;
   522                           psect	text80
   523                           	file	"D:\Embedded\pic\code\software\protocal\PWM2\pwm.c"
   524                           	line	18
   525                           	global	__size_of_adc
   526  002F                     	__size_of_adc	equ	__end_of_adc-_adc
   527                           	
   528  079D                     _adc:	
   529                           	opt	stack 7
   530                           ; Regs used in _adc: [wreg+status,2+status,0+btemp+1]
   531                           	line	19
   532                           	
   533  079D                     l1421:	
   534                           ;pwm.c: 19: ADCON0=0X83;
   535  079D  3083               	movlw	(083h)
   536  079E  1283               	bcf	status, 5	;RP0=0, select bank0
   537  079F  1303               	bcf	status, 6	;RP1=0, select bank0
   538  07A0  009F               	movwf	(31)	;volatile
   539                           	line	20
   540                           ;pwm.c: 20: ADCON1=0X80;
   541  07A1  3080               	movlw	(080h)
   542  07A2  1683               	bsf	status, 5	;RP0=1, select bank1
   543  07A3  1303               	bcf	status, 6	;RP1=0, select bank1
   544  07A4  009F               	movwf	(159)^080h	;volatile
   545                           	line	21
   546                           ;pwm.c: 21: low=ADRESL;
   547  07A5  081E               	movf	(158)^080h,w	;volatile
   548  07A6  00F8               	movwf	(??_adc+0)+0
   549  07A7  01F9               	clrf	(??_adc+0)+0+1
   550  07A8  0878               	movf	0+(??_adc+0)+0,w
   551  07A9  00F4               	movwf	(_low)
   552  07AA  0879               	movf	1+(??_adc+0)+0,w
   553  07AB  00F5               	movwf	(_low+1)
   554                           	line	22
   555                           ;pwm.c: 22: high=ADRESH;
   556  07AC  1283               	bcf	status, 5	;RP0=0, select bank0
   557  07AD  1303               	bcf	status, 6	;RP1=0, select bank0
   558  07AE  081E               	movf	(30),w	;volatile
   559  07AF  00F8               	movwf	(??_adc+0)+0
   560  07B0  01F9               	clrf	(??_adc+0)+0+1
   561  07B1  0878               	movf	0+(??_adc+0)+0,w
   562  07B2  00F2               	movwf	(_high)
   563  07B3  0879               	movf	1+(??_adc+0)+0,w
   564  07B4  00F3               	movwf	(_high+1)
   565                           	line	23
   566                           	
   567  07B5                     l1423:	
   568                           ;pwm.c: 23: DV=low+(high*256);
   569  07B5  0873               	movf	(_high+1),w
   570  07B6  00F9               	movwf	(??_adc+0)+0+1
   571  07B7  0872               	movf	(_high),w
   572  07B8  00F8               	movwf	(??_adc+0)+0
   573  07B9  0878               	movf	(??_adc+0)+0,w
   574  07BA  00F9               	movwf	(??_adc+0)+1
   575  07BB  01F8               	clrf	(??_adc+0)+0
   576  07BC  0874               	movf	(_low),w
   577  07BD  0778               	addwf	0+(??_adc+0)+0,w
   578  07BE  00F0               	movwf	(_DV)
   579  07BF  0875               	movf	(_low+1),w
   580  07C0  1803               	skipnc
   581  07C1  0A75               	incf	(_low+1),w
   582  07C2  0779               	addwf	1+(??_adc+0)+0,w
   583  07C3  00F1               	movwf	1+(_DV)
   584                           	line	24
   585                           	
   586  07C4                     l1425:	
   587                           ;pwm.c: 24: return DV;
   588  07C4  0871               	movf	(_DV+1),w
   589  07C5  01F7               	clrf	(?_adc+1)
   590  07C6  07F7               	addwf	(?_adc+1)
   591  07C7  0870               	movf	(_DV),w
   592  07C8  01F6               	clrf	(?_adc)
   593  07C9  07F6               	addwf	(?_adc)
   594                           
   595  07CA  2FCB               	goto	l1042
   596                           	
   597  07CB                     l1427:	
   598                           	line	26
   599                           	
   600  07CB                     l1042:	
   601  07CB  0008               	return
   602                           	opt stack 0
   603                           GLOBAL	__end_of_adc
   604  07CC                     	__end_of_adc:
   605 ;; =============== function _adc ends ============
   606                           
   607                           	signat	_adc,90
   608                           	global	_delay
   609                           psect	text81,local,class=CODE,delta=2
   610                           global __ptext81
   611  0762                     __ptext81:
   612                           
   613 ;; *************** function _delay *****************
   614 ;; Defined at:
   615 ;;		line 7 in file "D:\Embedded\pic\code\software\protocal\PWM2\pwm.c"
   616 ;; Parameters:    Size  Location     Type
   617 ;;  ms              2    0[COMMON] unsigned int 
   618 ;; Auto vars:     Size  Location     Type
   619 ;;		None
   620 ;; Return value:  Size  Location     Type
   621 ;;		None               void
   622 ;; Registers used:
   623 ;;		wreg
   624 ;; Tracked objects:
   625 ;;		On entry : 0/0
   626 ;;		On exit  : 0/0
   627 ;;		Unchanged: 0/0
   628 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   629 ;;      Params:         2       0       0       0       0
   630 ;;      Locals:         0       0       0       0       0
   631 ;;      Temps:          0       0       0       0       0
   632 ;;      Totals:         2       0       0       0       0
   633 ;;Total ram usage:        2 bytes
   634 ;; Hardware stack levels used:    1
   635 ;; This function calls:
   636 ;;		Nothing
   637 ;; This function is called by:
   638 ;;		_motor
   639 ;; This function uses a non-reentrant model
   640 ;;
   641                           psect	text81
   642                           	file	"D:\Embedded\pic\code\software\protocal\PWM2\pwm.c"
   643                           	line	7
   644                           	global	__size_of_delay
   645  0014                     	__size_of_delay	equ	__end_of_delay-_delay
   646                           	
   647  0762                     _delay:	
   648                           	opt	stack 6
   649                           ; Regs used in _delay: [wreg]
   650                           	line	8
   651                           	
   652  0762                     l1417:	
   653                           ;pwm.c: 8: while(ms--);
   654  0762  2F64               	goto	l1419
   655                           	
   656  0763                     l1034:	
   657  0763  2F64               	goto	l1419
   658                           	
   659  0764                     l1033:	
   660                           	
   661  0764                     l1419:	
   662  0764  3001               	movlw	low(01h)
   663  0765  02F6               	subwf	(delay@ms),f
   664  0766  3000               	movlw	high(01h)
   665  0767  1C03               	skipc
   666  0768  03F7               	decf	(delay@ms+1),f
   667  0769  02F7               	subwf	(delay@ms+1),f
   668  076A  30FF               	movlw	high(0FFFFh)
   669  076B  0677               	xorwf	((delay@ms+1)),w
   670  076C  1D03               	skipz
   671  076D  2F70               	goto	u15
   672  076E  30FF               	movlw	low(0FFFFh)
   673  076F  0676               	xorwf	((delay@ms)),w
   674  0770                     u15:
   675                           
   676  0770  1D03               	skipz
   677  0771  2F73               	goto	u11
   678  0772  2F74               	goto	u10
   679  0773                     u11:
   680  0773  2F64               	goto	l1419
   681  0774                     u10:
   682  0774  2F75               	goto	l1036
   683                           	
   684  0775                     l1035:	
   685                           	line	9
   686                           	
   687  0775                     l1036:	
   688  0775  0008               	return
   689                           	opt stack 0
   690                           GLOBAL	__end_of_delay
   691  0776                     	__end_of_delay:
   692 ;; =============== function _delay ends ============
   693                           
   694                           	signat	_delay,4216
   695                           psect	text82,local,class=CODE,delta=2
   696                           global __ptext82
   697  0000                     __ptext82:
   698                           	global	btemp
   699  007E                     	btemp set 07Eh
   700                           
   701                           	DABS	1,126,2	;btemp
   702                           	global	wtemp0
   703  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.81 build 7503 
Symbol Table                                                                                   Tue Jun 28 12:39:05 2022

                  _DV 0070                    u10 0774                    u11 0773                    u15 0770  
                 _adc 079D                   _low 0074                  ?_adc 0076                  l1033 0764  
                l1034 0763                  l1042 07CB                  l1035 0775                  l1036 0775  
                l1045 07E5                  l1046 07FC                  l1039 079C                  l1047 07FD  
                l1048 07FD                  l2201 07CC                  l2211 07DE                  l2203 07D0  
                l1421 079D                  l2213 07E2                  l2205 07D3                  l1423 07B5  
                l2215 07E5                  l2207 07D6                  l1417 0762                  l1425 07C4  
                l2217 07F0                  l2209 07D9                  l1419 0764                  l1427 07CB  
                l2195 0776                  l2197 0785                  l2199 0793                  u2155 077C  
                u2165 0789                  _high 0072                  _main 07CC                  btemp 007E  
                start 0000                 ??_adc 0078                 ?_main 0076                 _ANSEL 0188  
               _T2CON 0012                 _PORTA 0005                 _PORTC 0007                 _TRISA 0085  
               _TRISC 0087                 _delay 0762                 _motor 0776                 _write 007C  
               status 0003                 wtemp0 007E          __end_of_main 0800                ??_main 007C  
              ?_delay 0076                _ADCON0 001F                _ADCON1 009F                _ADRESH 001E  
              _ADRESL 009E                _CCPR2L 001B                ?_motor 0078                _ANSELH 0189  
      __pcstackCOMMON 0076         __end_of_delay 0776         __end_of_motor 079D               ??_delay 0078  
             ??_motor 007A            __pnvCOMMON 007C            __pmaintext 07CC               _CCP2CON 001D  
        __size_of_adc 002F               delay@ms 0076  end_of_initialization 075E   start_initialization 0758  
         __end_of_adc 07CC           __pbssCOMMON 0070        __size_of_delay 0014        __size_of_motor 0027  
            __ptext80 079D              __ptext81 0762              __ptext82 0000              __ptext79 0776  
       __size_of_main 0034             motor@samp 0078  
