

HI-TECH Software PIC LITE Macro Assembler V9.81 build 7503 
                                                                                               Mon Jun 27 12:13:12 2022

HI-TECH Software Omniscient Code Generator (Lite mode) build 7503
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 7503"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F887
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           	FNCALL	_main,_lcd_cmd
    43                           	FNCALL	_main,_slave1
    44                           	FNCALL	_slave1,_lcd_cmd
    45                           	FNCALL	_lcd_cmd,_pulse
    46                           	FNCALL	_pulse,_delay
    47                           	FNROOT	_main
    48                           	global	_name
    49                           	global	_i
    50                           	global	_j
    51                           	global	_PORTA
    52                           psect	text144,local,class=CODE,delta=2
    53                           global __ptext144
    54  0000                     __ptext144:
    55  0005                     _PORTA	set	5
    56                           	global	_PORTB
    57  0006                     _PORTB	set	6
    58                           	global	_PORTC
    59  0007                     _PORTC	set	7
    60                           	global	_PORTE
    61  0009                     _PORTE	set	9
    62                           	global	_SSPBUF
    63  0013                     _SSPBUF	set	19
    64                           	global	_SSPCON
    65  0014                     _SSPCON	set	20
    66                           	global	_RE0
    67  0048                     _RE0	set	72
    68                           	global	_RE1
    69  0049                     _RE1	set	73
    70                           	global	_RE2
    71  004A                     _RE2	set	74
    72                           	global	_SSPIF
    73  0063                     _SSPIF	set	99
    74                           	global	_SSPSTAT
    75  0094                     _SSPSTAT	set	148
    76                           	global	_TRISA
    77  0085                     _TRISA	set	133
    78                           	global	_TRISB
    79  0086                     _TRISB	set	134
    80                           	global	_TRISC
    81  0087                     _TRISC	set	135
    82                           	global	_TRISE
    83  0089                     _TRISE	set	137
    84                           	global	_ANSEL
    85  0188                     _ANSEL	set	392
    86                           	global	_ANSELH
    87  0189                     _ANSELH	set	393
    88                           	file	"slave.as"
    89                           	line	#
    90                           psect cinit,class=CODE,delta=2
    91                           global start_initialization
    92  06F4                     start_initialization:
    93                           
    94                           psect	bssCOMMON,class=COMMON,space=1
    95                           global __pbssCOMMON
    96  0078                     __pbssCOMMON:
    97  0078                     _i:
    98  0078                            ds      2
    99                           
   100  007A                     _j:
   101  007A                            ds      2
   102                           
   103                           psect	bssBANK0,class=BANK0,space=1
   104                           global __pbssBANK0
   105  0020                     __pbssBANK0:
   106  0020                     _name:
   107  0020                            ds      10
   108                           
   109                           ; Clear objects allocated to COMMON
   110                           psect cinit,class=CODE,delta=2
   111  06F4  01F8               	clrf	((__pbssCOMMON)+0)&07Fh
   112  06F5  01F9               	clrf	((__pbssCOMMON)+1)&07Fh
   113  06F6  01FA               	clrf	((__pbssCOMMON)+2)&07Fh
   114  06F7  01FB               	clrf	((__pbssCOMMON)+3)&07Fh
   115                           ; Clear objects allocated to BANK0
   116                           psect cinit,class=CODE,delta=2
   117  06F8  01A0               	clrf	((__pbssBANK0)+0)&07Fh
   118  06F9  01A1               	clrf	((__pbssBANK0)+1)&07Fh
   119  06FA  01A2               	clrf	((__pbssBANK0)+2)&07Fh
   120  06FB  01A3               	clrf	((__pbssBANK0)+3)&07Fh
   121  06FC  01A4               	clrf	((__pbssBANK0)+4)&07Fh
   122  06FD  01A5               	clrf	((__pbssBANK0)+5)&07Fh
   123  06FE  01A6               	clrf	((__pbssBANK0)+6)&07Fh
   124  06FF  01A7               	clrf	((__pbssBANK0)+7)&07Fh
   125  0700  01A8               	clrf	((__pbssBANK0)+8)&07Fh
   126  0701  01A9               	clrf	((__pbssBANK0)+9)&07Fh
   127                           psect cinit,class=CODE,delta=2
   128                           global end_of_initialization
   129                           
   130                           ;End of C runtime variable initialization code
   131                           
   132  0702                     end_of_initialization:
   133  0702  0183               clrf status
   134  0703  120A  118A  2FA4   ljmp _main	;jump to C main() function
   135                           psect	cstackCOMMON,class=COMMON,space=1
   136                           global __pcstackCOMMON
   137  0070                     __pcstackCOMMON:
   138                           	global	?_delay
   139  0070                     ?_delay:	; 0 bytes @ 0x0
   140                           	global	?_pulse
   141  0070                     ?_pulse:	; 0 bytes @ 0x0
   142                           	global	?_slave1
   143  0070                     ?_slave1:	; 0 bytes @ 0x0
   144                           	global	?_main
   145  0070                     ?_main:	; 0 bytes @ 0x0
   146                           	global	delay@ms
   147  0070                     delay@ms:	; 2 bytes @ 0x0
   148  0070                     	ds	2
   149                           	global	??_delay
   150  0072                     ??_delay:	; 0 bytes @ 0x2
   151                           	global	??_pulse
   152  0072                     ??_pulse:	; 0 bytes @ 0x2
   153                           	global	?_lcd_cmd
   154  0072                     ?_lcd_cmd:	; 0 bytes @ 0x2
   155                           	global	lcd_cmd@b
   156  0072                     lcd_cmd@b:	; 1 bytes @ 0x2
   157  0072                     	ds	1
   158                           	global	lcd_cmd@c
   159  0073                     lcd_cmd@c:	; 1 bytes @ 0x3
   160  0073                     	ds	1
   161                           	global	??_lcd_cmd
   162  0074                     ??_lcd_cmd:	; 0 bytes @ 0x4
   163  0074                     	ds	1
   164                           	global	lcd_cmd@a
   165  0075                     lcd_cmd@a:	; 1 bytes @ 0x5
   166  0075                     	ds	1
   167                           	global	??_slave1
   168  0076                     ??_slave1:	; 0 bytes @ 0x6
   169  0076                     	ds	1
   170                           	global	??_main
   171  0077                     ??_main:	; 0 bytes @ 0x7
   172  0077                     	ds	1
   173 ;;Data sizes: Strings 0, constant 0, data 0, bss 14, persistent 0 stack 0
   174 ;;Auto spaces:   Size  Autos    Used
   175 ;; COMMON          14      8      12
   176 ;; BANK0           80      0      10
   177 ;; BANK1           80      0       0
   178 ;; BANK3           96      0       0
   179 ;; BANK2           96      0       0
   180                           
   181 ;;
   182 ;; Pointer list with targets:
   183                           
   184                           
   185                           
   186 ;;
   187 ;; Critical Paths under _main in COMMON
   188 ;;
   189 ;;   _main->_slave1
   190 ;;   _slave1->_lcd_cmd
   191 ;;   _pulse->_delay
   192 ;;
   193 ;; Critical Paths under _main in BANK0
   194 ;;
   195 ;;   None.
   196 ;;
   197 ;; Critical Paths under _main in BANK1
   198 ;;
   199 ;;   None.
   200 ;;
   201 ;; Critical Paths under _main in BANK3
   202 ;;
   203 ;;   None.
   204 ;;
   205 ;; Critical Paths under _main in BANK2
   206 ;;
   207 ;;   None.
   208                           
   209 ;;
   210 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   211 ;;
   212                           
   213 ;;
   214 ;;Call Graph Tables:
   215 ;;
   216 ;; ---------------------------------------------------------------------------------
   217 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   218 ;; ---------------------------------------------------------------------------------
   219 ;; (0) _main                                                 1     1      0     220
   220 ;;                                              7 COMMON     1     1      0
   221 ;;                            _lcd_cmd
   222 ;;                             _slave1
   223 ;; ---------------------------------------------------------------------------------
   224 ;; (1) _slave1                                               1     1      0     110
   225 ;;                                              6 COMMON     1     1      0
   226 ;;                            _lcd_cmd
   227 ;; ---------------------------------------------------------------------------------
   228 ;; (2) _lcd_cmd                                              4     2      2     110
   229 ;;                                              2 COMMON     4     2      2
   230 ;;                              _pulse
   231 ;; ---------------------------------------------------------------------------------
   232 ;; (3) _pulse                                                0     0      0      22
   233 ;;                              _delay
   234 ;; ---------------------------------------------------------------------------------
   235 ;; (4) _delay                                                2     0      2      22
   236 ;;                                              0 COMMON     2     0      2
   237 ;; ---------------------------------------------------------------------------------
   238 ;; Estimated maximum stack depth 4
   239 ;; ---------------------------------------------------------------------------------
   240                           
   241 ;; Call Graph Graphs:
   242                           
   243 ;; _main (ROOT)
   244 ;;   _lcd_cmd
   245 ;;     _pulse
   246 ;;       _delay
   247 ;;   _slave1
   248 ;;     _lcd_cmd
   249 ;;       _pulse
   250 ;;         _delay
   251 ;;
   252                           
   253 ;; Address spaces:
   254                           
   255 ;;Name               Size   Autos  Total    Cost      Usage
   256 ;;BITCOMMON            E      0       0       0        0.0%
   257 ;;EEDATA             100      0       0       0        0.0%
   258 ;;NULL                 0      0       0       0        0.0%
   259 ;;CODE                 0      0       0       0        0.0%
   260 ;;COMMON               E      8       C       1       85.7%
   261 ;;BITSFR0              0      0       0       1        0.0%
   262 ;;SFR0                 0      0       0       1        0.0%
   263 ;;BITSFR1              0      0       0       2        0.0%
   264 ;;SFR1                 0      0       0       2        0.0%
   265 ;;STACK                0      0       4       2        0.0%
   266 ;;ABS                  0      0      16       3        0.0%
   267 ;;BITBANK0            50      0       0       4        0.0%
   268 ;;BITSFR3              0      0       0       4        0.0%
   269 ;;SFR3                 0      0       0       4        0.0%
   270 ;;BANK0               50      0       A       5       12.5%
   271 ;;BITSFR2              0      0       0       5        0.0%
   272 ;;SFR2                 0      0       0       5        0.0%
   273 ;;BITBANK1            50      0       0       6        0.0%
   274 ;;BANK1               50      0       0       7        0.0%
   275 ;;BITBANK3            60      0       0       8        0.0%
   276 ;;BANK3               60      0       0       9        0.0%
   277 ;;BITBANK2            60      0       0      10        0.0%
   278 ;;BANK2               60      0       0      11        0.0%
   279 ;;DATA                 0      0      1A      12        0.0%
   280                           
   281                           	global	_main
   282                           psect	maintext,global,class=CODE,delta=2
   283                           global __pmaintext
   284  07A4                     __pmaintext:
   285                           
   286 ;; *************** function _main *****************
   287 ;; Defined at:
   288 ;;		line 26 in file "D:\Embedded\pic\code\software\protocal\SPI\Basic-1_mas-1_slave_string\Slave\slave.c"
   289 ;; Parameters:    Size  Location     Type
   290 ;;		None
   291 ;; Auto vars:     Size  Location     Type
   292 ;;		None
   293 ;; Return value:  Size  Location     Type
   294 ;;		None               void
   295 ;; Registers used:
   296 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   297 ;; Tracked objects:
   298 ;;		On entry : 17F/0
   299 ;;		On exit  : 0/0
   300 ;;		Unchanged: 0/0
   301 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   302 ;;      Params:         0       0       0       0       0
   303 ;;      Locals:         0       0       0       0       0
   304 ;;      Temps:          1       0       0       0       0
   305 ;;      Totals:         1       0       0       0       0
   306 ;;Total ram usage:        1 bytes
   307 ;; Hardware stack levels required when called:    4
   308 ;; This function calls:
   309 ;;		_lcd_cmd
   310 ;;		_slave1
   311 ;; This function is called by:
   312 ;;		Startup code after reset
   313 ;; This function uses a non-reentrant model
   314 ;;
   315                           psect	maintext
   316                           	file	"D:\Embedded\pic\code\software\protocal\SPI\Basic-1_mas-1_slave_string\Slave\slave
                                 .c"
   317                           	line	26
   318                           	global	__size_of_main
   319  005C                     	__size_of_main	equ	__end_of_main-_main
   320                           	
   321  07A4                     _main:	
   322                           	opt	stack 4
   323                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   324                           	line	27
   325                           	
   326  07A4                     l2291:	
   327                           ;slave.c: 27: PORTA=0X00;
   328  07A4  1283               	bcf	status, 5	;RP0=0, select bank0
   329  07A5  1303               	bcf	status, 6	;RP1=0, select bank0
   330  07A6  0185               	clrf	(5)	;volatile
   331                           	line	28
   332                           	
   333  07A7                     l2293:	
   334                           ;slave.c: 28: TRISA=0X20;
   335  07A7  3020               	movlw	(020h)
   336  07A8  1683               	bsf	status, 5	;RP0=1, select bank1
   337  07A9  1303               	bcf	status, 6	;RP1=0, select bank1
   338  07AA  0085               	movwf	(133)^080h	;volatile
   339                           	line	29
   340                           	
   341  07AB                     l2295:	
   342                           ;slave.c: 29: PORTC=0X00;
   343  07AB  1283               	bcf	status, 5	;RP0=0, select bank0
   344  07AC  1303               	bcf	status, 6	;RP1=0, select bank0
   345  07AD  0187               	clrf	(7)	;volatile
   346                           	line	30
   347                           ;slave.c: 30: TRISC=0X18;
   348  07AE  3018               	movlw	(018h)
   349  07AF  1683               	bsf	status, 5	;RP0=1, select bank1
   350  07B0  1303               	bcf	status, 6	;RP1=0, select bank1
   351  07B1  0087               	movwf	(135)^080h	;volatile
   352                           	line	31
   353                           	
   354  07B2                     l2297:	
   355                           ;slave.c: 31: PORTB=0X00;
   356  07B2  1283               	bcf	status, 5	;RP0=0, select bank0
   357  07B3  1303               	bcf	status, 6	;RP1=0, select bank0
   358  07B4  0186               	clrf	(6)	;volatile
   359                           	line	32
   360                           	
   361  07B5                     l2299:	
   362                           ;slave.c: 32: TRISB=0X00;
   363  07B5  1683               	bsf	status, 5	;RP0=1, select bank1
   364  07B6  1303               	bcf	status, 6	;RP1=0, select bank1
   365  07B7  0186               	clrf	(134)^080h	;volatile
   366                           	line	33
   367                           	
   368  07B8                     l2301:	
   369                           ;slave.c: 33: PORTE=0X00;
   370  07B8  1283               	bcf	status, 5	;RP0=0, select bank0
   371  07B9  1303               	bcf	status, 6	;RP1=0, select bank0
   372  07BA  0189               	clrf	(9)	;volatile
   373                           	line	34
   374                           	
   375  07BB                     l2303:	
   376                           ;slave.c: 34: TRISE=0X00;
   377  07BB  1683               	bsf	status, 5	;RP0=1, select bank1
   378  07BC  1303               	bcf	status, 6	;RP1=0, select bank1
   379  07BD  0189               	clrf	(137)^080h	;volatile
   380                           	line	35
   381                           	
   382  07BE                     l2305:	
   383                           ;slave.c: 35: ANSEL=0X00;
   384  07BE  1683               	bsf	status, 5	;RP0=1, select bank3
   385  07BF  1703               	bsf	status, 6	;RP1=1, select bank3
   386  07C0  0188               	clrf	(392)^0180h	;volatile
   387                           	line	36
   388                           	
   389  07C1                     l2307:	
   390                           ;slave.c: 36: ANSELH=0X00;
   391  07C1  0189               	clrf	(393)^0180h	;volatile
   392                           	line	37
   393                           	
   394  07C2                     l2309:	
   395                           ;slave.c: 37: lcd_cmd(0,0,0X02);
   396  07C2  01F2               	clrf	(?_lcd_cmd)
   397  07C3  3002               	movlw	(02h)
   398  07C4  00F7               	movwf	(??_main+0)+0
   399  07C5  0877               	movf	(??_main+0)+0,w
   400  07C6  00F3               	movwf	0+(?_lcd_cmd)+01h
   401  07C7  3000               	movlw	(0)
   402  07C8  120A  118A  2733   	fcall	_lcd_cmd
              120A  118A         
   403                           	line	38
   404                           	
   405  07CD                     l2311:	
   406                           ;slave.c: 38: lcd_cmd(0,0,0X28);
   407  07CD  01F2               	clrf	(?_lcd_cmd)
   408  07CE  3028               	movlw	(028h)
   409  07CF  00F7               	movwf	(??_main+0)+0
   410  07D0  0877               	movf	(??_main+0)+0,w
   411  07D1  00F3               	movwf	0+(?_lcd_cmd)+01h
   412  07D2  3000               	movlw	(0)
   413  07D3  120A  118A  2733   	fcall	_lcd_cmd
              120A  118A         
   414                           	line	39
   415                           	
   416  07D8                     l2313:	
   417                           ;slave.c: 39: lcd_cmd(0,0,0X0F);
   418  07D8  01F2               	clrf	(?_lcd_cmd)
   419  07D9  300F               	movlw	(0Fh)
   420  07DA  00F7               	movwf	(??_main+0)+0
   421  07DB  0877               	movf	(??_main+0)+0,w
   422  07DC  00F3               	movwf	0+(?_lcd_cmd)+01h
   423  07DD  3000               	movlw	(0)
   424  07DE  120A  118A  2733   	fcall	_lcd_cmd
              120A  118A         
   425                           	line	40
   426                           	
   427  07E3                     l2315:	
   428                           ;slave.c: 40: lcd_cmd(0,0,0X80);
   429  07E3  01F2               	clrf	(?_lcd_cmd)
   430  07E4  3080               	movlw	(080h)
   431  07E5  00F7               	movwf	(??_main+0)+0
   432  07E6  0877               	movf	(??_main+0)+0,w
   433  07E7  00F3               	movwf	0+(?_lcd_cmd)+01h
   434  07E8  3000               	movlw	(0)
   435  07E9  120A  118A  2733   	fcall	_lcd_cmd
              120A  118A         
   436                           	line	42
   437                           ;slave.c: 42: SSPCON=0X34;
   438  07EE  3034               	movlw	(034h)
   439  07EF  1283               	bcf	status, 5	;RP0=0, select bank0
   440  07F0  1303               	bcf	status, 6	;RP1=0, select bank0
   441  07F1  0094               	movwf	(20)	;volatile
   442                           	line	43
   443                           	
   444  07F2                     l2317:	
   445                           ;slave.c: 43: SSPSTAT=0X00;
   446  07F2  1683               	bsf	status, 5	;RP0=1, select bank1
   447  07F3  1303               	bcf	status, 6	;RP1=0, select bank1
   448  07F4  0194               	clrf	(148)^080h	;volatile
   449  07F5  2FF6               	goto	l2319
   450                           	line	44
   451                           ;slave.c: 44: while(1)
   452                           	
   453  07F6                     l1055:	
   454                           	line	46
   455                           	
   456  07F6                     l2319:	
   457                           ;slave.c: 45: {
   458                           ;slave.c: 46: slave1();
   459  07F6  120A  118A  2762   	fcall	_slave1
              120A  118A         
   460  07FB  2FF6               	goto	l2319
   461                           	line	47
   462                           	
   463  07FC                     l1056:	
   464                           	line	44
   465  07FC  2FF6               	goto	l2319
   466                           	
   467  07FD                     l1057:	
   468                           	line	48
   469                           	
   470  07FD                     l1058:	
   471                           	global	start
   472  07FD  120A  118A  2800   	ljmp	start
   473                           	opt stack 0
   474                           GLOBAL	__end_of_main
   475  0800                     	__end_of_main:
   476 ;; =============== function _main ends ============
   477                           
   478                           	signat	_main,88
   479                           	global	_slave1
   480                           psect	text145,local,class=CODE,delta=2
   481                           global __ptext145
   482  0762                     __ptext145:
   483                           
   484 ;; *************** function _slave1 *****************
   485 ;; Defined at:
   486 ;;		line 10 in file "D:\Embedded\pic\code\software\protocal\SPI\Basic-1_mas-1_slave_string\Slave\slave.c"
   487 ;; Parameters:    Size  Location     Type
   488 ;;		None
   489 ;; Auto vars:     Size  Location     Type
   490 ;;		None
   491 ;; Return value:  Size  Location     Type
   492 ;;		None               void
   493 ;; Registers used:
   494 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   495 ;; Tracked objects:
   496 ;;		On entry : 0/0
   497 ;;		On exit  : 0/0
   498 ;;		Unchanged: 0/0
   499 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   500 ;;      Params:         0       0       0       0       0
   501 ;;      Locals:         0       0       0       0       0
   502 ;;      Temps:          1       0       0       0       0
   503 ;;      Totals:         1       0       0       0       0
   504 ;;Total ram usage:        1 bytes
   505 ;; Hardware stack levels used:    1
   506 ;; Hardware stack levels required when called:    3
   507 ;; This function calls:
   508 ;;		_lcd_cmd
   509 ;; This function is called by:
   510 ;;		_main
   511 ;; This function uses a non-reentrant model
   512 ;;
   513                           psect	text145
   514                           	file	"D:\Embedded\pic\code\software\protocal\SPI\Basic-1_mas-1_slave_string\Slave\slave
                                 .c"
   515                           	line	10
   516                           	global	__size_of_slave1
   517  0042                     	__size_of_slave1	equ	__end_of_slave1-_slave1
   518                           	
   519  0762                     _slave1:	
   520                           	opt	stack 4
   521                           ; Regs used in _slave1: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   522                           	line	11
   523                           	
   524  0762                     l2277:	
   525                           ;slave.c: 11: while(SSPBUF!='\0')
   526  0762  2F7A               	goto	l2283
   527                           	
   528  0763                     l1044:	
   529                           	line	13
   530                           ;slave.c: 12: {
   531                           ;slave.c: 13: while(SSPIF==0);
   532  0763  2F64               	goto	l1045
   533                           	
   534  0764                     l1046:	
   535                           	
   536  0764                     l1045:	
   537  0764  1283               	bcf	status, 5	;RP0=0, select bank0
   538  0765  1303               	bcf	status, 6	;RP1=0, select bank0
   539  0766  1D8C               	btfss	(99/8),(99)&7
   540  0767  2F69               	goto	u2291
   541  0768  2F6A               	goto	u2290
   542  0769                     u2291:
   543  0769  2F64               	goto	l1045
   544  076A                     u2290:
   545                           	
   546  076A                     l1047:	
   547                           	line	14
   548                           ;slave.c: 14: SSPIF=0;
   549  076A  118C               	bcf	(99/8),(99)&7
   550                           	line	15
   551                           	
   552  076B                     l2279:	
   553                           ;slave.c: 15: name[i]=SSPBUF;
   554  076B  0813               	movf	(19),w	;volatile
   555  076C  00F6               	movwf	(??_slave1+0)+0
   556  076D  0878               	movf	(_i),w
   557  076E  3E20               	addlw	_name&0ffh
   558  076F  0084               	movwf	fsr0
   559  0770  0876               	movf	(??_slave1+0)+0,w
   560  0771  1383               	bcf	status, 7	;select IRP bank0
   561  0772  0080               	movwf	indf
   562                           	line	16
   563                           	
   564  0773                     l2281:	
   565                           ;slave.c: 16: i++;
   566  0773  3001               	movlw	low(01h)
   567  0774  07F8               	addwf	(_i),f
   568  0775  1803               	skipnc
   569  0776  0AF9               	incf	(_i+1),f
   570  0777  3000               	movlw	high(01h)
   571  0778  07F9               	addwf	(_i+1),f
   572  0779  2F7A               	goto	l2283
   573                           	line	17
   574                           	
   575  077A                     l1043:	
   576                           	line	11
   577                           	
   578  077A                     l2283:	
   579  077A  1283               	bcf	status, 5	;RP0=0, select bank0
   580  077B  1303               	bcf	status, 6	;RP1=0, select bank0
   581  077C  0893               	movf	(19),f
   582  077D  1D03               	skipz	;volatile
   583  077E  2F80               	goto	u2301
   584  077F  2F81               	goto	u2300
   585  0780                     u2301:
   586  0780  2F64               	goto	l1045
   587  0781                     u2300:
   588  0781  2F99               	goto	l2289
   589                           	
   590  0782                     l1048:	
   591                           	line	18
   592                           ;slave.c: 17: }
   593                           ;slave.c: 18: while(name[j]!='\0')
   594  0782  2F99               	goto	l2289
   595                           	
   596  0783                     l1050:	
   597                           	line	20
   598                           	
   599  0783                     l2285:	
   600                           ;slave.c: 19: {
   601                           ;slave.c: 20: lcd_cmd(1,0,name[j]);
   602  0783  01F2               	clrf	(?_lcd_cmd)
   603  0784  087A               	movf	(_j),w
   604  0785  3E20               	addlw	_name&0ffh
   605  0786  0084               	movwf	fsr0
   606  0787  1383               	bcf	status, 7	;select IRP bank0
   607  0788  0800               	movf	indf,w
   608  0789  00F6               	movwf	(??_slave1+0)+0
   609  078A  0876               	movf	(??_slave1+0)+0,w
   610  078B  00F3               	movwf	0+(?_lcd_cmd)+01h
   611  078C  3001               	movlw	(01h)
   612  078D  120A  118A  2733   	fcall	_lcd_cmd
              120A  118A         
   613                           	line	21
   614                           	
   615  0792                     l2287:	
   616                           ;slave.c: 21: j++;
   617  0792  3001               	movlw	low(01h)
   618  0793  07FA               	addwf	(_j),f
   619  0794  1803               	skipnc
   620  0795  0AFB               	incf	(_j+1),f
   621  0796  3000               	movlw	high(01h)
   622  0797  07FB               	addwf	(_j+1),f
   623  0798  2F99               	goto	l2289
   624                           	line	22
   625                           	
   626  0799                     l1049:	
   627                           	line	18
   628                           	
   629  0799                     l2289:	
   630  0799  087A               	movf	(_j),w
   631  079A  3E20               	addlw	_name&0ffh
   632  079B  0084               	movwf	fsr0
   633  079C  1383               	bcf	status, 7	;select IRP bank0
   634  079D  0880               	movf	indf,f
   635  079E  1D03               	skipz
   636  079F  2FA1               	goto	u2311
   637  07A0  2FA2               	goto	u2310
   638  07A1                     u2311:
   639  07A1  2F83               	goto	l2285
   640  07A2                     u2310:
   641  07A2  2FA3               	goto	l1052
   642                           	
   643  07A3                     l1051:	
   644                           	line	23
   645                           	
   646  07A3                     l1052:	
   647  07A3  0008               	return
   648                           	opt stack 0
   649                           GLOBAL	__end_of_slave1
   650  07A4                     	__end_of_slave1:
   651 ;; =============== function _slave1 ends ============
   652                           
   653                           	signat	_slave1,88
   654                           	global	_lcd_cmd
   655                           psect	text146,local,class=CODE,delta=2
   656                           global __ptext146
   657  0733                     __ptext146:
   658                           
   659 ;; *************** function _lcd_cmd *****************
   660 ;; Defined at:
   661 ;;		line 17 in file "D:\Embedded\pic\code\software\protocal\SPI\Basic-1_mas-1_slave_string\Slave\lcd.h"
   662 ;; Parameters:    Size  Location     Type
   663 ;;  a               1    wreg     unsigned char 
   664 ;;  b               1    2[COMMON] unsigned char 
   665 ;;  c               1    3[COMMON] unsigned char 
   666 ;; Auto vars:     Size  Location     Type
   667 ;;  a               1    5[COMMON] unsigned char 
   668 ;; Return value:  Size  Location     Type
   669 ;;		None               void
   670 ;; Registers used:
   671 ;;		wreg, status,2, status,0, pclath, cstack
   672 ;; Tracked objects:
   673 ;;		On entry : 0/0
   674 ;;		On exit  : 0/0
   675 ;;		Unchanged: 0/0
   676 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   677 ;;      Params:         2       0       0       0       0
   678 ;;      Locals:         1       0       0       0       0
   679 ;;      Temps:          1       0       0       0       0
   680 ;;      Totals:         4       0       0       0       0
   681 ;;Total ram usage:        4 bytes
   682 ;; Hardware stack levels used:    1
   683 ;; Hardware stack levels required when called:    2
   684 ;; This function calls:
   685 ;;		_pulse
   686 ;; This function is called by:
   687 ;;		_slave1
   688 ;;		_main
   689 ;; This function uses a non-reentrant model
   690 ;;
   691                           psect	text146
   692                           	file	"D:\Embedded\pic\code\software\protocal\SPI\Basic-1_mas-1_slave_string\Slave\lcd.h
                                 "
   693                           	line	17
   694                           	global	__size_of_lcd_cmd
   695  002F                     	__size_of_lcd_cmd	equ	__end_of_lcd_cmd-_lcd_cmd
   696                           	
   697  0733                     _lcd_cmd:	
   698                           	opt	stack 4
   699                           ; Regs used in _lcd_cmd: [wreg+status,2+status,0+pclath+cstack]
   700                           ;lcd_cmd@a stored from wreg
   701  0733  00F5               	movwf	(lcd_cmd@a)
   702                           	line	18
   703                           	
   704  0734                     l2267:	
   705                           ;lcd.h: 18: RE0=a;
   706  0734  1875               	btfsc	(lcd_cmd@a),0
   707  0735  2F37               	goto	u2241
   708  0736  2F3B               	goto	u2240
   709                           	
   710  0737                     u2241:
   711  0737  1283               	bcf	status, 5	;RP0=0, select bank0
   712  0738  1303               	bcf	status, 6	;RP1=0, select bank0
   713  0739  1409               	bsf	(72/8),(72)&7
   714  073A  2F3E               	goto	u2254
   715  073B                     u2240:
   716  073B  1283               	bcf	status, 5	;RP0=0, select bank0
   717  073C  1303               	bcf	status, 6	;RP1=0, select bank0
   718  073D  1009               	bcf	(72/8),(72)&7
   719  073E                     u2254:
   720                           	line	19
   721                           ;lcd.h: 19: RE1=b;
   722  073E  1872               	btfsc	(lcd_cmd@b),0
   723  073F  2F41               	goto	u2261
   724  0740  2F45               	goto	u2260
   725                           	
   726  0741                     u2261:
   727  0741  1283               	bcf	status, 5	;RP0=0, select bank0
   728  0742  1303               	bcf	status, 6	;RP1=0, select bank0
   729  0743  1489               	bsf	(73/8),(73)&7
   730  0744  2F48               	goto	u2274
   731  0745                     u2260:
   732  0745  1283               	bcf	status, 5	;RP0=0, select bank0
   733  0746  1303               	bcf	status, 6	;RP1=0, select bank0
   734  0747  1089               	bcf	(73/8),(73)&7
   735  0748                     u2274:
   736                           	line	20
   737                           	
   738  0748                     l2269:	
   739                           ;lcd.h: 20: PORTB=c;
   740  0748  0873               	movf	(lcd_cmd@c),w
   741  0749  0086               	movwf	(6)	;volatile
   742                           	line	21
   743                           	
   744  074A                     l2271:	
   745                           ;lcd.h: 21: pulse();
   746  074A  120A  118A  271A   	fcall	_pulse
              120A  118A         
   747                           	line	23
   748                           	
   749  074F                     l2273:	
   750                           ;lcd.h: 23: PORTB=c<<4;
   751  074F  0873               	movf	(lcd_cmd@c),w
   752  0750  00F4               	movwf	(??_lcd_cmd+0)+0
   753  0751  3003               	movlw	(04h)-1
   754  0752                     u2285:
   755  0752  1003               	clrc
   756  0753  0DF4               	rlf	(??_lcd_cmd+0)+0,f
   757  0754  3EFF               	addlw	-1
   758  0755  1D03               	skipz
   759  0756  2F52               	goto	u2285
   760  0757  1003               	clrc
   761  0758  0D74               	rlf	(??_lcd_cmd+0)+0,w
   762  0759  1283               	bcf	status, 5	;RP0=0, select bank0
   763  075A  1303               	bcf	status, 6	;RP1=0, select bank0
   764  075B  0086               	movwf	(6)	;volatile
   765                           	line	24
   766                           	
   767  075C                     l2275:	
   768                           ;lcd.h: 24: pulse();
   769  075C  120A  118A  271A   	fcall	_pulse
              120A  118A         
   770                           	line	25
   771                           	
   772  0761                     l1040:	
   773  0761  0008               	return
   774                           	opt stack 0
   775                           GLOBAL	__end_of_lcd_cmd
   776  0762                     	__end_of_lcd_cmd:
   777 ;; =============== function _lcd_cmd ends ============
   778                           
   779                           	signat	_lcd_cmd,12408
   780                           	global	_pulse
   781                           psect	text147,local,class=CODE,delta=2
   782                           global __ptext147
   783  071A                     __ptext147:
   784                           
   785 ;; *************** function _pulse *****************
   786 ;; Defined at:
   787 ;;		line 10 in file "D:\Embedded\pic\code\software\protocal\SPI\Basic-1_mas-1_slave_string\Slave\lcd.h"
   788 ;; Parameters:    Size  Location     Type
   789 ;;		None
   790 ;; Auto vars:     Size  Location     Type
   791 ;;		None
   792 ;; Return value:  Size  Location     Type
   793 ;;		None               void
   794 ;; Registers used:
   795 ;;		wreg, status,2, status,0, pclath, cstack
   796 ;; Tracked objects:
   797 ;;		On entry : 0/0
   798 ;;		On exit  : 0/0
   799 ;;		Unchanged: 0/0
   800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   801 ;;      Params:         0       0       0       0       0
   802 ;;      Locals:         0       0       0       0       0
   803 ;;      Temps:          0       0       0       0       0
   804 ;;      Totals:         0       0       0       0       0
   805 ;;Total ram usage:        0 bytes
   806 ;; Hardware stack levels used:    1
   807 ;; Hardware stack levels required when called:    1
   808 ;; This function calls:
   809 ;;		_delay
   810 ;; This function is called by:
   811 ;;		_lcd_cmd
   812 ;; This function uses a non-reentrant model
   813 ;;
   814                           psect	text147
   815                           	file	"D:\Embedded\pic\code\software\protocal\SPI\Basic-1_mas-1_slave_string\Slave\lcd.h
                                 "
   816                           	line	10
   817                           	global	__size_of_pulse
   818  0019                     	__size_of_pulse	equ	__end_of_pulse-_pulse
   819                           	
   820  071A                     _pulse:	
   821                           	opt	stack 4
   822                           ; Regs used in _pulse: [wreg+status,2+status,0+pclath+cstack]
   823                           	line	11
   824                           	
   825  071A                     l2261:	
   826                           ;lcd.h: 11: RE2=1;
   827  071A  1283               	bcf	status, 5	;RP0=0, select bank0
   828  071B  1303               	bcf	status, 6	;RP1=0, select bank0
   829  071C  1509               	bsf	(74/8),(74)&7
   830                           	line	12
   831                           	
   832  071D                     l2263:	
   833                           ;lcd.h: 12: delay(1000);
   834  071D  30E8               	movlw	low(03E8h)
   835  071E  00F0               	movwf	(?_delay)
   836  071F  3003               	movlw	high(03E8h)
   837  0720  00F1               	movwf	((?_delay))+1
   838  0721  120A  118A  2706   	fcall	_delay
              120A  118A         
   839                           	line	13
   840                           	
   841  0726                     l2265:	
   842                           ;lcd.h: 13: RE2=0;
   843  0726  1283               	bcf	status, 5	;RP0=0, select bank0
   844  0727  1303               	bcf	status, 6	;RP1=0, select bank0
   845  0728  1109               	bcf	(74/8),(74)&7
   846                           	line	14
   847                           ;lcd.h: 14: delay(1000);
   848  0729  30E8               	movlw	low(03E8h)
   849  072A  00F0               	movwf	(?_delay)
   850  072B  3003               	movlw	high(03E8h)
   851  072C  00F1               	movwf	((?_delay))+1
   852  072D  120A  118A  2706   	fcall	_delay
              120A  118A         
   853                           	line	15
   854                           	
   855  0732                     l1037:	
   856  0732  0008               	return
   857                           	opt stack 0
   858                           GLOBAL	__end_of_pulse
   859  0733                     	__end_of_pulse:
   860 ;; =============== function _pulse ends ============
   861                           
   862                           	signat	_pulse,88
   863                           	global	_delay
   864                           psect	text148,local,class=CODE,delta=2
   865                           global __ptext148
   866  0706                     __ptext148:
   867                           
   868 ;; *************** function _delay *****************
   869 ;; Defined at:
   870 ;;		line 6 in file "D:\Embedded\pic\code\software\protocal\SPI\Basic-1_mas-1_slave_string\Slave\lcd.h"
   871 ;; Parameters:    Size  Location     Type
   872 ;;  ms              2    0[COMMON] unsigned int 
   873 ;; Auto vars:     Size  Location     Type
   874 ;;		None
   875 ;; Return value:  Size  Location     Type
   876 ;;		None               void
   877 ;; Registers used:
   878 ;;		wreg
   879 ;; Tracked objects:
   880 ;;		On entry : 0/0
   881 ;;		On exit  : 0/0
   882 ;;		Unchanged: 0/0
   883 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   884 ;;      Params:         2       0       0       0       0
   885 ;;      Locals:         0       0       0       0       0
   886 ;;      Temps:          0       0       0       0       0
   887 ;;      Totals:         2       0       0       0       0
   888 ;;Total ram usage:        2 bytes
   889 ;; Hardware stack levels used:    1
   890 ;; This function calls:
   891 ;;		Nothing
   892 ;; This function is called by:
   893 ;;		_pulse
   894 ;; This function uses a non-reentrant model
   895 ;;
   896                           psect	text148
   897                           	file	"D:\Embedded\pic\code\software\protocal\SPI\Basic-1_mas-1_slave_string\Slave\lcd.h
                                 "
   898                           	line	6
   899                           	global	__size_of_delay
   900  0014                     	__size_of_delay	equ	__end_of_delay-_delay
   901                           	
   902  0706                     _delay:	
   903                           	opt	stack 4
   904                           ; Regs used in _delay: [wreg]
   905                           	line	7
   906                           	
   907  0706                     l2257:	
   908                           ;lcd.h: 7: while(ms--);
   909  0706  2F08               	goto	l2259
   910                           	
   911  0707                     l1032:	
   912  0707  2F08               	goto	l2259
   913                           	
   914  0708                     l1031:	
   915                           	
   916  0708                     l2259:	
   917  0708  3001               	movlw	low(01h)
   918  0709  02F0               	subwf	(delay@ms),f
   919  070A  3000               	movlw	high(01h)
   920  070B  1C03               	skipc
   921  070C  03F1               	decf	(delay@ms+1),f
   922  070D  02F1               	subwf	(delay@ms+1),f
   923  070E  30FF               	movlw	high(0FFFFh)
   924  070F  0671               	xorwf	((delay@ms+1)),w
   925  0710  1D03               	skipz
   926  0711  2F14               	goto	u2235
   927  0712  30FF               	movlw	low(0FFFFh)
   928  0713  0670               	xorwf	((delay@ms)),w
   929  0714                     u2235:
   930                           
   931  0714  1D03               	skipz
   932  0715  2F17               	goto	u2231
   933  0716  2F18               	goto	u2230
   934  0717                     u2231:
   935  0717  2F08               	goto	l2259
   936  0718                     u2230:
   937  0718  2F19               	goto	l1034
   938                           	
   939  0719                     l1033:	
   940                           	line	8
   941                           	
   942  0719                     l1034:	
   943  0719  0008               	return
   944                           	opt stack 0
   945                           GLOBAL	__end_of_delay
   946  071A                     	__end_of_delay:
   947 ;; =============== function _delay ends ============
   948                           
   949                           	signat	_delay,4216
   950                           psect	text149,local,class=CODE,delta=2
   951                           global __ptext149
   952  0000                     __ptext149:
   953                           	global	btemp
   954  007E                     	btemp set 07Eh
   955                           
   956                           	DABS	1,126,2	;btemp
   957                           	global	wtemp0
   958  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.81 build 7503 
Symbol Table                                                                                   Mon Jun 27 12:13:12 2022

                   _i 0078                     _j 007A                   _RE0 0048                   _RE1 0049  
                 _RE2 004A                   fsr0 0004                   indf 0000                  l1031 0708  
                l1032 0707                  l1040 0761                  l1033 0719                  l1034 0719  
                l1050 0783                  l1051 07A3                  l1043 077A                  l1052 07A3  
                l1044 0763                  l1037 0732                  l1045 0764                  l1046 0764  
                l1047 076A                  l1055 07F6                  l1048 0782                  l1056 07FC  
                l1049 0799                  l1057 07FD                  l1058 07FD                  l2301 07B8  
                l2311 07CD                  l2303 07BB                  l2313 07D8                  l2305 07BE  
                l2315 07E3                  l2307 07C1                  l2261 071A                  l2317 07F2  
                l2309 07C2                  l2263 071D                  l2271 074A                  l2319 07F6  
                l2257 0706                  l2265 0726                  l2273 074F                  l2281 0773  
                l2259 0708                  l2275 075C                  l2267 0734                  l2283 077A  
                l2291 07A4                  l2269 0748                  l2285 0783                  l2277 0762  
                l2293 07A7                  l2287 0792                  l2279 076B                  l2295 07AB  
                l2289 0799                  l2297 07B2                  l2299 07B5                  u2300 0781  
                u2301 0780                  u2230 0718                  u2310 07A2                  u2231 0717  
                u2311 07A1                  u2240 073B                  u2241 0737                  u2235 0714  
                u2260 0745                  u2261 0741                  u2254 073E                  u2274 0748  
                u2290 076A                  u2291 0769                  u2285 0752                  _main 07A4  
                _name 0020                  btemp 007E                  start 0000                 ?_main 0070  
               _ANSEL 0188                 _PORTA 0005                 _PORTB 0006                 _PORTC 0007  
               _PORTE 0009                 _TRISA 0085                 _TRISB 0086                 _TRISC 0087  
               _TRISE 0089                 _SSPIF 0063       __end_of_lcd_cmd 0762                 _delay 0706  
               _pulse 071A                 status 0003                 wtemp0 007E          __end_of_main 0800  
              ??_main 0077                ?_delay 0070                ?_pulse 0070                _ANSELH 0189  
              _SSPCON 0014                _SSPBUF 0013                _slave1 0762             ??_lcd_cmd 0074  
      __pcstackCOMMON 0070         __end_of_delay 071A         __end_of_pulse 0733               ??_delay 0072  
             ??_pulse 0072            __pbssBANK0 0020            __pmaintext 07A4               ?_slave1 0070  
             _SSPSTAT 0094       __size_of_slave1 0042               _lcd_cmd 0733               delay@ms 0070  
end_of_initialization 0702        __end_of_slave1 07A4   start_initialization 06F4              ??_slave1 0076  
         __pbssCOMMON 0078             __ptext144 0000             __ptext145 0762             __ptext146 0733  
           __ptext147 071A             __ptext148 0706             __ptext149 0000              ?_lcd_cmd 0072  
      __size_of_delay 0014        __size_of_pulse 0019      __size_of_lcd_cmd 002F         __size_of_main 005C  
            lcd_cmd@a 0075              lcd_cmd@b 0072              lcd_cmd@c 0073  
