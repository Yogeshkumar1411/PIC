

HI-TECH Software PIC LITE Macro Assembler V9.81 build 7503 
                                                                                               Wed Jun 22 21:52:48 2022

HI-TECH Software Omniscient Code Generator (Lite mode) build 7503
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 7503"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F887
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           	FNCALL	_main,_adc
    43                           	FNCALL	_adc,_delay
    44                           	FNROOT	_main
    45                           	global	_DV
    46                           psect	nvCOMMON,class=COMMON,space=1
    47                           global __pnvCOMMON
    48  0077                     __pnvCOMMON:
    49  0077                     _DV:
    50  0077                            ds      2
    51                           
    52                           	global	_high
    53  0079                     _high:
    54  0079                            ds      2
    55                           
    56                           	global	_low
    57  007B                     _low:
    58  007B                            ds      2
    59                           
    60                           	global	_ADCON0
    61  001F                     _ADCON0	set	31
    62                           	global	_ADRESH
    63  001E                     _ADRESH	set	30
    64                           	global	_CCP1CON
    65  0017                     _CCP1CON	set	23
    66                           	global	_CCPR1L
    67  0015                     _CCPR1L	set	21
    68                           	global	_PORTA
    69  0005                     _PORTA	set	5
    70                           	global	_PORTC
    71  0007                     _PORTC	set	7
    72                           	global	_PORTD
    73  0008                     _PORTD	set	8
    74                           	global	_T2CON
    75  0012                     _T2CON	set	18
    76                           	global	_ADCON1
    77  009F                     _ADCON1	set	159
    78                           	global	_ADRESL
    79  009E                     _ADRESL	set	158
    80                           	global	_TRISA
    81  0085                     _TRISA	set	133
    82                           	global	_TRISC
    83  0087                     _TRISC	set	135
    84                           	global	_TRISD
    85  0088                     _TRISD	set	136
    86                           	global	_ANSEL
    87  0188                     _ANSEL	set	392
    88                           	global	_ANSELH
    89  0189                     _ANSELH	set	393
    90                           	file	"PWM.as"
    91                           	line	#
    92                           psect cinit,class=CODE,delta=2
    93                           global start_initialization
    94  0763                     start_initialization:
    95                           
    96                           psect cinit,class=CODE,delta=2
    97                           global end_of_initialization
    98                           
    99                           ;End of C runtime variable initialization code
   100                           
   101  0763                     end_of_initialization:
   102  0763  0183               clrf status
   103  0764  120A  118A  2F7B   ljmp _main	;jump to C main() function
   104                           psect	cstackCOMMON,class=COMMON,space=1
   105                           global __pcstackCOMMON
   106  0070                     __pcstackCOMMON:
   107                           	global	?_delay
   108  0070                     ?_delay:	; 0 bytes @ 0x0
   109                           	global	?_main
   110  0070                     ?_main:	; 0 bytes @ 0x0
   111                           	global	delay@ms
   112  0070                     delay@ms:	; 2 bytes @ 0x0
   113  0070                     	ds	2
   114                           	global	??_delay
   115  0072                     ??_delay:	; 0 bytes @ 0x2
   116                           	global	?_adc
   117  0072                     ?_adc:	; 0 bytes @ 0x2
   118                           	global	adc@b
   119  0072                     adc@b:	; 1 bytes @ 0x2
   120  0072                     	ds	1
   121                           	global	??_adc
   122  0073                     ??_adc:	; 0 bytes @ 0x3
   123  0073                     	ds	2
   124                           	global	adc@a
   125  0075                     adc@a:	; 1 bytes @ 0x5
   126  0075                     	ds	1
   127                           	global	??_main
   128  0076                     ??_main:	; 0 bytes @ 0x6
   129  0076                     	ds	1
   130 ;;Data sizes: Strings 0, constant 0, data 0, bss 0, persistent 6 stack 0
   131 ;;Auto spaces:   Size  Autos    Used
   132 ;; COMMON          14      7      13
   133 ;; BANK0           80      0       0
   134 ;; BANK1           80      0       0
   135 ;; BANK3           96      0       0
   136 ;; BANK2           96      0       0
   137                           
   138 ;;
   139 ;; Pointer list with targets:
   140                           
   141                           
   142                           
   143 ;;
   144 ;; Critical Paths under _main in COMMON
   145 ;;
   146 ;;   _main->_adc
   147 ;;   _adc->_delay
   148 ;;
   149 ;; Critical Paths under _main in BANK0
   150 ;;
   151 ;;   None.
   152 ;;
   153 ;; Critical Paths under _main in BANK1
   154 ;;
   155 ;;   None.
   156 ;;
   157 ;; Critical Paths under _main in BANK3
   158 ;;
   159 ;;   None.
   160 ;;
   161 ;; Critical Paths under _main in BANK2
   162 ;;
   163 ;;   None.
   164                           
   165 ;;
   166 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   167 ;;
   168                           
   169 ;;
   170 ;;Call Graph Tables:
   171 ;;
   172 ;; ---------------------------------------------------------------------------------
   173 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   174 ;; ---------------------------------------------------------------------------------
   175 ;; (0) _main                                                 1     1      0      45
   176 ;;                                              6 COMMON     1     1      0
   177 ;;                                _adc
   178 ;; ---------------------------------------------------------------------------------
   179 ;; (1) _adc                                                  4     3      1      45
   180 ;;                                              2 COMMON     4     3      1
   181 ;;                              _delay
   182 ;; ---------------------------------------------------------------------------------
   183 ;; (2) _delay                                                2     0      2      15
   184 ;;                                              0 COMMON     2     0      2
   185 ;; ---------------------------------------------------------------------------------
   186 ;; Estimated maximum stack depth 2
   187 ;; ---------------------------------------------------------------------------------
   188                           
   189 ;; Call Graph Graphs:
   190                           
   191 ;; _main (ROOT)
   192 ;;   _adc
   193 ;;     _delay
   194 ;;
   195                           
   196 ;; Address spaces:
   197                           
   198 ;;Name               Size   Autos  Total    Cost      Usage
   199 ;;BITCOMMON            E      0       0       0        0.0%
   200 ;;EEDATA             100      0       0       0        0.0%
   201 ;;NULL                 0      0       0       0        0.0%
   202 ;;CODE                 0      0       0       0        0.0%
   203 ;;COMMON               E      7       D       1       92.9%
   204 ;;BITSFR0              0      0       0       1        0.0%
   205 ;;SFR0                 0      0       0       1        0.0%
   206 ;;BITSFR1              0      0       0       2        0.0%
   207 ;;SFR1                 0      0       0       2        0.0%
   208 ;;STACK                0      0       2       2        0.0%
   209 ;;ABS                  0      0       D       3        0.0%
   210 ;;BITBANK0            50      0       0       4        0.0%
   211 ;;BITSFR3              0      0       0       4        0.0%
   212 ;;SFR3                 0      0       0       4        0.0%
   213 ;;BANK0               50      0       0       5        0.0%
   214 ;;BITSFR2              0      0       0       5        0.0%
   215 ;;SFR2                 0      0       0       5        0.0%
   216 ;;BITBANK1            50      0       0       6        0.0%
   217 ;;BANK1               50      0       0       7        0.0%
   218 ;;BITBANK3            60      0       0       8        0.0%
   219 ;;BANK3               60      0       0       9        0.0%
   220 ;;BITBANK2            60      0       0      10        0.0%
   221 ;;BANK2               60      0       0      11        0.0%
   222 ;;DATA                 0      0       F      12        0.0%
   223                           
   224                           	global	_main
   225                           psect	maintext,global,class=CODE,delta=2
   226                           global __pmaintext
   227  077B                     __pmaintext:
   228                           
   229 ;; *************** function _main *****************
   230 ;; Defined at:
   231 ;;		line 23 in file "D:\Embedded\pic\code\software\pwm3\PWM.c"
   232 ;; Parameters:    Size  Location     Type
   233 ;;		None
   234 ;; Auto vars:     Size  Location     Type
   235 ;;		None
   236 ;; Return value:  Size  Location     Type
   237 ;;		None               void
   238 ;; Registers used:
   239 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   240 ;; Tracked objects:
   241 ;;		On entry : 17F/0
   242 ;;		On exit  : 0/0
   243 ;;		Unchanged: 0/0
   244 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   245 ;;      Params:         0       0       0       0       0
   246 ;;      Locals:         0       0       0       0       0
   247 ;;      Temps:          1       0       0       0       0
   248 ;;      Totals:         1       0       0       0       0
   249 ;;Total ram usage:        1 bytes
   250 ;; Hardware stack levels required when called:    2
   251 ;; This function calls:
   252 ;;		_adc
   253 ;; This function is called by:
   254 ;;		Startup code after reset
   255 ;; This function uses a non-reentrant model
   256 ;;
   257                           psect	maintext
   258                           	file	"D:\Embedded\pic\code\software\pwm3\PWM.c"
   259                           	line	23
   260                           	global	__size_of_main
   261  0036                     	__size_of_main	equ	__end_of_main-_main
   262                           	
   263  077B                     _main:	
   264                           	opt	stack 6
   265                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   266                           	line	24
   267                           	
   268  077B                     l2192:	
   269                           ;PWM.c: 24: TRISA=0X03;
   270  077B  3003               	movlw	(03h)
   271  077C  1683               	bsf	status, 5	;RP0=1, select bank1
   272  077D  1303               	bcf	status, 6	;RP1=0, select bank1
   273  077E  0085               	movwf	(133)^080h	;volatile
   274                           	line	25
   275                           	
   276  077F                     l2194:	
   277                           ;PWM.c: 25: PORTA=0X00;
   278  077F  1283               	bcf	status, 5	;RP0=0, select bank0
   279  0780  1303               	bcf	status, 6	;RP1=0, select bank0
   280  0781  0185               	clrf	(5)	;volatile
   281                           	line	26
   282                           	
   283  0782                     l2196:	
   284                           ;PWM.c: 26: TRISC=0X00;
   285  0782  1683               	bsf	status, 5	;RP0=1, select bank1
   286  0783  1303               	bcf	status, 6	;RP1=0, select bank1
   287  0784  0187               	clrf	(135)^080h	;volatile
   288                           	line	27
   289                           	
   290  0785                     l2198:	
   291                           ;PWM.c: 27: PORTC=0X00;
   292  0785  1283               	bcf	status, 5	;RP0=0, select bank0
   293  0786  1303               	bcf	status, 6	;RP1=0, select bank0
   294  0787  0187               	clrf	(7)	;volatile
   295                           	line	28
   296                           	
   297  0788                     l2200:	
   298                           ;PWM.c: 28: TRISD=0X00;
   299  0788  1683               	bsf	status, 5	;RP0=1, select bank1
   300  0789  1303               	bcf	status, 6	;RP1=0, select bank1
   301  078A  0188               	clrf	(136)^080h	;volatile
   302                           	line	29
   303                           	
   304  078B                     l2202:	
   305                           ;PWM.c: 29: PORTD=0X00;
   306  078B  1283               	bcf	status, 5	;RP0=0, select bank0
   307  078C  1303               	bcf	status, 6	;RP1=0, select bank0
   308  078D  0188               	clrf	(8)	;volatile
   309                           	line	30
   310                           	
   311  078E                     l2204:	
   312                           ;PWM.c: 30: ANSEL=0X03;
   313  078E  3003               	movlw	(03h)
   314  078F  1683               	bsf	status, 5	;RP0=1, select bank3
   315  0790  1703               	bsf	status, 6	;RP1=1, select bank3
   316  0791  0088               	movwf	(392)^0180h	;volatile
   317                           	line	31
   318                           ;PWM.c: 31: ANSELH=0X00;
   319  0792  0189               	clrf	(393)^0180h	;volatile
   320                           	line	32
   321                           	
   322  0793                     l2206:	
   323                           ;PWM.c: 32: T2CON=0X07;
   324  0793  3007               	movlw	(07h)
   325  0794  1283               	bcf	status, 5	;RP0=0, select bank0
   326  0795  1303               	bcf	status, 6	;RP1=0, select bank0
   327  0796  0092               	movwf	(18)	;volatile
   328  0797  2F98               	goto	l2208
   329                           	line	33
   330                           ;PWM.c: 33: while(1)
   331                           	
   332  0798                     l1040:	
   333                           	line	35
   334                           	
   335  0798                     l2208:	
   336                           ;PWM.c: 34: {
   337                           ;PWM.c: 35: adc(0X83,0XCE);
   338  0798  30CE               	movlw	(0CEh)
   339  0799  00F6               	movwf	(??_main+0)+0
   340  079A  0876               	movf	(??_main+0)+0,w
   341  079B  00F2               	movwf	(?_adc)
   342  079C  3083               	movlw	(083h)
   343  079D  120A  118A  27B1   	fcall	_adc
              120A  118A         
   344                           	line	36
   345                           	
   346  07A2                     l2210:	
   347                           ;PWM.c: 36: adc(0X87,0X4E);
   348  07A2  304E               	movlw	(04Eh)
   349  07A3  00F6               	movwf	(??_main+0)+0
   350  07A4  0876               	movf	(??_main+0)+0,w
   351  07A5  00F2               	movwf	(?_adc)
   352  07A6  3087               	movlw	(087h)
   353  07A7  120A  118A  27B1   	fcall	_adc
              120A  118A         
   354  07AC  2F98               	goto	l2208
   355                           	line	37
   356                           	
   357  07AD                     l1041:	
   358                           	line	33
   359  07AD  2F98               	goto	l2208
   360                           	
   361  07AE                     l1042:	
   362                           	line	38
   363                           	
   364  07AE                     l1043:	
   365                           	global	start
   366  07AE  120A  118A  2800   	ljmp	start
   367                           	opt stack 0
   368                           GLOBAL	__end_of_main
   369  07B1                     	__end_of_main:
   370 ;; =============== function _main ends ============
   371                           
   372                           	signat	_main,88
   373                           	global	_adc
   374                           psect	text67,local,class=CODE,delta=2
   375                           global __ptext67
   376  07B1                     __ptext67:
   377                           
   378 ;; *************** function _adc *****************
   379 ;; Defined at:
   380 ;;		line 11 in file "D:\Embedded\pic\code\software\pwm3\PWM.c"
   381 ;; Parameters:    Size  Location     Type
   382 ;;  a               1    wreg     unsigned char 
   383 ;;  b               1    2[COMMON] unsigned char 
   384 ;; Auto vars:     Size  Location     Type
   385 ;;  a               1    5[COMMON] unsigned char 
   386 ;; Return value:  Size  Location     Type
   387 ;;		None               void
   388 ;; Registers used:
   389 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   390 ;; Tracked objects:
   391 ;;		On entry : 0/0
   392 ;;		On exit  : 0/0
   393 ;;		Unchanged: 0/0
   394 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   395 ;;      Params:         1       0       0       0       0
   396 ;;      Locals:         1       0       0       0       0
   397 ;;      Temps:          2       0       0       0       0
   398 ;;      Totals:         4       0       0       0       0
   399 ;;Total ram usage:        4 bytes
   400 ;; Hardware stack levels used:    1
   401 ;; Hardware stack levels required when called:    1
   402 ;; This function calls:
   403 ;;		_delay
   404 ;; This function is called by:
   405 ;;		_main
   406 ;; This function uses a non-reentrant model
   407 ;;
   408                           psect	text67
   409                           	file	"D:\Embedded\pic\code\software\pwm3\PWM.c"
   410                           	line	11
   411                           	global	__size_of_adc
   412  004F                     	__size_of_adc	equ	__end_of_adc-_adc
   413                           	
   414  07B1                     _adc:	
   415                           	opt	stack 6
   416                           ; Regs used in _adc: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   417                           ;adc@a stored from wreg
   418  07B1  00F5               	movwf	(adc@a)
   419                           	line	12
   420                           	
   421  07B2                     l2182:	
   422                           ;PWM.c: 12: ADCON0=a;
   423  07B2  0875               	movf	(adc@a),w
   424  07B3  1283               	bcf	status, 5	;RP0=0, select bank0
   425  07B4  1303               	bcf	status, 6	;RP1=0, select bank0
   426  07B5  009F               	movwf	(31)	;volatile
   427                           	line	13
   428                           ;PWM.c: 13: ADCON1=0X80;
   429  07B6  3080               	movlw	(080h)
   430  07B7  1683               	bsf	status, 5	;RP0=1, select bank1
   431  07B8  1303               	bcf	status, 6	;RP1=0, select bank1
   432  07B9  009F               	movwf	(159)^080h	;volatile
   433                           	line	14
   434                           ;PWM.c: 14: low=ADRESL;
   435  07BA  081E               	movf	(158)^080h,w	;volatile
   436  07BB  00F3               	movwf	(??_adc+0)+0
   437  07BC  01F4               	clrf	(??_adc+0)+0+1
   438  07BD  0873               	movf	0+(??_adc+0)+0,w
   439  07BE  00FB               	movwf	(_low)
   440  07BF  0874               	movf	1+(??_adc+0)+0,w
   441  07C0  00FC               	movwf	(_low+1)
   442                           	line	15
   443                           ;PWM.c: 15: high=ADRESH;
   444  07C1  1283               	bcf	status, 5	;RP0=0, select bank0
   445  07C2  1303               	bcf	status, 6	;RP1=0, select bank0
   446  07C3  081E               	movf	(30),w	;volatile
   447  07C4  00F3               	movwf	(??_adc+0)+0
   448  07C5  01F4               	clrf	(??_adc+0)+0+1
   449  07C6  0873               	movf	0+(??_adc+0)+0,w
   450  07C7  00F9               	movwf	(_high)
   451  07C8  0874               	movf	1+(??_adc+0)+0,w
   452  07C9  00FA               	movwf	(_high+1)
   453                           	line	16
   454                           	
   455  07CA                     l2184:	
   456                           ;PWM.c: 16: DV=low+(high*256);
   457  07CA  087A               	movf	(_high+1),w
   458  07CB  00F4               	movwf	(??_adc+0)+0+1
   459  07CC  0879               	movf	(_high),w
   460  07CD  00F3               	movwf	(??_adc+0)+0
   461  07CE  0873               	movf	(??_adc+0)+0,w
   462  07CF  00F4               	movwf	(??_adc+0)+1
   463  07D0  01F3               	clrf	(??_adc+0)+0
   464  07D1  087B               	movf	(_low),w
   465  07D2  0773               	addwf	0+(??_adc+0)+0,w
   466  07D3  00F7               	movwf	(_DV)
   467  07D4  087C               	movf	(_low+1),w
   468  07D5  1803               	skipnc
   469  07D6  0A7C               	incf	(_low+1),w
   470  07D7  0774               	addwf	1+(??_adc+0)+0,w
   471  07D8  00F8               	movwf	1+(_DV)
   472                           	line	17
   473                           	
   474  07D9                     l2186:	
   475                           ;PWM.c: 17: CCP1CON=b;
   476  07D9  0872               	movf	(adc@b),w
   477  07DA  0097               	movwf	(23)	;volatile
   478                           	line	18
   479                           ;PWM.c: 18: CCPR1L=DV>>2;
   480  07DB  0878               	movf	(_DV+1),w
   481  07DC  00F4               	movwf	(??_adc+0)+0+1
   482  07DD  0877               	movf	(_DV),w
   483  07DE  00F3               	movwf	(??_adc+0)+0
   484  07DF  3002               	movlw	02h
   485  07E0  00FF               	movwf	btemp+1
   486  07E1                     u2155:
   487  07E1  0D74               	rlf	(??_adc+0)+1,w
   488  07E2  0CF4               	rrf	(??_adc+0)+1,f
   489  07E3  0CF3               	rrf	(??_adc+0)+0,f
   490  07E4  0BFF               	decfsz	btemp+1,f
   491  07E5  2FE1               	goto	u2155
   492  07E6  0873               	movf	0+(??_adc+0)+0,w
   493  07E7  0095               	movwf	(21)	;volatile
   494                           	line	19
   495                           	
   496  07E8                     l2188:	
   497                           ;PWM.c: 19: CCP1CON|=(DV&0X30)<<4;
   498  07E8  0877               	movf	(_DV),w
   499  07E9  3930               	andlw	030h
   500  07EA  00F3               	movwf	(??_adc+0)+0
   501  07EB  3003               	movlw	(04h)-1
   502  07EC                     u2165:
   503  07EC  1003               	clrc
   504  07ED  0DF3               	rlf	(??_adc+0)+0,f
   505  07EE  3EFF               	addlw	-1
   506  07EF  1D03               	skipz
   507  07F0  2FEC               	goto	u2165
   508  07F1  1003               	clrc
   509  07F2  0D73               	rlf	(??_adc+0)+0,w
   510  07F3  00F4               	movwf	(??_adc+1)+0
   511  07F4  0874               	movf	(??_adc+1)+0,w
   512  07F5  0497               	iorwf	(23),f	;volatile
   513                           	line	20
   514                           	
   515  07F6                     l2190:	
   516                           ;PWM.c: 20: delay(100);
   517  07F6  3064               	movlw	low(064h)
   518  07F7  00F0               	movwf	(?_delay)
   519  07F8  3000               	movlw	high(064h)
   520  07F9  00F1               	movwf	((?_delay))+1
   521  07FA  120A  118A  2767   	fcall	_delay
              120A  118A         
   522                           	line	21
   523                           	
   524  07FF                     l1037:	
   525  07FF  0008               	return
   526                           	opt stack 0
   527                           GLOBAL	__end_of_adc
   528  0800                     	__end_of_adc:
   529 ;; =============== function _adc ends ============
   530                           
   531                           	signat	_adc,8312
   532                           	global	_delay
   533                           psect	text68,local,class=CODE,delta=2
   534                           global __ptext68
   535  0767                     __ptext68:
   536                           
   537 ;; *************** function _delay *****************
   538 ;; Defined at:
   539 ;;		line 7 in file "D:\Embedded\pic\code\software\pwm3\PWM.c"
   540 ;; Parameters:    Size  Location     Type
   541 ;;  ms              2    0[COMMON] unsigned int 
   542 ;; Auto vars:     Size  Location     Type
   543 ;;		None
   544 ;; Return value:  Size  Location     Type
   545 ;;		None               void
   546 ;; Registers used:
   547 ;;		wreg
   548 ;; Tracked objects:
   549 ;;		On entry : 0/0
   550 ;;		On exit  : 0/0
   551 ;;		Unchanged: 0/0
   552 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   553 ;;      Params:         2       0       0       0       0
   554 ;;      Locals:         0       0       0       0       0
   555 ;;      Temps:          0       0       0       0       0
   556 ;;      Totals:         2       0       0       0       0
   557 ;;Total ram usage:        2 bytes
   558 ;; Hardware stack levels used:    1
   559 ;; This function calls:
   560 ;;		Nothing
   561 ;; This function is called by:
   562 ;;		_adc
   563 ;; This function uses a non-reentrant model
   564 ;;
   565                           psect	text68
   566                           	file	"D:\Embedded\pic\code\software\pwm3\PWM.c"
   567                           	line	7
   568                           	global	__size_of_delay
   569  0014                     	__size_of_delay	equ	__end_of_delay-_delay
   570                           	
   571  0767                     _delay:	
   572                           	opt	stack 6
   573                           ; Regs used in _delay: [wreg]
   574                           	line	8
   575                           	
   576  0767                     l1412:	
   577                           ;PWM.c: 8: while(ms--);
   578  0767  2F69               	goto	l1414
   579                           	
   580  0768                     l1032:	
   581  0768  2F69               	goto	l1414
   582                           	
   583  0769                     l1031:	
   584                           	
   585  0769                     l1414:	
   586  0769  3001               	movlw	low(01h)
   587  076A  02F0               	subwf	(delay@ms),f
   588  076B  3000               	movlw	high(01h)
   589  076C  1C03               	skipc
   590  076D  03F1               	decf	(delay@ms+1),f
   591  076E  02F1               	subwf	(delay@ms+1),f
   592  076F  30FF               	movlw	high(0FFFFh)
   593  0770  0671               	xorwf	((delay@ms+1)),w
   594  0771  1D03               	skipz
   595  0772  2F75               	goto	u15
   596  0773  30FF               	movlw	low(0FFFFh)
   597  0774  0670               	xorwf	((delay@ms)),w
   598  0775                     u15:
   599                           
   600  0775  1D03               	skipz
   601  0776  2F78               	goto	u11
   602  0777  2F79               	goto	u10
   603  0778                     u11:
   604  0778  2F69               	goto	l1414
   605  0779                     u10:
   606  0779  2F7A               	goto	l1034
   607                           	
   608  077A                     l1033:	
   609                           	line	9
   610                           	
   611  077A                     l1034:	
   612  077A  0008               	return
   613                           	opt stack 0
   614                           GLOBAL	__end_of_delay
   615  077B                     	__end_of_delay:
   616 ;; =============== function _delay ends ============
   617                           
   618                           	signat	_delay,4216
   619                           psect	text69,local,class=CODE,delta=2
   620                           global __ptext69
   621  0000                     __ptext69:
   622                           	global	btemp
   623  007E                     	btemp set 07Eh
   624                           
   625                           	DABS	1,126,2	;btemp
   626                           	global	wtemp0
   627  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.81 build 7503 
Symbol Table                                                                                   Wed Jun 22 21:52:48 2022

                  _DV 0077                    u10 0779                    u11 0778                    u15 0775  
                 _adc 07B1                   _low 007B                  ?_adc 0072                  l1031 0769  
                l1032 0768                  l1040 0798                  l1033 077A                  l1041 07AD  
                l1034 077A                  l1042 07AE                  l1043 07AE                  l1037 07FF  
                l2200 0788                  l2210 07A2                  l2202 078B                  l1412 0767  
                l2204 078E                  l1414 0769                  l2206 0793                  l2208 0798  
                l2190 07F6                  l2182 07B2                  l2184 07CA                  l2192 077B  
                l2186 07D9                  l2194 077F                  l2188 07E8                  l2196 0782  
                l2198 0785                  u2155 07E1                  u2165 07EC                  adc@a 0075  
                adc@b 0072                  _high 0079                  _main 077B                  btemp 007E  
                start 0000                 ??_adc 0073                 ?_main 0070                 _ANSEL 0188  
               _T2CON 0012                 _PORTA 0005                 _PORTC 0007                 _PORTD 0008  
               _TRISA 0085                 _TRISC 0087                 _TRISD 0088                 _delay 0767  
               status 0003                 wtemp0 007E          __end_of_main 07B1                ??_main 0076  
              ?_delay 0070                _ADCON0 001F                _ADCON1 009F                _ADRESH 001E  
              _ADRESL 009E                _CCPR1L 0015                _ANSELH 0189        __pcstackCOMMON 0070  
       __end_of_delay 077B               ??_delay 0072            __pnvCOMMON 0077            __pmaintext 077B  
             _CCP1CON 0017          __size_of_adc 004F               delay@ms 0070  end_of_initialization 0763  
 start_initialization 0763           __end_of_adc 0800        __size_of_delay 0014              __ptext67 07B1  
            __ptext68 0767              __ptext69 0000         __size_of_main 0036  
