

HI-TECH Software PIC LITE Macro Assembler V9.81 build 7503 
                                                                                               Tue Jun 07 23:06:39 2022

HI-TECH Software Omniscient Code Generator (Lite mode) build 7503
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 7503"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F887
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           	FNCALL	_main,_adc
    43                           	FNCALL	_adc,___awdiv
    44                           	FNCALL	_adc,___awmod
    45                           	FNCALL	_adc,_tx
    46                           	FNCALL	_adc,_tx1
    47                           	FNROOT	_main
    48                           	global	_DV
    49                           psect	nvBANK0,class=BANK0,space=1
    50                           global __pnvBANK0
    51  002D                     __pnvBANK0:
    52  002D                     _DV:
    53  002D                            ds      2
    54                           
    55                           	global	_high
    56  002F                     _high:
    57  002F                            ds      2
    58                           
    59                           	global	_low
    60  0031                     _low:
    61  0031                            ds      2
    62                           
    63                           	global	_ADCON0
    64  001F                     _ADCON0	set	31
    65                           	global	_ADRESH
    66  001E                     _ADRESH	set	30
    67                           	global	_PORTA
    68  0005                     _PORTA	set	5
    69                           	global	_PORTC
    70  0007                     _PORTC	set	7
    71                           	global	_PORTD
    72  0008                     _PORTD	set	8
    73                           	global	_PORTE
    74  0009                     _PORTE	set	9
    75                           	global	_RCSTA
    76  0018                     _RCSTA	set	24
    77                           	global	_TXREG
    78  0019                     _TXREG	set	25
    79                           	global	_RE0
    80  0048                     _RE0	set	72
    81                           	global	_RE1
    82  0049                     _RE1	set	73
    83                           	global	_RE2
    84  004A                     _RE2	set	74
    85                           	global	_TXIF
    86  0064                     _TXIF	set	100
    87                           	global	_ADCON1
    88  009F                     _ADCON1	set	159
    89                           	global	_ADRESL
    90  009E                     _ADRESL	set	158
    91                           	global	_SPBRG
    92  0099                     _SPBRG	set	153
    93                           	global	_TRISA
    94  0085                     _TRISA	set	133
    95                           	global	_TRISC
    96  0087                     _TRISC	set	135
    97                           	global	_TRISD
    98  0088                     _TRISD	set	136
    99                           	global	_TRISE
   100  0089                     _TRISE	set	137
   101                           	global	_TXSTA
   102  0098                     _TXSTA	set	152
   103                           	global	_ANSEL
   104  0188                     _ANSEL	set	392
   105                           	global	_ANSELH
   106  0189                     _ANSELH	set	393
   107                           	file	"UART_ADC.as"
   108                           	line	#
   109                           psect cinit,class=CODE,delta=2
   110                           global start_initialization
   111  05E0                     start_initialization:
   112                           
   113                           psect cinit,class=CODE,delta=2
   114                           global end_of_initialization
   115                           
   116                           ;End of C runtime variable initialization code
   117                           
   118  05E0                     end_of_initialization:
   119  05E0  0183               clrf status
   120  05E1  120A  118A  2DFB   ljmp _main	;jump to C main() function
   121                           psect	cstackCOMMON,class=COMMON,space=1
   122                           global __pcstackCOMMON
   123  0070                     __pcstackCOMMON:
   124                           	global	?_tx1
   125  0070                     ?_tx1:	; 0 bytes @ 0x0
   126                           	global	??_tx1
   127  0070                     ??_tx1:	; 0 bytes @ 0x0
   128                           	global	?_tx
   129  0070                     ?_tx:	; 0 bytes @ 0x0
   130                           	global	?_adc
   131  0070                     ?_adc:	; 0 bytes @ 0x0
   132                           	global	?_main
   133  0070                     ?_main:	; 0 bytes @ 0x0
   134                           	global	?___awdiv
   135  0070                     ?___awdiv:	; 2 bytes @ 0x0
   136                           	global	?___awmod
   137  0070                     ?___awmod:	; 2 bytes @ 0x0
   138                           	global	tx1@a
   139  0070                     tx1@a:	; 1 bytes @ 0x0
   140                           	global	tx@a
   141  0070                     tx@a:	; 2 bytes @ 0x0
   142                           	global	___awdiv@divisor
   143  0070                     ___awdiv@divisor:	; 2 bytes @ 0x0
   144                           	global	___awmod@divisor
   145  0070                     ___awmod@divisor:	; 2 bytes @ 0x0
   146  0070                     	ds	2
   147                           	global	??_tx
   148  0072                     ??_tx:	; 0 bytes @ 0x2
   149                           	global	___awdiv@dividend
   150  0072                     ___awdiv@dividend:	; 2 bytes @ 0x2
   151                           	global	___awmod@dividend
   152  0072                     ___awmod@dividend:	; 2 bytes @ 0x2
   153  0072                     	ds	2
   154                           	global	??___awdiv
   155  0074                     ??___awdiv:	; 0 bytes @ 0x4
   156                           	global	??___awmod
   157  0074                     ??___awmod:	; 0 bytes @ 0x4
   158  0074                     	ds	1
   159                           	global	___awdiv@counter
   160  0075                     ___awdiv@counter:	; 1 bytes @ 0x5
   161                           	global	___awmod@counter
   162  0075                     ___awmod@counter:	; 1 bytes @ 0x5
   163  0075                     	ds	1
   164                           	global	___awdiv@sign
   165  0076                     ___awdiv@sign:	; 1 bytes @ 0x6
   166                           	global	___awmod@sign
   167  0076                     ___awmod@sign:	; 1 bytes @ 0x6
   168  0076                     	ds	1
   169                           	global	___awdiv@quotient
   170  0077                     ___awdiv@quotient:	; 2 bytes @ 0x7
   171  0077                     	ds	2
   172                           	global	??_adc
   173  0079                     ??_adc:	; 0 bytes @ 0x9
   174  0079                     	ds	2
   175                           	global	??_main
   176  007B                     ??_main:	; 0 bytes @ 0xB
   177                           psect	cstackBANK0,class=BANK0,space=1
   178                           global __pcstackBANK0
   179  0020                     __pcstackBANK0:
   180                           	global	adc@a
   181  0020                     adc@a:	; 2 bytes @ 0x0
   182  0020                     	ds	2
   183                           	global	adc@b
   184  0022                     adc@b:	; 2 bytes @ 0x2
   185  0022                     	ds	2
   186                           	global	adc@e
   187  0024                     adc@e:	; 2 bytes @ 0x4
   188  0024                     	ds	2
   189                           	global	adc@f
   190  0026                     adc@f:	; 2 bytes @ 0x6
   191  0026                     	ds	2
   192                           	global	adc@g
   193  0028                     adc@g:	; 1 bytes @ 0x8
   194  0028                     	ds	1
   195                           	global	adc@c
   196  0029                     adc@c:	; 2 bytes @ 0x9
   197  0029                     	ds	2
   198                           	global	adc@d
   199  002B                     adc@d:	; 2 bytes @ 0xB
   200  002B                     	ds	2
   201 ;;Data sizes: Strings 0, constant 0, data 0, bss 0, persistent 6 stack 0
   202 ;;Auto spaces:   Size  Autos    Used
   203 ;; COMMON          14     11      11
   204 ;; BANK0           80     13      19
   205 ;; BANK1           80      0       0
   206 ;; BANK3           96      0       0
   207 ;; BANK2           96      0       0
   208                           
   209 ;;
   210 ;; Pointer list with targets:
   211                           
   212 ;; ?___awmod	int  size(1) Largest target is 0
   213 ;;
   214 ;; ?___awdiv	int  size(1) Largest target is 0
   215 ;;
   216                           
   217                           
   218 ;;
   219 ;; Critical Paths under _main in COMMON
   220 ;;
   221 ;;   _main->_adc
   222 ;;   _adc->___awdiv
   223 ;;
   224 ;; Critical Paths under _main in BANK0
   225 ;;
   226 ;;   _main->_adc
   227 ;;
   228 ;; Critical Paths under _main in BANK1
   229 ;;
   230 ;;   None.
   231 ;;
   232 ;; Critical Paths under _main in BANK3
   233 ;;
   234 ;;   None.
   235 ;;
   236 ;; Critical Paths under _main in BANK2
   237 ;;
   238 ;;   None.
   239                           
   240 ;;
   241 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   242 ;;
   243                           
   244 ;;
   245 ;;Call Graph Tables:
   246 ;;
   247 ;; ---------------------------------------------------------------------------------
   248 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   249 ;; ---------------------------------------------------------------------------------
   250 ;; (0) _main                                                 0     0      0     845
   251 ;;                                _adc
   252 ;; ---------------------------------------------------------------------------------
   253 ;; (1) _adc                                                 15    15      0     845
   254 ;;                                              9 COMMON     2     2      0
   255 ;;                                              0 BANK0     13    13      0
   256 ;;                            ___awdiv
   257 ;;                            ___awmod
   258 ;;                                 _tx
   259 ;;                                _tx1
   260 ;; ---------------------------------------------------------------------------------
   261 ;; (2) ___awmod                                              7     3      4     296
   262 ;;                                              0 COMMON     7     3      4
   263 ;; ---------------------------------------------------------------------------------
   264 ;; (2) ___awdiv                                              9     5      4     300
   265 ;;                                              0 COMMON     9     5      4
   266 ;; ---------------------------------------------------------------------------------
   267 ;; (2) _tx                                                   2     0      2      22
   268 ;;                                              0 COMMON     2     0      2
   269 ;; ---------------------------------------------------------------------------------
   270 ;; (2) _tx1                                                  1     1      0      22
   271 ;;                                              0 COMMON     1     1      0
   272 ;; ---------------------------------------------------------------------------------
   273 ;; Estimated maximum stack depth 2
   274 ;; ---------------------------------------------------------------------------------
   275                           
   276 ;; Call Graph Graphs:
   277                           
   278 ;; _main (ROOT)
   279 ;;   _adc
   280 ;;     ___awdiv
   281 ;;     ___awmod
   282 ;;     _tx
   283 ;;     _tx1
   284 ;;
   285                           
   286 ;; Address spaces:
   287                           
   288 ;;Name               Size   Autos  Total    Cost      Usage
   289 ;;BITCOMMON            E      0       0       0        0.0%
   290 ;;EEDATA             100      0       0       0        0.0%
   291 ;;NULL                 0      0       0       0        0.0%
   292 ;;CODE                 0      0       0       0        0.0%
   293 ;;COMMON               E      B       B       1       78.6%
   294 ;;BITSFR0              0      0       0       1        0.0%
   295 ;;SFR0                 0      0       0       1        0.0%
   296 ;;BITSFR1              0      0       0       2        0.0%
   297 ;;SFR1                 0      0       0       2        0.0%
   298 ;;STACK                0      0       2       2        0.0%
   299 ;;ABS                  0      0      1E       3        0.0%
   300 ;;BITBANK0            50      0       0       4        0.0%
   301 ;;BITSFR3              0      0       0       4        0.0%
   302 ;;SFR3                 0      0       0       4        0.0%
   303 ;;BANK0               50      D      13       5       23.8%
   304 ;;BITSFR2              0      0       0       5        0.0%
   305 ;;SFR2                 0      0       0       5        0.0%
   306 ;;BITBANK1            50      0       0       6        0.0%
   307 ;;BANK1               50      0       0       7        0.0%
   308 ;;BITBANK3            60      0       0       8        0.0%
   309 ;;BANK3               60      0       0       9        0.0%
   310 ;;BITBANK2            60      0       0      10        0.0%
   311 ;;BANK2               60      0       0      11        0.0%
   312 ;;DATA                 0      0      20      12        0.0%
   313                           
   314                           	global	_main
   315                           psect	maintext,global,class=CODE,delta=2
   316                           global __pmaintext
   317  05FB                     __pmaintext:
   318                           
   319 ;; *************** function _main *****************
   320 ;; Defined at:
   321 ;;		line 48 in file "D:\Embedded\pic\code\software\protocal\UART\UART_ADC\UART_ADC.c"
   322 ;; Parameters:    Size  Location     Type
   323 ;;		None
   324 ;; Auto vars:     Size  Location     Type
   325 ;;		None
   326 ;; Return value:  Size  Location     Type
   327 ;;		None               void
   328 ;; Registers used:
   329 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   330 ;; Tracked objects:
   331 ;;		On entry : 17F/0
   332 ;;		On exit  : 0/0
   333 ;;		Unchanged: 0/0
   334 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   335 ;;      Params:         0       0       0       0       0
   336 ;;      Locals:         0       0       0       0       0
   337 ;;      Temps:          0       0       0       0       0
   338 ;;      Totals:         0       0       0       0       0
   339 ;;Total ram usage:        0 bytes
   340 ;; Hardware stack levels required when called:    2
   341 ;; This function calls:
   342 ;;		_adc
   343 ;; This function is called by:
   344 ;;		Startup code after reset
   345 ;; This function uses a non-reentrant model
   346 ;;
   347                           psect	maintext
   348                           	file	"D:\Embedded\pic\code\software\protocal\UART\UART_ADC\UART_ADC.c"
   349                           	line	48
   350                           	global	__size_of_main
   351  0033                     	__size_of_main	equ	__end_of_main-_main
   352                           	
   353  05FB                     _main:	
   354                           	opt	stack 6
   355                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   356                           	line	49
   357                           	
   358  05FB                     l2449:	
   359                           ;UART_ADC.c: 49: PORTC=0X00;
   360  05FB  1283               	bcf	status, 5	;RP0=0, select bank0
   361  05FC  1303               	bcf	status, 6	;RP1=0, select bank0
   362  05FD  0187               	clrf	(7)	;volatile
   363                           	line	50
   364                           ;UART_ADC.c: 50: TRISC=0X00;
   365  05FE  1683               	bsf	status, 5	;RP0=1, select bank1
   366  05FF  1303               	bcf	status, 6	;RP1=0, select bank1
   367  0600  0187               	clrf	(135)^080h	;volatile
   368                           	line	51
   369                           ;UART_ADC.c: 51: PORTE=0X00;
   370  0601  1283               	bcf	status, 5	;RP0=0, select bank0
   371  0602  1303               	bcf	status, 6	;RP1=0, select bank0
   372  0603  0189               	clrf	(9)	;volatile
   373                           	line	52
   374                           ;UART_ADC.c: 52: TRISE=0X00;
   375  0604  1683               	bsf	status, 5	;RP0=1, select bank1
   376  0605  1303               	bcf	status, 6	;RP1=0, select bank1
   377  0606  0189               	clrf	(137)^080h	;volatile
   378                           	line	53
   379                           ;UART_ADC.c: 53: PORTA=0X00;
   380  0607  1283               	bcf	status, 5	;RP0=0, select bank0
   381  0608  1303               	bcf	status, 6	;RP1=0, select bank0
   382  0609  0185               	clrf	(5)	;volatile
   383                           	line	54
   384                           	
   385  060A                     l2451:	
   386                           ;UART_ADC.c: 54: TRISA=0X02;
   387  060A  3002               	movlw	(02h)
   388  060B  1683               	bsf	status, 5	;RP0=1, select bank1
   389  060C  1303               	bcf	status, 6	;RP1=0, select bank1
   390  060D  0085               	movwf	(133)^080h	;volatile
   391                           	line	55
   392                           	
   393  060E                     l2453:	
   394                           ;UART_ADC.c: 55: PORTD=0X00;
   395  060E  1283               	bcf	status, 5	;RP0=0, select bank0
   396  060F  1303               	bcf	status, 6	;RP1=0, select bank0
   397  0610  0188               	clrf	(8)	;volatile
   398                           	line	56
   399                           	
   400  0611                     l2455:	
   401                           ;UART_ADC.c: 56: TRISD=0X00;
   402  0611  1683               	bsf	status, 5	;RP0=1, select bank1
   403  0612  1303               	bcf	status, 6	;RP1=0, select bank1
   404  0613  0188               	clrf	(136)^080h	;volatile
   405                           	line	57
   406                           	
   407  0614                     l2457:	
   408                           ;UART_ADC.c: 57: TXSTA=0X26;
   409  0614  3026               	movlw	(026h)
   410  0615  0098               	movwf	(152)^080h	;volatile
   411                           	line	58
   412                           	
   413  0616                     l2459:	
   414                           ;UART_ADC.c: 58: RCSTA=0X90;
   415  0616  3090               	movlw	(090h)
   416  0617  1283               	bcf	status, 5	;RP0=0, select bank0
   417  0618  1303               	bcf	status, 6	;RP1=0, select bank0
   418  0619  0098               	movwf	(24)	;volatile
   419                           	line	59
   420                           	
   421  061A                     l2461:	
   422                           ;UART_ADC.c: 59: ANSEL=0X02;
   423  061A  3002               	movlw	(02h)
   424  061B  1683               	bsf	status, 5	;RP0=1, select bank3
   425  061C  1703               	bsf	status, 6	;RP1=1, select bank3
   426  061D  0088               	movwf	(392)^0180h	;volatile
   427                           	line	60
   428                           ;UART_ADC.c: 60: ANSELH=0X00;
   429  061E  0189               	clrf	(393)^0180h	;volatile
   430                           	line	61
   431                           	
   432  061F                     l2463:	
   433                           ;UART_ADC.c: 61: SPBRG=25;
   434  061F  3019               	movlw	(019h)
   435  0620  1683               	bsf	status, 5	;RP0=1, select bank1
   436  0621  1303               	bcf	status, 6	;RP1=0, select bank1
   437  0622  0099               	movwf	(153)^080h	;volatile
   438  0623  2E24               	goto	l2465
   439                           	line	62
   440                           ;UART_ADC.c: 62: while(1)
   441                           	
   442  0624                     l1055:	
   443                           	line	64
   444                           	
   445  0624                     l2465:	
   446                           ;UART_ADC.c: 63: {
   447                           ;UART_ADC.c: 64: adc();
   448  0624  120A  118A  2708   	fcall	_adc
              120A  118A         
   449  0629  2E24               	goto	l2465
   450                           	line	65
   451                           	
   452  062A                     l1056:	
   453                           	line	62
   454  062A  2E24               	goto	l2465
   455                           	
   456  062B                     l1057:	
   457                           	line	66
   458                           	
   459  062B                     l1058:	
   460                           	global	start
   461  062B  120A  118A  2800   	ljmp	start
   462                           	opt stack 0
   463                           GLOBAL	__end_of_main
   464  062E                     	__end_of_main:
   465 ;; =============== function _main ends ============
   466                           
   467                           	signat	_main,88
   468                           	global	_adc
   469                           psect	text158,local,class=CODE,delta=2
   470                           global __ptext158
   471  0708                     __ptext158:
   472                           
   473 ;; *************** function _adc *****************
   474 ;; Defined at:
   475 ;;		line 24 in file "D:\Embedded\pic\code\software\protocal\UART\UART_ADC\UART_ADC.c"
   476 ;; Parameters:    Size  Location     Type
   477 ;;		None
   478 ;; Auto vars:     Size  Location     Type
   479 ;;  d               2   11[BANK0 ] int 
   480 ;;  c               2    9[BANK0 ] int 
   481 ;;  f               2    6[BANK0 ] int 
   482 ;;  e               2    4[BANK0 ] int 
   483 ;;  b               2    2[BANK0 ] int 
   484 ;;  a               2    0[BANK0 ] int 
   485 ;;  g               1    8[BANK0 ] unsigned char 
   486 ;; Return value:  Size  Location     Type
   487 ;;		None               void
   488 ;; Registers used:
   489 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   490 ;; Tracked objects:
   491 ;;		On entry : 0/0
   492 ;;		On exit  : 0/0
   493 ;;		Unchanged: 0/0
   494 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   495 ;;      Params:         0       0       0       0       0
   496 ;;      Locals:         0      13       0       0       0
   497 ;;      Temps:          2       0       0       0       0
   498 ;;      Totals:         2      13       0       0       0
   499 ;;Total ram usage:       15 bytes
   500 ;; Hardware stack levels used:    1
   501 ;; Hardware stack levels required when called:    1
   502 ;; This function calls:
   503 ;;		___awdiv
   504 ;;		___awmod
   505 ;;		_tx
   506 ;;		_tx1
   507 ;; This function is called by:
   508 ;;		_main
   509 ;; This function uses a non-reentrant model
   510 ;;
   511                           psect	text158
   512                           	file	"D:\Embedded\pic\code\software\protocal\UART\UART_ADC\UART_ADC.c"
   513                           	line	24
   514                           	global	__size_of_adc
   515  00F8                     	__size_of_adc	equ	__end_of_adc-_adc
   516                           	
   517  0708                     _adc:	
   518                           	opt	stack 6
   519                           ; Regs used in _adc: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   520                           	
   521  0708                     l2423:	
   522  0708  300D               	movlw	(0Dh)
   523  0709  00F9               	movwf	(??_adc+0)+0
   524  070A  0879               	movf	(??_adc+0)+0,w
   525  070B  1283               	bcf	status, 5	;RP0=0, select bank0
   526  070C  1303               	bcf	status, 6	;RP1=0, select bank0
   527  070D  00A8               	movwf	(adc@g)
   528                           	line	26
   529                           ;UART_ADC.c: 25: int a,b,c,d,e,f;
   530                           ;UART_ADC.c: 26: ADCON0=0X87;
   531  070E  3087               	movlw	(087h)
   532  070F  009F               	movwf	(31)	;volatile
   533                           	line	27
   534                           ;UART_ADC.c: 27: ADCON1=0X80;
   535  0710  3080               	movlw	(080h)
   536  0711  1683               	bsf	status, 5	;RP0=1, select bank1
   537  0712  1303               	bcf	status, 6	;RP1=0, select bank1
   538  0713  009F               	movwf	(159)^080h	;volatile
   539                           	line	28
   540                           ;UART_ADC.c: 28: low=ADRESL;
   541  0714  081E               	movf	(158)^080h,w	;volatile
   542  0715  00F9               	movwf	(??_adc+0)+0
   543  0716  01FA               	clrf	(??_adc+0)+0+1
   544  0717  0879               	movf	0+(??_adc+0)+0,w
   545  0718  1283               	bcf	status, 5	;RP0=0, select bank0
   546  0719  1303               	bcf	status, 6	;RP1=0, select bank0
   547  071A  00B1               	movwf	(_low)
   548  071B  087A               	movf	1+(??_adc+0)+0,w
   549  071C  00B2               	movwf	(_low+1)
   550                           	line	29
   551                           ;UART_ADC.c: 29: high=ADRESH;
   552  071D  081E               	movf	(30),w	;volatile
   553  071E  00F9               	movwf	(??_adc+0)+0
   554  071F  01FA               	clrf	(??_adc+0)+0+1
   555  0720  0879               	movf	0+(??_adc+0)+0,w
   556  0721  00AF               	movwf	(_high)
   557  0722  087A               	movf	1+(??_adc+0)+0,w
   558  0723  00B0               	movwf	(_high+1)
   559                           	line	30
   560                           	
   561  0724                     l2425:	
   562                           ;UART_ADC.c: 30: DV=low+(high*256);
   563  0724  0830               	movf	(_high+1),w
   564  0725  00FA               	movwf	(??_adc+0)+0+1
   565  0726  082F               	movf	(_high),w
   566  0727  00F9               	movwf	(??_adc+0)+0
   567  0728  0879               	movf	(??_adc+0)+0,w
   568  0729  00FA               	movwf	(??_adc+0)+1
   569  072A  01F9               	clrf	(??_adc+0)+0
   570  072B  0831               	movf	(_low),w
   571  072C  0779               	addwf	0+(??_adc+0)+0,w
   572  072D  00AD               	movwf	(_DV)
   573  072E  0832               	movf	(_low+1),w
   574  072F  1803               	skipnc
   575  0730  0A32               	incf	(_low+1),w
   576  0731  077A               	addwf	1+(??_adc+0)+0,w
   577  0732  00AE               	movwf	1+(_DV)
   578                           	line	32
   579                           	
   580  0733                     l2427:	
   581                           ;UART_ADC.c: 32: a=DV/1000;
   582  0733  30E8               	movlw	low(03E8h)
   583  0734  00F0               	movwf	(?___awdiv)
   584  0735  3003               	movlw	high(03E8h)
   585  0736  00F1               	movwf	((?___awdiv))+1
   586  0737  082E               	movf	(_DV+1),w
   587  0738  01F3               	clrf	1+(?___awdiv)+02h
   588  0739  07F3               	addwf	1+(?___awdiv)+02h
   589  073A  082D               	movf	(_DV),w
   590  073B  01F2               	clrf	0+(?___awdiv)+02h
   591  073C  07F2               	addwf	0+(?___awdiv)+02h
   592                           
   593  073D  120A  118A  2694   	fcall	___awdiv
              120A  118A         
   594  0742  0871               	movf	(1+(?___awdiv)),w
   595  0743  1283               	bcf	status, 5	;RP0=0, select bank0
   596  0744  1303               	bcf	status, 6	;RP1=0, select bank0
   597  0745  01A1               	clrf	(adc@a+1)
   598  0746  07A1               	addwf	(adc@a+1)
   599  0747  0870               	movf	(0+(?___awdiv)),w
   600  0748  01A0               	clrf	(adc@a)
   601  0749  07A0               	addwf	(adc@a)
   602                           
   603                           	line	33
   604                           	
   605  074A                     l2429:	
   606                           ;UART_ADC.c: 33: b=DV%1000;
   607  074A  30E8               	movlw	low(03E8h)
   608  074B  00F0               	movwf	(?___awmod)
   609  074C  3003               	movlw	high(03E8h)
   610  074D  00F1               	movwf	((?___awmod))+1
   611  074E  082E               	movf	(_DV+1),w
   612  074F  01F3               	clrf	1+(?___awmod)+02h
   613  0750  07F3               	addwf	1+(?___awmod)+02h
   614  0751  082D               	movf	(_DV),w
   615  0752  01F2               	clrf	0+(?___awmod)+02h
   616  0753  07F2               	addwf	0+(?___awmod)+02h
   617                           
   618  0754  120A  118A  262E   	fcall	___awmod
              120A  118A         
   619  0759  0871               	movf	(1+(?___awmod)),w
   620  075A  1283               	bcf	status, 5	;RP0=0, select bank0
   621  075B  1303               	bcf	status, 6	;RP1=0, select bank0
   622  075C  01A3               	clrf	(adc@b+1)
   623  075D  07A3               	addwf	(adc@b+1)
   624  075E  0870               	movf	(0+(?___awmod)),w
   625  075F  01A2               	clrf	(adc@b)
   626  0760  07A2               	addwf	(adc@b)
   627                           
   628                           	line	34
   629                           	
   630  0761                     l2431:	
   631                           ;UART_ADC.c: 34: c=b/100;
   632  0761  3064               	movlw	low(064h)
   633  0762  00F0               	movwf	(?___awdiv)
   634  0763  3000               	movlw	high(064h)
   635  0764  00F1               	movwf	((?___awdiv))+1
   636  0765  0823               	movf	(adc@b+1),w
   637  0766  01F3               	clrf	1+(?___awdiv)+02h
   638  0767  07F3               	addwf	1+(?___awdiv)+02h
   639  0768  0822               	movf	(adc@b),w
   640  0769  01F2               	clrf	0+(?___awdiv)+02h
   641  076A  07F2               	addwf	0+(?___awdiv)+02h
   642                           
   643  076B  120A  118A  2694   	fcall	___awdiv
              120A  118A         
   644  0770  0871               	movf	(1+(?___awdiv)),w
   645  0771  1283               	bcf	status, 5	;RP0=0, select bank0
   646  0772  1303               	bcf	status, 6	;RP1=0, select bank0
   647  0773  01AA               	clrf	(adc@c+1)
   648  0774  07AA               	addwf	(adc@c+1)
   649  0775  0870               	movf	(0+(?___awdiv)),w
   650  0776  01A9               	clrf	(adc@c)
   651  0777  07A9               	addwf	(adc@c)
   652                           
   653                           	line	35
   654                           	
   655  0778                     l2433:	
   656                           ;UART_ADC.c: 35: d=c%100;
   657  0778  3064               	movlw	low(064h)
   658  0779  00F0               	movwf	(?___awmod)
   659  077A  3000               	movlw	high(064h)
   660  077B  00F1               	movwf	((?___awmod))+1
   661  077C  082A               	movf	(adc@c+1),w
   662  077D  01F3               	clrf	1+(?___awmod)+02h
   663  077E  07F3               	addwf	1+(?___awmod)+02h
   664  077F  0829               	movf	(adc@c),w
   665  0780  01F2               	clrf	0+(?___awmod)+02h
   666  0781  07F2               	addwf	0+(?___awmod)+02h
   667                           
   668  0782  120A  118A  262E   	fcall	___awmod
              120A  118A         
   669  0787  0871               	movf	(1+(?___awmod)),w
   670  0788  1283               	bcf	status, 5	;RP0=0, select bank0
   671  0789  1303               	bcf	status, 6	;RP1=0, select bank0
   672  078A  01AC               	clrf	(adc@d+1)
   673  078B  07AC               	addwf	(adc@d+1)
   674  078C  0870               	movf	(0+(?___awmod)),w
   675  078D  01AB               	clrf	(adc@d)
   676  078E  07AB               	addwf	(adc@d)
   677                           
   678                           	line	36
   679                           	
   680  078F                     l2435:	
   681                           ;UART_ADC.c: 36: e=d/10;
   682  078F  300A               	movlw	low(0Ah)
   683  0790  00F0               	movwf	(?___awdiv)
   684  0791  3000               	movlw	high(0Ah)
   685  0792  00F1               	movwf	((?___awdiv))+1
   686  0793  082C               	movf	(adc@d+1),w
   687  0794  01F3               	clrf	1+(?___awdiv)+02h
   688  0795  07F3               	addwf	1+(?___awdiv)+02h
   689  0796  082B               	movf	(adc@d),w
   690  0797  01F2               	clrf	0+(?___awdiv)+02h
   691  0798  07F2               	addwf	0+(?___awdiv)+02h
   692                           
   693  0799  120A  118A  2694   	fcall	___awdiv
              120A  118A         
   694  079E  0871               	movf	(1+(?___awdiv)),w
   695  079F  1283               	bcf	status, 5	;RP0=0, select bank0
   696  07A0  1303               	bcf	status, 6	;RP1=0, select bank0
   697  07A1  01A5               	clrf	(adc@e+1)
   698  07A2  07A5               	addwf	(adc@e+1)
   699  07A3  0870               	movf	(0+(?___awdiv)),w
   700  07A4  01A4               	clrf	(adc@e)
   701  07A5  07A4               	addwf	(adc@e)
   702                           
   703                           	line	37
   704                           	
   705  07A6                     l2437:	
   706                           ;UART_ADC.c: 37: f=d%10;
   707  07A6  300A               	movlw	low(0Ah)
   708  07A7  00F0               	movwf	(?___awmod)
   709  07A8  3000               	movlw	high(0Ah)
   710  07A9  00F1               	movwf	((?___awmod))+1
   711  07AA  082C               	movf	(adc@d+1),w
   712  07AB  01F3               	clrf	1+(?___awmod)+02h
   713  07AC  07F3               	addwf	1+(?___awmod)+02h
   714  07AD  082B               	movf	(adc@d),w
   715  07AE  01F2               	clrf	0+(?___awmod)+02h
   716  07AF  07F2               	addwf	0+(?___awmod)+02h
   717                           
   718  07B0  120A  118A  262E   	fcall	___awmod
              120A  118A         
   719  07B5  0871               	movf	(1+(?___awmod)),w
   720  07B6  1283               	bcf	status, 5	;RP0=0, select bank0
   721  07B7  1303               	bcf	status, 6	;RP1=0, select bank0
   722  07B8  01A7               	clrf	(adc@f+1)
   723  07B9  07A7               	addwf	(adc@f+1)
   724  07BA  0870               	movf	(0+(?___awmod)),w
   725  07BB  01A6               	clrf	(adc@f)
   726  07BC  07A6               	addwf	(adc@f)
   727                           
   728                           	line	38
   729                           	
   730  07BD                     l2439:	
   731                           ;UART_ADC.c: 38: tx(a+0X30);
   732  07BD  0820               	movf	(adc@a),w
   733  07BE  3E30               	addlw	low(030h)
   734  07BF  00F0               	movwf	(?_tx)
   735  07C0  0821               	movf	(adc@a+1),w
   736  07C1  1803               	skipnc
   737  07C2  3E01               	addlw	1
   738  07C3  3E00               	addlw	high(030h)
   739  07C4  00F1               	movwf	1+(?_tx)
   740  07C5  120A  118A  25E4   	fcall	_tx
              120A  118A         
   741                           	line	39
   742                           	
   743  07CA                     l2441:	
   744                           ;UART_ADC.c: 39: tx(c+0X30);
   745  07CA  1283               	bcf	status, 5	;RP0=0, select bank0
   746  07CB  1303               	bcf	status, 6	;RP1=0, select bank0
   747  07CC  0829               	movf	(adc@c),w
   748  07CD  3E30               	addlw	low(030h)
   749  07CE  00F0               	movwf	(?_tx)
   750  07CF  082A               	movf	(adc@c+1),w
   751  07D0  1803               	skipnc
   752  07D1  3E01               	addlw	1
   753  07D2  3E00               	addlw	high(030h)
   754  07D3  00F1               	movwf	1+(?_tx)
   755  07D4  120A  118A  25E4   	fcall	_tx
              120A  118A         
   756                           	line	40
   757                           	
   758  07D9                     l2443:	
   759                           ;UART_ADC.c: 40: tx(e+0X30);
   760  07D9  1283               	bcf	status, 5	;RP0=0, select bank0
   761  07DA  1303               	bcf	status, 6	;RP1=0, select bank0
   762  07DB  0824               	movf	(adc@e),w
   763  07DC  3E30               	addlw	low(030h)
   764  07DD  00F0               	movwf	(?_tx)
   765  07DE  0825               	movf	(adc@e+1),w
   766  07DF  1803               	skipnc
   767  07E0  3E01               	addlw	1
   768  07E1  3E00               	addlw	high(030h)
   769  07E2  00F1               	movwf	1+(?_tx)
   770  07E3  120A  118A  25E4   	fcall	_tx
              120A  118A         
   771                           	line	41
   772                           	
   773  07E8                     l2445:	
   774                           ;UART_ADC.c: 41: tx(f+0X30);
   775  07E8  1283               	bcf	status, 5	;RP0=0, select bank0
   776  07E9  1303               	bcf	status, 6	;RP1=0, select bank0
   777  07EA  0826               	movf	(adc@f),w
   778  07EB  3E30               	addlw	low(030h)
   779  07EC  00F0               	movwf	(?_tx)
   780  07ED  0827               	movf	(adc@f+1),w
   781  07EE  1803               	skipnc
   782  07EF  3E01               	addlw	1
   783  07F0  3E00               	addlw	high(030h)
   784  07F1  00F1               	movwf	1+(?_tx)
   785  07F2  120A  118A  25E4   	fcall	_tx
              120A  118A         
   786                           	line	42
   787                           	
   788  07F7                     l2447:	
   789                           ;UART_ADC.c: 42: tx1(g);
   790  07F7  1283               	bcf	status, 5	;RP0=0, select bank0
   791  07F8  1303               	bcf	status, 6	;RP1=0, select bank0
   792  07F9  0828               	movf	(adc@g),w
   793  07FA  120A  118A  25EF   	fcall	_tx1
              120A  118A         
   794                           	line	43
   795                           	
   796  07FF                     l1052:	
   797  07FF  0008               	return
   798                           	opt stack 0
   799                           GLOBAL	__end_of_adc
   800  0800                     	__end_of_adc:
   801 ;; =============== function _adc ends ============
   802                           
   803                           	signat	_adc,88
   804                           	global	___awmod
   805                           psect	text159,local,class=CODE,delta=2
   806                           global __ptext159
   807  062E                     __ptext159:
   808                           
   809 ;; *************** function ___awmod *****************
   810 ;; Defined at:
   811 ;;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.81\sources\awmod.c"
   812 ;; Parameters:    Size  Location     Type
   813 ;;  divisor         2    0[COMMON] int 
   814 ;;  dividend        2    2[COMMON] int 
   815 ;; Auto vars:     Size  Location     Type
   816 ;;  sign            1    6[COMMON] unsigned char 
   817 ;;  counter         1    5[COMMON] unsigned char 
   818 ;; Return value:  Size  Location     Type
   819 ;;                  2    0[COMMON] int 
   820 ;; Registers used:
   821 ;;		wreg, status,2, status,0
   822 ;; Tracked objects:
   823 ;;		On entry : 0/0
   824 ;;		On exit  : 0/0
   825 ;;		Unchanged: 0/0
   826 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   827 ;;      Params:         4       0       0       0       0
   828 ;;      Locals:         2       0       0       0       0
   829 ;;      Temps:          1       0       0       0       0
   830 ;;      Totals:         7       0       0       0       0
   831 ;;Total ram usage:        7 bytes
   832 ;; Hardware stack levels used:    1
   833 ;; This function calls:
   834 ;;		Nothing
   835 ;; This function is called by:
   836 ;;		_adc
   837 ;; This function uses a non-reentrant model
   838 ;;
   839                           psect	text159
   840                           	file	"C:\Program Files\HI-TECH Software\PICC\9.81\sources\awmod.c"
   841                           	line	5
   842                           	global	__size_of___awmod
   843  0066                     	__size_of___awmod	equ	__end_of___awmod-___awmod
   844                           	
   845  062E                     ___awmod:	
   846                           	opt	stack 6
   847                           ; Regs used in ___awmod: [wreg+status,2+status,0]
   848                           	line	8
   849                           	
   850  062E                     l2389:	
   851  062E  01F6               	clrf	(___awmod@sign)
   852                           	line	9
   853  062F  1FF3               	btfss	(___awmod@dividend+1),7
   854  0630  2E32               	goto	u2331
   855  0631  2E33               	goto	u2330
   856  0632                     u2331:
   857  0632  2E3C               	goto	l2393
   858  0633                     u2330:
   859                           	line	10
   860                           	
   861  0633                     l2391:	
   862  0633  09F2               	comf	(___awmod@dividend),f
   863  0634  09F3               	comf	(___awmod@dividend+1),f
   864  0635  0AF2               	incf	(___awmod@dividend),f
   865  0636  1903               	skipnz
   866  0637  0AF3               	incf	(___awmod@dividend+1),f
   867                           	line	11
   868  0638  01F6               	clrf	(___awmod@sign)
   869  0639  1403               	bsf	status,0
   870  063A  0DF6               	rlf	(___awmod@sign),f
   871  063B  2E3C               	goto	l2393
   872                           	line	12
   873                           	
   874  063C                     l1275:	
   875                           	line	13
   876                           	
   877  063C                     l2393:	
   878  063C  1FF1               	btfss	(___awmod@divisor+1),7
   879  063D  2E3F               	goto	u2341
   880  063E  2E40               	goto	u2340
   881  063F                     u2341:
   882  063F  2E46               	goto	l2397
   883  0640                     u2340:
   884                           	line	14
   885                           	
   886  0640                     l2395:	
   887  0640  09F0               	comf	(___awmod@divisor),f
   888  0641  09F1               	comf	(___awmod@divisor+1),f
   889  0642  0AF0               	incf	(___awmod@divisor),f
   890  0643  1903               	skipnz
   891  0644  0AF1               	incf	(___awmod@divisor+1),f
   892  0645  2E46               	goto	l2397
   893                           	
   894  0646                     l1276:	
   895                           	line	15
   896                           	
   897  0646                     l2397:	
   898  0646  0871               	movf	(___awmod@divisor+1),w
   899  0647  0470               	iorwf	(___awmod@divisor),w
   900  0648  1903               	skipnz
   901  0649  2E4B               	goto	u2351
   902  064A  2E4C               	goto	u2350
   903  064B                     u2351:
   904  064B  2E82               	goto	l2415
   905  064C                     u2350:
   906                           	line	16
   907                           	
   908  064C                     l2399:	
   909  064C  01F5               	clrf	(___awmod@counter)
   910  064D  1403               	bsf	status,0
   911  064E  0DF5               	rlf	(___awmod@counter),f
   912                           	line	17
   913  064F  2E5C               	goto	l2405
   914                           	
   915  0650                     l1279:	
   916                           	line	18
   917                           	
   918  0650                     l2401:	
   919  0650  3001               	movlw	01h
   920                           	
   921  0651                     u2365:
   922  0651  1003               	clrc
   923  0652  0DF0               	rlf	(___awmod@divisor),f
   924  0653  0DF1               	rlf	(___awmod@divisor+1),f
   925  0654  3EFF               	addlw	-1
   926  0655  1D03               	skipz
   927  0656  2E51               	goto	u2365
   928                           	line	19
   929                           	
   930  0657                     l2403:	
   931  0657  3001               	movlw	(01h)
   932  0658  00F4               	movwf	(??___awmod+0)+0
   933  0659  0874               	movf	(??___awmod+0)+0,w
   934  065A  07F5               	addwf	(___awmod@counter),f
   935  065B  2E5C               	goto	l2405
   936                           	line	20
   937                           	
   938  065C                     l1278:	
   939                           	line	17
   940                           	
   941  065C                     l2405:	
   942  065C  1FF1               	btfss	(___awmod@divisor+1),(15)&7
   943  065D  2E5F               	goto	u2371
   944  065E  2E60               	goto	u2370
   945  065F                     u2371:
   946  065F  2E50               	goto	l2401
   947  0660                     u2370:
   948  0660  2E62               	goto	l2407
   949                           	
   950  0661                     l1280:	
   951  0661  2E62               	goto	l2407
   952                           	line	21
   953                           	
   954  0662                     l1281:	
   955                           	line	22
   956                           	
   957  0662                     l2407:	
   958  0662  0871               	movf	(___awmod@divisor+1),w
   959  0663  0273               	subwf	(___awmod@dividend+1),w
   960  0664  1D03               	skipz
   961  0665  2E68               	goto	u2385
   962  0666  0870               	movf	(___awmod@divisor),w
   963  0667  0272               	subwf	(___awmod@dividend),w
   964  0668                     u2385:
   965  0668  1C03               	skipc
   966  0669  2E6B               	goto	u2381
   967  066A  2E6C               	goto	u2380
   968  066B                     u2381:
   969  066B  2E73               	goto	l2411
   970  066C                     u2380:
   971                           	line	23
   972                           	
   973  066C                     l2409:	
   974  066C  0870               	movf	(___awmod@divisor),w
   975  066D  02F2               	subwf	(___awmod@dividend),f
   976  066E  0871               	movf	(___awmod@divisor+1),w
   977  066F  1C03               	skipc
   978  0670  03F3               	decf	(___awmod@dividend+1),f
   979  0671  02F3               	subwf	(___awmod@dividend+1),f
   980  0672  2E73               	goto	l2411
   981                           	
   982  0673                     l1282:	
   983                           	line	24
   984                           	
   985  0673                     l2411:	
   986  0673  3001               	movlw	01h
   987                           	
   988  0674                     u2395:
   989  0674  1003               	clrc
   990  0675  0CF1               	rrf	(___awmod@divisor+1),f
   991  0676  0CF0               	rrf	(___awmod@divisor),f
   992  0677  3EFF               	addlw	-1
   993  0678  1D03               	skipz
   994  0679  2E74               	goto	u2395
   995                           	line	25
   996                           	
   997  067A                     l2413:	
   998  067A  3001               	movlw	low(01h)
   999  067B  02F5               	subwf	(___awmod@counter),f
  1000  067C  1D03               	btfss	status,2
  1001  067D  2E7F               	goto	u2401
  1002  067E  2E80               	goto	u2400
  1003  067F                     u2401:
  1004  067F  2E62               	goto	l2407
  1005  0680                     u2400:
  1006  0680  2E82               	goto	l2415
  1007                           	
  1008  0681                     l1283:	
  1009  0681  2E82               	goto	l2415
  1010                           	line	26
  1011                           	
  1012  0682                     l1277:	
  1013                           	line	27
  1014                           	
  1015  0682                     l2415:	
  1016  0682  0876               	movf	(___awmod@sign),w
  1017  0683  1D03               	skipz
  1018  0684  2E86               	goto	u2410
  1019  0685  2E8C               	goto	l2419
  1020  0686                     u2410:
  1021                           	line	28
  1022                           	
  1023  0686                     l2417:	
  1024  0686  09F2               	comf	(___awmod@dividend),f
  1025  0687  09F3               	comf	(___awmod@dividend+1),f
  1026  0688  0AF2               	incf	(___awmod@dividend),f
  1027  0689  1903               	skipnz
  1028  068A  0AF3               	incf	(___awmod@dividend+1),f
  1029  068B  2E8C               	goto	l2419
  1030                           	
  1031  068C                     l1284:	
  1032                           	line	29
  1033                           	
  1034  068C                     l2419:	
  1035  068C  0873               	movf	(___awmod@dividend+1),w
  1036  068D  01F1               	clrf	(?___awmod+1)
  1037  068E  07F1               	addwf	(?___awmod+1)
  1038  068F  0872               	movf	(___awmod@dividend),w
  1039  0690  01F0               	clrf	(?___awmod)
  1040  0691  07F0               	addwf	(?___awmod)
  1041                           
  1042  0692  2E93               	goto	l1285
  1043                           	
  1044  0693                     l2421:	
  1045                           	line	30
  1046                           	
  1047  0693                     l1285:	
  1048  0693  0008               	return
  1049                           	opt stack 0
  1050                           GLOBAL	__end_of___awmod
  1051  0694                     	__end_of___awmod:
  1052 ;; =============== function ___awmod ends ============
  1053                           
  1054                           	signat	___awmod,8314
  1055                           	global	___awdiv
  1056                           psect	text160,local,class=CODE,delta=2
  1057                           global __ptext160
  1058  0694                     __ptext160:
  1059                           
  1060 ;; *************** function ___awdiv *****************
  1061 ;; Defined at:
  1062 ;;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.81\sources\awdiv.c"
  1063 ;; Parameters:    Size  Location     Type
  1064 ;;  divisor         2    0[COMMON] int 
  1065 ;;  dividend        2    2[COMMON] int 
  1066 ;; Auto vars:     Size  Location     Type
  1067 ;;  quotient        2    7[COMMON] int 
  1068 ;;  sign            1    6[COMMON] unsigned char 
  1069 ;;  counter         1    5[COMMON] unsigned char 
  1070 ;; Return value:  Size  Location     Type
  1071 ;;                  2    0[COMMON] int 
  1072 ;; Registers used:
  1073 ;;		wreg, status,2, status,0
  1074 ;; Tracked objects:
  1075 ;;		On entry : 0/0
  1076 ;;		On exit  : 0/0
  1077 ;;		Unchanged: 0/0
  1078 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1079 ;;      Params:         4       0       0       0       0
  1080 ;;      Locals:         4       0       0       0       0
  1081 ;;      Temps:          1       0       0       0       0
  1082 ;;      Totals:         9       0       0       0       0
  1083 ;;Total ram usage:        9 bytes
  1084 ;; Hardware stack levels used:    1
  1085 ;; This function calls:
  1086 ;;		Nothing
  1087 ;; This function is called by:
  1088 ;;		_adc
  1089 ;; This function uses a non-reentrant model
  1090 ;;
  1091                           psect	text160
  1092                           	file	"C:\Program Files\HI-TECH Software\PICC\9.81\sources\awdiv.c"
  1093                           	line	5
  1094                           	global	__size_of___awdiv
  1095  0074                     	__size_of___awdiv	equ	__end_of___awdiv-___awdiv
  1096                           	
  1097  0694                     ___awdiv:	
  1098                           	opt	stack 6
  1099                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1100                           	line	9
  1101                           	
  1102  0694                     l2349:	
  1103  0694  01F6               	clrf	(___awdiv@sign)
  1104                           	line	10
  1105  0695  1FF1               	btfss	(___awdiv@divisor+1),7
  1106  0696  2E98               	goto	u2231
  1107  0697  2E99               	goto	u2230
  1108  0698                     u2231:
  1109  0698  2EA2               	goto	l2353
  1110  0699                     u2230:
  1111                           	line	11
  1112                           	
  1113  0699                     l2351:	
  1114  0699  09F0               	comf	(___awdiv@divisor),f
  1115  069A  09F1               	comf	(___awdiv@divisor+1),f
  1116  069B  0AF0               	incf	(___awdiv@divisor),f
  1117  069C  1903               	skipnz
  1118  069D  0AF1               	incf	(___awdiv@divisor+1),f
  1119                           	line	12
  1120  069E  01F6               	clrf	(___awdiv@sign)
  1121  069F  1403               	bsf	status,0
  1122  06A0  0DF6               	rlf	(___awdiv@sign),f
  1123  06A1  2EA2               	goto	l2353
  1124                           	line	13
  1125                           	
  1126  06A2                     l1207:	
  1127                           	line	14
  1128                           	
  1129  06A2                     l2353:	
  1130  06A2  1FF3               	btfss	(___awdiv@dividend+1),7
  1131  06A3  2EA5               	goto	u2241
  1132  06A4  2EA6               	goto	u2240
  1133  06A5                     u2241:
  1134  06A5  2EB0               	goto	l2359
  1135  06A6                     u2240:
  1136                           	line	15
  1137                           	
  1138  06A6                     l2355:	
  1139  06A6  09F2               	comf	(___awdiv@dividend),f
  1140  06A7  09F3               	comf	(___awdiv@dividend+1),f
  1141  06A8  0AF2               	incf	(___awdiv@dividend),f
  1142  06A9  1903               	skipnz
  1143  06AA  0AF3               	incf	(___awdiv@dividend+1),f
  1144                           	line	16
  1145                           	
  1146  06AB                     l2357:	
  1147  06AB  3001               	movlw	(01h)
  1148  06AC  00F4               	movwf	(??___awdiv+0)+0
  1149  06AD  0874               	movf	(??___awdiv+0)+0,w
  1150  06AE  06F6               	xorwf	(___awdiv@sign),f
  1151  06AF  2EB0               	goto	l2359
  1152                           	line	17
  1153                           	
  1154  06B0                     l1208:	
  1155                           	line	18
  1156                           	
  1157  06B0                     l2359:	
  1158  06B0  01F7               	clrf	(___awdiv@quotient)
  1159  06B1  01F8               	clrf	(___awdiv@quotient+1)
  1160                           	line	19
  1161                           	
  1162  06B2                     l2361:	
  1163  06B2  0871               	movf	(___awdiv@divisor+1),w
  1164  06B3  0470               	iorwf	(___awdiv@divisor),w
  1165  06B4  1903               	skipnz
  1166  06B5  2EB7               	goto	u2251
  1167  06B6  2EB8               	goto	u2250
  1168  06B7                     u2251:
  1169  06B7  2EF6               	goto	l2381
  1170  06B8                     u2250:
  1171                           	line	20
  1172                           	
  1173  06B8                     l2363:	
  1174  06B8  01F5               	clrf	(___awdiv@counter)
  1175  06B9  1403               	bsf	status,0
  1176  06BA  0DF5               	rlf	(___awdiv@counter),f
  1177                           	line	21
  1178  06BB  2EC8               	goto	l2369
  1179                           	
  1180  06BC                     l1211:	
  1181                           	line	22
  1182                           	
  1183  06BC                     l2365:	
  1184  06BC  3001               	movlw	01h
  1185                           	
  1186  06BD                     u2265:
  1187  06BD  1003               	clrc
  1188  06BE  0DF0               	rlf	(___awdiv@divisor),f
  1189  06BF  0DF1               	rlf	(___awdiv@divisor+1),f
  1190  06C0  3EFF               	addlw	-1
  1191  06C1  1D03               	skipz
  1192  06C2  2EBD               	goto	u2265
  1193                           	line	23
  1194                           	
  1195  06C3                     l2367:	
  1196  06C3  3001               	movlw	(01h)
  1197  06C4  00F4               	movwf	(??___awdiv+0)+0
  1198  06C5  0874               	movf	(??___awdiv+0)+0,w
  1199  06C6  07F5               	addwf	(___awdiv@counter),f
  1200  06C7  2EC8               	goto	l2369
  1201                           	line	24
  1202                           	
  1203  06C8                     l1210:	
  1204                           	line	21
  1205                           	
  1206  06C8                     l2369:	
  1207  06C8  1FF1               	btfss	(___awdiv@divisor+1),(15)&7
  1208  06C9  2ECB               	goto	u2271
  1209  06CA  2ECC               	goto	u2270
  1210  06CB                     u2271:
  1211  06CB  2EBC               	goto	l2365
  1212  06CC                     u2270:
  1213  06CC  2ECE               	goto	l2371
  1214                           	
  1215  06CD                     l1212:	
  1216  06CD  2ECE               	goto	l2371
  1217                           	line	25
  1218                           	
  1219  06CE                     l1213:	
  1220                           	line	26
  1221                           	
  1222  06CE                     l2371:	
  1223  06CE  3001               	movlw	01h
  1224                           	
  1225  06CF                     u2285:
  1226  06CF  1003               	clrc
  1227  06D0  0DF7               	rlf	(___awdiv@quotient),f
  1228  06D1  0DF8               	rlf	(___awdiv@quotient+1),f
  1229  06D2  3EFF               	addlw	-1
  1230  06D3  1D03               	skipz
  1231  06D4  2ECF               	goto	u2285
  1232                           	line	27
  1233  06D5  0871               	movf	(___awdiv@divisor+1),w
  1234  06D6  0273               	subwf	(___awdiv@dividend+1),w
  1235  06D7  1D03               	skipz
  1236  06D8  2EDB               	goto	u2295
  1237  06D9  0870               	movf	(___awdiv@divisor),w
  1238  06DA  0272               	subwf	(___awdiv@dividend),w
  1239  06DB                     u2295:
  1240  06DB  1C03               	skipc
  1241  06DC  2EDE               	goto	u2291
  1242  06DD  2EDF               	goto	u2290
  1243  06DE                     u2291:
  1244  06DE  2EE7               	goto	l2377
  1245  06DF                     u2290:
  1246                           	line	28
  1247                           	
  1248  06DF                     l2373:	
  1249  06DF  0870               	movf	(___awdiv@divisor),w
  1250  06E0  02F2               	subwf	(___awdiv@dividend),f
  1251  06E1  0871               	movf	(___awdiv@divisor+1),w
  1252  06E2  1C03               	skipc
  1253  06E3  03F3               	decf	(___awdiv@dividend+1),f
  1254  06E4  02F3               	subwf	(___awdiv@dividend+1),f
  1255                           	line	29
  1256                           	
  1257  06E5                     l2375:	
  1258  06E5  1477               	bsf	(___awdiv@quotient)+(0/8),(0)&7
  1259  06E6  2EE7               	goto	l2377
  1260                           	line	30
  1261                           	
  1262  06E7                     l1214:	
  1263                           	line	31
  1264                           	
  1265  06E7                     l2377:	
  1266  06E7  3001               	movlw	01h
  1267                           	
  1268  06E8                     u2305:
  1269  06E8  1003               	clrc
  1270  06E9  0CF1               	rrf	(___awdiv@divisor+1),f
  1271  06EA  0CF0               	rrf	(___awdiv@divisor),f
  1272  06EB  3EFF               	addlw	-1
  1273  06EC  1D03               	skipz
  1274  06ED  2EE8               	goto	u2305
  1275                           	line	32
  1276                           	
  1277  06EE                     l2379:	
  1278  06EE  3001               	movlw	low(01h)
  1279  06EF  02F5               	subwf	(___awdiv@counter),f
  1280  06F0  1D03               	btfss	status,2
  1281  06F1  2EF3               	goto	u2311
  1282  06F2  2EF4               	goto	u2310
  1283  06F3                     u2311:
  1284  06F3  2ECE               	goto	l2371
  1285  06F4                     u2310:
  1286  06F4  2EF6               	goto	l2381
  1287                           	
  1288  06F5                     l1215:	
  1289  06F5  2EF6               	goto	l2381
  1290                           	line	33
  1291                           	
  1292  06F6                     l1209:	
  1293                           	line	34
  1294                           	
  1295  06F6                     l2381:	
  1296  06F6  0876               	movf	(___awdiv@sign),w
  1297  06F7  1D03               	skipz
  1298  06F8  2EFA               	goto	u2320
  1299  06F9  2F00               	goto	l2385
  1300  06FA                     u2320:
  1301                           	line	35
  1302                           	
  1303  06FA                     l2383:	
  1304  06FA  09F7               	comf	(___awdiv@quotient),f
  1305  06FB  09F8               	comf	(___awdiv@quotient+1),f
  1306  06FC  0AF7               	incf	(___awdiv@quotient),f
  1307  06FD  1903               	skipnz
  1308  06FE  0AF8               	incf	(___awdiv@quotient+1),f
  1309  06FF  2F00               	goto	l2385
  1310                           	
  1311  0700                     l1216:	
  1312                           	line	36
  1313                           	
  1314  0700                     l2385:	
  1315  0700  0878               	movf	(___awdiv@quotient+1),w
  1316  0701  01F1               	clrf	(?___awdiv+1)
  1317  0702  07F1               	addwf	(?___awdiv+1)
  1318  0703  0877               	movf	(___awdiv@quotient),w
  1319  0704  01F0               	clrf	(?___awdiv)
  1320  0705  07F0               	addwf	(?___awdiv)
  1321                           
  1322  0706  2F07               	goto	l1217
  1323                           	
  1324  0707                     l2387:	
  1325                           	line	37
  1326                           	
  1327  0707                     l1217:	
  1328  0707  0008               	return
  1329                           	opt stack 0
  1330                           GLOBAL	__end_of___awdiv
  1331  0708                     	__end_of___awdiv:
  1332 ;; =============== function ___awdiv ends ============
  1333                           
  1334                           	signat	___awdiv,8314
  1335                           	global	_tx
  1336                           psect	text161,local,class=CODE,delta=2
  1337                           global __ptext161
  1338  05E4                     __ptext161:
  1339                           
  1340 ;; *************** function _tx *****************
  1341 ;; Defined at:
  1342 ;;		line 16 in file "D:\Embedded\pic\code\software\protocal\UART\UART_ADC\UART_ADC.c"
  1343 ;; Parameters:    Size  Location     Type
  1344 ;;  a               2    0[COMMON] int 
  1345 ;; Auto vars:     Size  Location     Type
  1346 ;;		None
  1347 ;; Return value:  Size  Location     Type
  1348 ;;		None               void
  1349 ;; Registers used:
  1350 ;;		wreg
  1351 ;; Tracked objects:
  1352 ;;		On entry : 0/0
  1353 ;;		On exit  : 0/0
  1354 ;;		Unchanged: 0/0
  1355 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1356 ;;      Params:         2       0       0       0       0
  1357 ;;      Locals:         0       0       0       0       0
  1358 ;;      Temps:          0       0       0       0       0
  1359 ;;      Totals:         2       0       0       0       0
  1360 ;;Total ram usage:        2 bytes
  1361 ;; Hardware stack levels used:    1
  1362 ;; This function calls:
  1363 ;;		Nothing
  1364 ;; This function is called by:
  1365 ;;		_adc
  1366 ;; This function uses a non-reentrant model
  1367 ;;
  1368                           psect	text161
  1369                           	file	"D:\Embedded\pic\code\software\protocal\UART\UART_ADC\UART_ADC.c"
  1370                           	line	16
  1371                           	global	__size_of_tx
  1372  000B                     	__size_of_tx	equ	__end_of_tx-_tx
  1373                           	
  1374  05E4                     _tx:	
  1375                           	opt	stack 6
  1376                           ; Regs used in _tx: [wreg]
  1377                           	line	19
  1378                           	
  1379  05E4                     l2347:	
  1380                           ;UART_ADC.c: 19: TXREG=a;
  1381  05E4  0870               	movf	(tx@a),w
  1382  05E5  1283               	bcf	status, 5	;RP0=0, select bank0
  1383  05E6  1303               	bcf	status, 6	;RP1=0, select bank0
  1384  05E7  0099               	movwf	(25)	;volatile
  1385                           	line	20
  1386                           ;UART_ADC.c: 20: while(TXIF==0);
  1387  05E8  2DE9               	goto	l1046
  1388                           	
  1389  05E9                     l1047:	
  1390                           	
  1391  05E9                     l1046:	
  1392  05E9  1E0C               	btfss	(100/8),(100)&7
  1393  05EA  2DEC               	goto	u2221
  1394  05EB  2DED               	goto	u2220
  1395  05EC                     u2221:
  1396  05EC  2DE9               	goto	l1046
  1397  05ED                     u2220:
  1398                           	
  1399  05ED                     l1048:	
  1400                           	line	21
  1401                           ;UART_ADC.c: 21: TXIF=0;
  1402  05ED  120C               	bcf	(100/8),(100)&7
  1403                           	line	22
  1404                           	
  1405  05EE                     l1049:	
  1406  05EE  0008               	return
  1407                           	opt stack 0
  1408                           GLOBAL	__end_of_tx
  1409  05EF                     	__end_of_tx:
  1410 ;; =============== function _tx ends ============
  1411                           
  1412                           	signat	_tx,4216
  1413                           	global	_tx1
  1414                           psect	text162,local,class=CODE,delta=2
  1415                           global __ptext162
  1416  05EF                     __ptext162:
  1417                           
  1418 ;; *************** function _tx1 *****************
  1419 ;; Defined at:
  1420 ;;		line 8 in file "D:\Embedded\pic\code\software\protocal\UART\UART_ADC\UART_ADC.c"
  1421 ;; Parameters:    Size  Location     Type
  1422 ;;  a               1    wreg     unsigned char 
  1423 ;; Auto vars:     Size  Location     Type
  1424 ;;  a               1    0[COMMON] unsigned char 
  1425 ;; Return value:  Size  Location     Type
  1426 ;;		None               void
  1427 ;; Registers used:
  1428 ;;		wreg
  1429 ;; Tracked objects:
  1430 ;;		On entry : 0/0
  1431 ;;		On exit  : 0/0
  1432 ;;		Unchanged: 0/0
  1433 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1434 ;;      Params:         0       0       0       0       0
  1435 ;;      Locals:         1       0       0       0       0
  1436 ;;      Temps:          0       0       0       0       0
  1437 ;;      Totals:         1       0       0       0       0
  1438 ;;Total ram usage:        1 bytes
  1439 ;; Hardware stack levels used:    1
  1440 ;; This function calls:
  1441 ;;		Nothing
  1442 ;; This function is called by:
  1443 ;;		_adc
  1444 ;; This function uses a non-reentrant model
  1445 ;;
  1446                           psect	text162
  1447                           	file	"D:\Embedded\pic\code\software\protocal\UART\UART_ADC\UART_ADC.c"
  1448                           	line	8
  1449                           	global	__size_of_tx1
  1450  000C                     	__size_of_tx1	equ	__end_of_tx1-_tx1
  1451                           	
  1452  05EF                     _tx1:	
  1453                           	opt	stack 6
  1454                           ; Regs used in _tx1: [wreg]
  1455                           ;tx1@a stored from wreg
  1456                           	line	11
  1457  05EF  00F0               	movwf	(tx1@a)
  1458                           	
  1459  05F0                     l2345:	
  1460                           ;UART_ADC.c: 11: TXREG=a;
  1461  05F0  0870               	movf	(tx1@a),w
  1462  05F1  1283               	bcf	status, 5	;RP0=0, select bank0
  1463  05F2  1303               	bcf	status, 6	;RP1=0, select bank0
  1464  05F3  0099               	movwf	(25)	;volatile
  1465                           	line	12
  1466                           ;UART_ADC.c: 12: while(TXIF==0);
  1467  05F4  2DF5               	goto	l1040
  1468                           	
  1469  05F5                     l1041:	
  1470                           	
  1471  05F5                     l1040:	
  1472  05F5  1E0C               	btfss	(100/8),(100)&7
  1473  05F6  2DF8               	goto	u2211
  1474  05F7  2DF9               	goto	u2210
  1475  05F8                     u2211:
  1476  05F8  2DF5               	goto	l1040
  1477  05F9                     u2210:
  1478                           	
  1479  05F9                     l1042:	
  1480                           	line	13
  1481                           ;UART_ADC.c: 13: TXIF=0;
  1482  05F9  120C               	bcf	(100/8),(100)&7
  1483                           	line	14
  1484                           	
  1485  05FA                     l1043:	
  1486  05FA  0008               	return
  1487                           	opt stack 0
  1488                           GLOBAL	__end_of_tx1
  1489  05FB                     	__end_of_tx1:
  1490 ;; =============== function _tx1 ends ============
  1491                           
  1492                           	signat	_tx1,4216
  1493                           psect	text163,local,class=CODE,delta=2
  1494                           global __ptext163
  1495  0000                     __ptext163:
  1496                           	global	btemp
  1497  007E                     	btemp set 07Eh
  1498                           
  1499                           	DABS	1,126,2	;btemp
  1500                           	global	wtemp0
  1501  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.81 build 7503 
Symbol Table                                                                                   Tue Jun 07 23:06:39 2022

                  _DV 002D          ___awdiv@sign 0076                    _tx 05E4                   ?_tx 0070  
                 _RE0 0048                   _RE1 0049                   _RE2 004A                   _adc 0708  
                 _tx1 05EF                   _low 0031          ___awmod@sign 0076                   tx@a 0070  
                ??_tx 0072                  ?_adc 0070                  l1040 05F5                  l1041 05F5  
                l1042 05F9                  l1210 06C8                  l1043 05FA                  l1211 06BC  
                l1212 06CD                  l1052 07FF                  l1213 06CE                  l1046 05E9  
                l1214 06E7                  l1047 05E9                  l1215 06F5                  l1207 06A2  
                l1055 0624                  l1048 05ED                  l1216 0700                  l1208 06B0  
                l1056 062A                  l1049 05EE                  l1217 0707                  l1209 06F6  
                l1057 062B                  l1058 062B                  l1280 0661                  l1281 0662  
                l2401 0650                  l1282 0673                  l1283 0681                  l2411 0673  
                l2403 0657                  l1275 063C                  l1284 068C                  l1276 0646  
                l2421 0693                  l1285 0693                  l1277 0682                  l2413 067A  
                l2405 065C                  l1278 065C                  l2351 0699                  l2407 0662  
                l1279 0650                  l2415 0682                  l2431 0761                  l2423 0708  
                l2345 05F0                  l2361 06B2                  l2353 06A2                  l2417 0686  
                l2409 066C                  l2441 07CA                  l2433 0778                  l2425 0724  
                l2347 05E4                  l2371 06CE                  l2363 06B8                  l2355 06A6  
                l2419 068C                  l2443 07D9                  l2435 078F                  l2427 0733  
                l2451 060A                  l2373 06DF                  l2365 06BC                  l2381 06F6  
                l2357 06AB                  l2349 0694                  l2445 07E8                  l2437 07A6  
                l2429 074A                  l2461 061A                  l2453 060E                  l2383 06FA  
                l2375 06E5                  l2367 06C3                  l2359 06B0                  l2391 0633  
                l2447 07F7                  l2439 07BD                  l2463 061F                  l2455 0611  
                l2385 0700                  l2377 06E7                  l2369 06C8                  l2393 063C  
                l2465 0624                  l2457 0614                  l2449 05FB                  l2387 0707  
                l2379 06EE                  l2395 0640                  l2459 0616                  l2397 0646  
                l2389 062E                  l2399 064C                  ?_tx1 0070                  u2210 05F9  
                u2211 05F8                  u2220 05ED                  u2221 05EC                  u2310 06F4  
                u2230 0699                  u2311 06F3                  u2231 0698                  u2320 06FA  
                u2240 06A6                  u2400 0680                  u2305 06E8                  u2241 06A5  
                u2401 067F                  u2250 06B8                  u2410 0686                  u2330 0633  
                u2251 06B7                  u2331 0632                  u2340 0640                  u2341 063F  
                u2270 06CC                  u2350 064C                  u2271 06CB                  u2351 064B  
                u2265 06BD                  u2290 06DF                  u2370 0660                  u2291 06DE  
                u2371 065F                  u2380 066C                  u2285 06CF                  u2381 066B  
                u2365 0651                  u2295 06DB                  u2385 0668                  u2395 0674  
                _TXIF 0064                  adc@a 0020                  adc@b 0022                  adc@c 0029  
                adc@d 002B                  adc@e 0024                  adc@f 0026                  adc@g 0028  
                _high 002F                  _main 05FB                  btemp 007E                  tx1@a 0070  
                start 0000                 ??_adc 0079                 ??_tx1 0070                 ?_main 0070  
     __end_of___awdiv 0708       __end_of___awmod 0694                 _ANSEL 0188       ___awdiv@divisor 0070  
     ___awdiv@counter 0075                 _RCSTA 0018                 _SPBRG 0099                 _PORTA 0005  
               _PORTC 0007                 _PORTD 0008                 _PORTE 0009                 _TRISA 0085  
               _TRISC 0087                 _TRISD 0088                 _TRISE 0089                 _TXREG 0019  
               _TXSTA 0098                 status 0003                 wtemp0 007E          __end_of_main 062E  
              ??_main 007B                _ADCON0 001F                _ADCON1 009F                _ADRESH 001E  
              _ADRESL 009E      ___awdiv@dividend 0072                _ANSELH 0189             ??___awdiv 0074  
           ??___awmod 0074      ___awdiv@quotient 0077       ___awmod@divisor 0070       ___awmod@counter 0075  
      __pcstackCOMMON 0070            __end_of_tx 05EF            __pmaintext 05FB               ___awdiv 0694  
             ___awmod 062E          __size_of_adc 00F8          __size_of_tx1 000C      ___awmod@dividend 0072  
end_of_initialization 05E0   start_initialization 05E0           __end_of_adc 0800           __end_of_tx1 05FB  
       __pcstackBANK0 0020             __pnvBANK0 002D              ?___awdiv 0070             __ptext160 0694  
           __ptext161 05E4             __ptext162 05EF             __ptext163 0000             __ptext158 0708  
           __ptext159 062E              ?___awmod 0070           __size_of_tx 000B      __size_of___awdiv 0074  
    __size_of___awmod 0066         __size_of_main 0033  
