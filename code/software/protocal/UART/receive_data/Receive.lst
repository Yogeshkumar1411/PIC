

HI-TECH Software PIC LITE Macro Assembler V9.81 build 7503 
                                                                                               Wed Jun 01 22:43:11 2022

HI-TECH Software Omniscient Code Generator (Lite mode) build 7503
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 7503"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F887
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           	FNCALL	_main,_display
    43                           	FNCALL	_main,_RC
    44                           	FNCALL	_RC,_display
    45                           	FNCALL	_display,_delay
    46                           	FNROOT	_main
    47                           	global	_PORTC
    48                           psect	text78,local,class=CODE,delta=2
    49                           global __ptext78
    50  0000                     __ptext78:
    51  0007                     _PORTC	set	7
    52                           	global	_PORTD
    53  0008                     _PORTD	set	8
    54                           	global	_PORTE
    55  0009                     _PORTE	set	9
    56                           	global	_RCREG
    57  001A                     _RCREG	set	26
    58                           	global	_RCSTA
    59  0018                     _RCSTA	set	24
    60                           	global	_RC1
    61  0039                     _RC1	set	57
    62                           	global	_RCIF
    63  0065                     _RCIF	set	101
    64                           	global	_RE0
    65  0048                     _RE0	set	72
    66                           	global	_RE1
    67  0049                     _RE1	set	73
    68                           	global	_RE2
    69  004A                     _RE2	set	74
    70                           	global	_SPBRG
    71  0099                     _SPBRG	set	153
    72                           	global	_TRISC
    73  0087                     _TRISC	set	135
    74                           	global	_TRISD
    75  0088                     _TRISD	set	136
    76                           	global	_TRISE
    77  0089                     _TRISE	set	137
    78                           	global	_TXSTA
    79  0098                     _TXSTA	set	152
    80                           	global	_ANSEL
    81  0188                     _ANSEL	set	392
    82                           	global	_ANSELH
    83  0189                     _ANSELH	set	393
    84                           	file	"Receive.as"
    85                           	line	#
    86                           psect cinit,class=CODE,delta=2
    87                           global start_initialization
    88  0700                     start_initialization:
    89                           
    90                           psect cinit,class=CODE,delta=2
    91                           global end_of_initialization
    92                           
    93                           ;End of C runtime variable initialization code
    94                           
    95  0700                     end_of_initialization:
    96  0700  0183               clrf status
    97  0701  120A  118A  2F46   ljmp _main	;jump to C main() function
    98                           psect	cstackCOMMON,class=COMMON,space=1
    99                           global __pcstackCOMMON
   100  0070                     __pcstackCOMMON:
   101                           	global	?_delay
   102  0070                     ?_delay:	; 0 bytes @ 0x0
   103                           	global	?_main
   104  0070                     ?_main:	; 0 bytes @ 0x0
   105                           	global	?_RC
   106  0070                     ?_RC:	; 2 bytes @ 0x0
   107                           	global	delay@ms
   108  0070                     delay@ms:	; 2 bytes @ 0x0
   109  0070                     	ds	2
   110                           	global	??_delay
   111  0072                     ??_delay:	; 0 bytes @ 0x2
   112                           	global	?_display
   113  0072                     ?_display:	; 0 bytes @ 0x2
   114                           	global	display@b
   115  0072                     display@b:	; 1 bytes @ 0x2
   116  0072                     	ds	1
   117                           	global	display@c
   118  0073                     display@c:	; 1 bytes @ 0x3
   119  0073                     	ds	1
   120                           	global	??_display
   121  0074                     ??_display:	; 0 bytes @ 0x4
   122                           	global	display@a
   123  0074                     display@a:	; 1 bytes @ 0x4
   124  0074                     	ds	1
   125                           	global	??_RC
   126  0075                     ??_RC:	; 0 bytes @ 0x5
   127  0075                     	ds	1
   128                           	global	RC@data
   129  0076                     RC@data:	; 4 bytes @ 0x6
   130  0076                     	ds	4
   131                           	global	RC@i
   132  007A                     RC@i:	; 2 bytes @ 0xA
   133  007A                     	ds	2
   134                           	global	??_main
   135  007C                     ??_main:	; 0 bytes @ 0xC
   136  007C                     	ds	1
   137 ;;Data sizes: Strings 0, constant 0, data 0, bss 0, persistent 0 stack 0
   138 ;;Auto spaces:   Size  Autos    Used
   139 ;; COMMON          14     13      13
   140 ;; BANK0           80      0       0
   141 ;; BANK1           80      0       0
   142 ;; BANK3           96      0       0
   143 ;; BANK2           96      0       0
   144                           
   145 ;;
   146 ;; Pointer list with targets:
   147                           
   148                           
   149                           
   150 ;;
   151 ;; Critical Paths under _main in COMMON
   152 ;;
   153 ;;   _main->_RC
   154 ;;   _RC->_display
   155 ;;   _display->_delay
   156 ;;
   157 ;; Critical Paths under _main in BANK0
   158 ;;
   159 ;;   None.
   160 ;;
   161 ;; Critical Paths under _main in BANK1
   162 ;;
   163 ;;   None.
   164 ;;
   165 ;; Critical Paths under _main in BANK3
   166 ;;
   167 ;;   None.
   168 ;;
   169 ;; Critical Paths under _main in BANK2
   170 ;;
   171 ;;   None.
   172                           
   173 ;;
   174 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   175 ;;
   176                           
   177 ;;
   178 ;;Call Graph Tables:
   179 ;;
   180 ;; ---------------------------------------------------------------------------------
   181 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   182 ;; ---------------------------------------------------------------------------------
   183 ;; (0) _main                                                 1     1      0     300
   184 ;;                                             12 COMMON     1     1      0
   185 ;;                            _display
   186 ;;                                 _RC
   187 ;; ---------------------------------------------------------------------------------
   188 ;; (1) _RC                                                   7     7      0     240
   189 ;;                                              5 COMMON     7     7      0
   190 ;;                            _display
   191 ;; ---------------------------------------------------------------------------------
   192 ;; (2) _display                                              3     1      2      60
   193 ;;                                              2 COMMON     3     1      2
   194 ;;                              _delay
   195 ;; ---------------------------------------------------------------------------------
   196 ;; (3) _delay                                                2     0      2      15
   197 ;;                                              0 COMMON     2     0      2
   198 ;; ---------------------------------------------------------------------------------
   199 ;; Estimated maximum stack depth 3
   200 ;; ---------------------------------------------------------------------------------
   201                           
   202 ;; Call Graph Graphs:
   203                           
   204 ;; _main (ROOT)
   205 ;;   _display
   206 ;;     _delay
   207 ;;   _RC
   208 ;;     _display
   209 ;;       _delay
   210 ;;
   211                           
   212 ;; Address spaces:
   213                           
   214 ;;Name               Size   Autos  Total    Cost      Usage
   215 ;;BITCOMMON            E      0       0       0        0.0%
   216 ;;EEDATA             100      0       0       0        0.0%
   217 ;;NULL                 0      0       0       0        0.0%
   218 ;;CODE                 0      0       0       0        0.0%
   219 ;;COMMON               E      D       D       1       92.9%
   220 ;;BITSFR0              0      0       0       1        0.0%
   221 ;;SFR0                 0      0       0       1        0.0%
   222 ;;BITSFR1              0      0       0       2        0.0%
   223 ;;SFR1                 0      0       0       2        0.0%
   224 ;;STACK                0      0       3       2        0.0%
   225 ;;ABS                  0      0       0       3        0.0%
   226 ;;BITBANK0            50      0       0       4        0.0%
   227 ;;BITSFR3              0      0       0       4        0.0%
   228 ;;SFR3                 0      0       0       4        0.0%
   229 ;;BANK0               50      0       0       5        0.0%
   230 ;;BITSFR2              0      0       0       5        0.0%
   231 ;;SFR2                 0      0       0       5        0.0%
   232 ;;BITBANK1            50      0       0       6        0.0%
   233 ;;BANK1               50      0       0       7        0.0%
   234 ;;BITBANK3            60      0       0       8        0.0%
   235 ;;BANK3               60      0       0       9        0.0%
   236 ;;BITBANK2            60      0       0      10        0.0%
   237 ;;BANK2               60      0       0      11        0.0%
   238 ;;DATA                 0      0       0      12        0.0%
   239                           
   240                           	global	_main
   241                           psect	maintext,global,class=CODE,delta=2
   242                           global __pmaintext
   243  0746                     __pmaintext:
   244                           
   245 ;; *************** function _main *****************
   246 ;; Defined at:
   247 ;;		line 62 in file "D:\Embedded\pic\code\software\protocal\receive_data\Receive.c"
   248 ;; Parameters:    Size  Location     Type
   249 ;;		None
   250 ;; Auto vars:     Size  Location     Type
   251 ;;		None
   252 ;; Return value:  Size  Location     Type
   253 ;;		None               void
   254 ;; Registers used:
   255 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   256 ;; Tracked objects:
   257 ;;		On entry : 17F/0
   258 ;;		On exit  : 0/0
   259 ;;		Unchanged: 0/0
   260 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   261 ;;      Params:         0       0       0       0       0
   262 ;;      Locals:         0       0       0       0       0
   263 ;;      Temps:          1       0       0       0       0
   264 ;;      Totals:         1       0       0       0       0
   265 ;;Total ram usage:        1 bytes
   266 ;; Hardware stack levels required when called:    3
   267 ;; This function calls:
   268 ;;		_display
   269 ;;		_RC
   270 ;; This function is called by:
   271 ;;		Startup code after reset
   272 ;; This function uses a non-reentrant model
   273 ;;
   274                           psect	maintext
   275                           	file	"D:\Embedded\pic\code\software\protocal\receive_data\Receive.c"
   276                           	line	62
   277                           	global	__size_of_main
   278  004F                     	__size_of_main	equ	__end_of_main-_main
   279                           	
   280  0746                     _main:	
   281                           	opt	stack 5
   282                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   283                           	line	63
   284                           	
   285  0746                     l2231:	
   286                           ;Receive.c: 63: PORTC=0X00;
   287  0746  1283               	bcf	status, 5	;RP0=0, select bank0
   288  0747  1303               	bcf	status, 6	;RP1=0, select bank0
   289  0748  0187               	clrf	(7)	;volatile
   290                           	line	64
   291                           	
   292  0749                     l2233:	
   293                           ;Receive.c: 64: TRISC=0X80;
   294  0749  3080               	movlw	(080h)
   295  074A  1683               	bsf	status, 5	;RP0=1, select bank1
   296  074B  1303               	bcf	status, 6	;RP1=0, select bank1
   297  074C  0087               	movwf	(135)^080h	;volatile
   298                           	line	65
   299                           	
   300  074D                     l2235:	
   301                           ;Receive.c: 65: PORTD=0X00;
   302  074D  1283               	bcf	status, 5	;RP0=0, select bank0
   303  074E  1303               	bcf	status, 6	;RP1=0, select bank0
   304  074F  0188               	clrf	(8)	;volatile
   305                           	line	66
   306                           	
   307  0750                     l2237:	
   308                           ;Receive.c: 66: TRISD=0X00;
   309  0750  1683               	bsf	status, 5	;RP0=1, select bank1
   310  0751  1303               	bcf	status, 6	;RP1=0, select bank1
   311  0752  0188               	clrf	(136)^080h	;volatile
   312                           	line	67
   313                           	
   314  0753                     l2239:	
   315                           ;Receive.c: 67: PORTE=0X00;
   316  0753  1283               	bcf	status, 5	;RP0=0, select bank0
   317  0754  1303               	bcf	status, 6	;RP1=0, select bank0
   318  0755  0189               	clrf	(9)	;volatile
   319                           	line	68
   320                           	
   321  0756                     l2241:	
   322                           ;Receive.c: 68: TRISE=0X00;
   323  0756  1683               	bsf	status, 5	;RP0=1, select bank1
   324  0757  1303               	bcf	status, 6	;RP1=0, select bank1
   325  0758  0189               	clrf	(137)^080h	;volatile
   326                           	line	69
   327                           	
   328  0759                     l2243:	
   329                           ;Receive.c: 69: ANSEL=0X00;
   330  0759  1683               	bsf	status, 5	;RP0=1, select bank3
   331  075A  1703               	bsf	status, 6	;RP1=1, select bank3
   332  075B  0188               	clrf	(392)^0180h	;volatile
   333                           	line	70
   334                           	
   335  075C                     l2245:	
   336                           ;Receive.c: 70: ANSELH=0X00;
   337  075C  0189               	clrf	(393)^0180h	;volatile
   338                           	line	71
   339                           	
   340  075D                     l2247:	
   341                           ;Receive.c: 71: TXSTA=0X26;
   342  075D  3026               	movlw	(026h)
   343  075E  1683               	bsf	status, 5	;RP0=1, select bank1
   344  075F  1303               	bcf	status, 6	;RP1=0, select bank1
   345  0760  0098               	movwf	(152)^080h	;volatile
   346                           	line	72
   347                           	
   348  0761                     l2249:	
   349                           ;Receive.c: 72: RCSTA=0X90;
   350  0761  3090               	movlw	(090h)
   351  0762  1283               	bcf	status, 5	;RP0=0, select bank0
   352  0763  1303               	bcf	status, 6	;RP1=0, select bank0
   353  0764  0098               	movwf	(24)	;volatile
   354                           	line	73
   355                           	
   356  0765                     l2251:	
   357                           ;Receive.c: 73: SPBRG=25;
   358  0765  3019               	movlw	(019h)
   359  0766  1683               	bsf	status, 5	;RP0=1, select bank1
   360  0767  1303               	bcf	status, 6	;RP1=0, select bank1
   361  0768  0099               	movwf	(153)^080h	;volatile
   362                           	line	74
   363                           	
   364  0769                     l2253:	
   365                           ;Receive.c: 74: display(0,0,0X38);
   366  0769  01F2               	clrf	(?_display)
   367  076A  3038               	movlw	(038h)
   368  076B  00FC               	movwf	(??_main+0)+0
   369  076C  087C               	movf	(??_main+0)+0,w
   370  076D  00F3               	movwf	0+(?_display)+01h
   371  076E  3000               	movlw	(0)
   372  076F  120A  118A  2718   	fcall	_display
              120A  118A         
   373                           	line	75
   374                           	
   375  0774                     l2255:	
   376                           ;Receive.c: 75: display(0,0,0X0F);
   377  0774  01F2               	clrf	(?_display)
   378  0775  300F               	movlw	(0Fh)
   379  0776  00FC               	movwf	(??_main+0)+0
   380  0777  087C               	movf	(??_main+0)+0,w
   381  0778  00F3               	movwf	0+(?_display)+01h
   382  0779  3000               	movlw	(0)
   383  077A  120A  118A  2718   	fcall	_display
              120A  118A         
   384                           	line	76
   385                           	
   386  077F                     l2257:	
   387                           ;Receive.c: 76: display(0,0,0X80);
   388  077F  01F2               	clrf	(?_display)
   389  0780  3080               	movlw	(080h)
   390  0781  00FC               	movwf	(??_main+0)+0
   391  0782  087C               	movf	(??_main+0)+0,w
   392  0783  00F3               	movwf	0+(?_display)+01h
   393  0784  3000               	movlw	(0)
   394  0785  120A  118A  2718   	fcall	_display
              120A  118A         
   395  078A  2F8B               	goto	l2259
   396                           	line	77
   397                           ;Receive.c: 77: while(1)
   398                           	
   399  078B                     l1047:	
   400                           	line	79
   401                           	
   402  078B                     l2259:	
   403                           ;Receive.c: 78: {
   404                           ;Receive.c: 79: RC();
   405  078B  120A  118A  2795   	fcall	_RC
              120A  118A         
   406  0790  2F8B               	goto	l2259
   407                           	line	80
   408                           	
   409  0791                     l1048:	
   410                           	line	77
   411  0791  2F8B               	goto	l2259
   412                           	
   413  0792                     l1049:	
   414                           	line	81
   415                           	
   416  0792                     l1050:	
   417                           	global	start
   418  0792  120A  118A  2800   	ljmp	start
   419                           	opt stack 0
   420                           GLOBAL	__end_of_main
   421  0795                     	__end_of_main:
   422 ;; =============== function _main ends ============
   423                           
   424                           	signat	_main,88
   425                           	global	_RC
   426                           psect	text79,local,class=CODE,delta=2
   427                           global __ptext79
   428  0795                     __ptext79:
   429                           
   430 ;; *************** function _RC *****************
   431 ;; Defined at:
   432 ;;		line 31 in file "D:\Embedded\pic\code\software\protocal\receive_data\Receive.c"
   433 ;; Parameters:    Size  Location     Type
   434 ;;		None
   435 ;; Auto vars:     Size  Location     Type
   436 ;;  data            4    6[COMMON] unsigned char [4]
   437 ;;  i               2   10[COMMON] int 
   438 ;; Return value:  Size  Location     Type
   439 ;;                  2  1033[COMMON] int 
   440 ;; Registers used:
   441 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   442 ;; Tracked objects:
   443 ;;		On entry : 0/0
   444 ;;		On exit  : 0/0
   445 ;;		Unchanged: 0/0
   446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   447 ;;      Params:         0       0       0       0       0
   448 ;;      Locals:         6       0       0       0       0
   449 ;;      Temps:          1       0       0       0       0
   450 ;;      Totals:         7       0       0       0       0
   451 ;;Total ram usage:        7 bytes
   452 ;; Hardware stack levels used:    1
   453 ;; Hardware stack levels required when called:    2
   454 ;; This function calls:
   455 ;;		_display
   456 ;; This function is called by:
   457 ;;		_main
   458 ;; This function uses a non-reentrant model
   459 ;;
   460                           psect	text79
   461                           	file	"D:\Embedded\pic\code\software\protocal\receive_data\Receive.c"
   462                           	line	31
   463                           	global	__size_of_RC
   464  006B                     	__size_of_RC	equ	__end_of_RC-_RC
   465                           	
   466  0795                     _RC:	
   467                           	opt	stack 5
   468                           ; Regs used in _RC: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   469                           	line	32
   470                           	
   471  0795                     l2201:	
   472                           ;Receive.c: 32: int i=0;
   473  0795  01FA               	clrf	(RC@i)
   474  0796  01FB               	clrf	(RC@i+1)
   475                           	line	34
   476                           ;Receive.c: 33: char data[4];
   477                           ;Receive.c: 34: while(i<4)
   478  0797  2FBD               	goto	l2211
   479                           	
   480  0798                     l1035:	
   481                           	line	36
   482                           ;Receive.c: 35: {
   483                           ;Receive.c: 36: while(RCIF==0);
   484  0798  2F99               	goto	l1036
   485                           	
   486  0799                     l1037:	
   487                           	
   488  0799                     l1036:	
   489  0799  1283               	bcf	status, 5	;RP0=0, select bank0
   490  079A  1303               	bcf	status, 6	;RP1=0, select bank0
   491  079B  1E8C               	btfss	(101/8),(101)&7
   492  079C  2F9E               	goto	u2191
   493  079D  2F9F               	goto	u2190
   494  079E                     u2191:
   495  079E  2F99               	goto	l1036
   496  079F                     u2190:
   497  079F  2FA0               	goto	l2203
   498                           	
   499  07A0                     l1038:	
   500                           	line	37
   501                           	
   502  07A0                     l2203:	
   503                           ;Receive.c: 37: data[i]=RCREG;
   504  07A0  081A               	movf	(26),w	;volatile
   505  07A1  00F5               	movwf	(??_RC+0)+0
   506  07A2  087A               	movf	(RC@i),w
   507  07A3  3E76               	addlw	RC@data&0ffh
   508  07A4  0084               	movwf	fsr0
   509  07A5  0875               	movf	(??_RC+0)+0,w
   510  07A6  0080               	movwf	indf
   511                           	line	38
   512                           	
   513  07A7                     l2205:	
   514                           ;Receive.c: 38: RCIF=0;
   515  07A7  128C               	bcf	(101/8),(101)&7
   516                           	line	39
   517                           	
   518  07A8                     l2207:	
   519                           ;Receive.c: 39: display(1,0,data[i]);
   520  07A8  01F2               	clrf	(?_display)
   521  07A9  087A               	movf	(RC@i),w
   522  07AA  3E76               	addlw	RC@data&0ffh
   523  07AB  0084               	movwf	fsr0
   524  07AC  0800               	movf	indf,w
   525  07AD  00F5               	movwf	(??_RC+0)+0
   526  07AE  0875               	movf	(??_RC+0)+0,w
   527  07AF  00F3               	movwf	0+(?_display)+01h
   528  07B0  3001               	movlw	(01h)
   529  07B1  120A  118A  2718   	fcall	_display
              120A  118A         
   530                           	line	40
   531                           	
   532  07B6                     l2209:	
   533                           ;Receive.c: 40: i++;
   534  07B6  3001               	movlw	low(01h)
   535  07B7  07FA               	addwf	(RC@i),f
   536  07B8  1803               	skipnc
   537  07B9  0AFB               	incf	(RC@i+1),f
   538  07BA  3000               	movlw	high(01h)
   539  07BB  07FB               	addwf	(RC@i+1),f
   540  07BC  2FBD               	goto	l2211
   541                           	line	41
   542                           	
   543  07BD                     l1034:	
   544                           	line	34
   545                           	
   546  07BD                     l2211:	
   547  07BD  087B               	movf	(RC@i+1),w
   548  07BE  3A80               	xorlw	80h
   549  07BF  00FF               	movwf	btemp+1
   550  07C0  3080               	movlw	(high(04h))^80h
   551  07C1  027F               	subwf	btemp+1,w
   552  07C2  1D03               	skipz
   553  07C3  2FC6               	goto	u2205
   554  07C4  3004               	movlw	low(04h)
   555  07C5  027A               	subwf	(RC@i),w
   556  07C6                     u2205:
   557                           
   558  07C6  1C03               	skipc
   559  07C7  2FC9               	goto	u2201
   560  07C8  2FCA               	goto	u2200
   561  07C9                     u2201:
   562  07C9  2F99               	goto	l1036
   563  07CA                     u2200:
   564  07CA  2FCB               	goto	l2213
   565                           	
   566  07CB                     l1039:	
   567                           	line	42
   568                           	
   569  07CB                     l2213:	
   570                           ;Receive.c: 41: }
   571                           ;Receive.c: 42: if(data[0]=='O'&&data[1]=='N')
   572  07CB  0876               	movf	(RC@data),w
   573  07CC  3A4F               	xorlw	04Fh
   574  07CD  1D03               	skipz
   575  07CE  2FD0               	goto	u2211
   576  07CF  2FD1               	goto	u2210
   577  07D0                     u2211:
   578  07D0  2FE2               	goto	l2221
   579  07D1                     u2210:
   580                           	
   581  07D1                     l2215:	
   582  07D1  0877               	movf	0+(RC@data)+01h,w
   583  07D2  3A4E               	xorlw	04Eh
   584  07D3  1D03               	skipz
   585  07D4  2FD6               	goto	u2221
   586  07D5  2FD7               	goto	u2220
   587  07D6                     u2221:
   588  07D6  2FE2               	goto	l2221
   589  07D7                     u2220:
   590                           	line	44
   591                           	
   592  07D7                     l2217:	
   593                           ;Receive.c: 43: {
   594                           ;Receive.c: 44: if(data[2]==13)
   595  07D7  0878               	movf	0+(RC@data)+02h,w
   596  07D8  3A0D               	xorlw	0Dh
   597  07D9  1D03               	skipz
   598  07DA  2FDC               	goto	u2231
   599  07DB  2FDD               	goto	u2230
   600  07DC                     u2231:
   601  07DC  2FE2               	goto	l2221
   602  07DD                     u2230:
   603                           	line	46
   604                           	
   605  07DD                     l2219:	
   606                           ;Receive.c: 45: {
   607                           ;Receive.c: 46: RC1=1;
   608  07DD  1283               	bcf	status, 5	;RP0=0, select bank0
   609  07DE  1303               	bcf	status, 6	;RP1=0, select bank0
   610  07DF  1487               	bsf	(57/8),(57)&7
   611  07E0  2FE2               	goto	l2221
   612                           	line	48
   613                           	
   614  07E1                     l1041:	
   615  07E1  2FE2               	goto	l2221
   616                           	line	50
   617                           	
   618  07E2                     l1040:	
   619                           	line	51
   620                           	
   621  07E2                     l2221:	
   622                           ;Receive.c: 48: }
   623                           ;Receive.c: 50: }
   624                           ;Receive.c: 51: if(data[0]=='O'&&data[1]=='F'&&data[2]=='F')
   625  07E2  0876               	movf	(RC@data),w
   626  07E3  3A4F               	xorlw	04Fh
   627  07E4  1D03               	skipz
   628  07E5  2FE7               	goto	u2241
   629  07E6  2FE8               	goto	u2240
   630  07E7                     u2241:
   631  07E7  2FFF               	goto	l1044
   632  07E8                     u2240:
   633                           	
   634  07E8                     l2223:	
   635  07E8  0877               	movf	0+(RC@data)+01h,w
   636  07E9  3A46               	xorlw	046h
   637  07EA  1D03               	skipz
   638  07EB  2FED               	goto	u2251
   639  07EC  2FEE               	goto	u2250
   640  07ED                     u2251:
   641  07ED  2FFF               	goto	l1044
   642  07EE                     u2250:
   643                           	
   644  07EE                     l2225:	
   645  07EE  0878               	movf	0+(RC@data)+02h,w
   646  07EF  3A46               	xorlw	046h
   647  07F0  1D03               	skipz
   648  07F1  2FF3               	goto	u2261
   649  07F2  2FF4               	goto	u2260
   650  07F3                     u2261:
   651  07F3  2FFF               	goto	l1044
   652  07F4                     u2260:
   653                           	line	53
   654                           	
   655  07F4                     l2227:	
   656                           ;Receive.c: 52: {
   657                           ;Receive.c: 53: if(data[3]==13)
   658  07F4  0879               	movf	0+(RC@data)+03h,w
   659  07F5  3A0D               	xorlw	0Dh
   660  07F6  1D03               	skipz
   661  07F7  2FF9               	goto	u2271
   662  07F8  2FFA               	goto	u2270
   663  07F9                     u2271:
   664  07F9  2FFF               	goto	l1044
   665  07FA                     u2270:
   666                           	line	55
   667                           	
   668  07FA                     l2229:	
   669                           ;Receive.c: 54: {
   670                           ;Receive.c: 55: RC1=0;
   671  07FA  1283               	bcf	status, 5	;RP0=0, select bank0
   672  07FB  1303               	bcf	status, 6	;RP1=0, select bank0
   673  07FC  1087               	bcf	(57/8),(57)&7
   674  07FD  2FFF               	goto	l1044
   675                           	line	57
   676                           	
   677  07FE                     l1043:	
   678  07FE  2FFF               	goto	l1044
   679                           	line	59
   680                           	
   681  07FF                     l1042:	
   682                           	line	60
   683                           	
   684  07FF                     l1044:	
   685  07FF  0008               	return
   686                           	opt stack 0
   687                           GLOBAL	__end_of_RC
   688  0800                     	__end_of_RC:
   689 ;; =============== function _RC ends ============
   690                           
   691                           	signat	_RC,90
   692                           	global	_display
   693                           psect	text80,local,class=CODE,delta=2
   694                           global __ptext80
   695  0718                     __ptext80:
   696                           
   697 ;; *************** function _display *****************
   698 ;; Defined at:
   699 ;;		line 14 in file "D:\Embedded\pic\code\software\protocal\receive_data\Receive.c"
   700 ;; Parameters:    Size  Location     Type
   701 ;;  a               1    wreg     unsigned char 
   702 ;;  b               1    2[COMMON] unsigned char 
   703 ;;  c               1    3[COMMON] unsigned char 
   704 ;; Auto vars:     Size  Location     Type
   705 ;;  a               1    4[COMMON] unsigned char 
   706 ;; Return value:  Size  Location     Type
   707 ;;		None               void
   708 ;; Registers used:
   709 ;;		wreg, status,2, status,0, pclath, cstack
   710 ;; Tracked objects:
   711 ;;		On entry : 0/0
   712 ;;		On exit  : 0/0
   713 ;;		Unchanged: 0/0
   714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   715 ;;      Params:         2       0       0       0       0
   716 ;;      Locals:         1       0       0       0       0
   717 ;;      Temps:          0       0       0       0       0
   718 ;;      Totals:         3       0       0       0       0
   719 ;;Total ram usage:        3 bytes
   720 ;; Hardware stack levels used:    1
   721 ;; Hardware stack levels required when called:    1
   722 ;; This function calls:
   723 ;;		_delay
   724 ;; This function is called by:
   725 ;;		_RC
   726 ;;		_main
   727 ;; This function uses a non-reentrant model
   728 ;;
   729                           psect	text80
   730                           	file	"D:\Embedded\pic\code\software\protocal\receive_data\Receive.c"
   731                           	line	14
   732                           	global	__size_of_display
   733  002E                     	__size_of_display	equ	__end_of_display-_display
   734                           	
   735  0718                     _display:	
   736                           	opt	stack 5
   737                           ; Regs used in _display: [wreg+status,2+status,0+pclath+cstack]
   738                           ;display@a stored from wreg
   739  0718  00F4               	movwf	(display@a)
   740                           	line	15
   741                           	
   742  0719                     l2189:	
   743                           ;Receive.c: 15: RE0=a;
   744  0719  1874               	btfsc	(display@a),0
   745  071A  2F1C               	goto	u2151
   746  071B  2F20               	goto	u2150
   747                           	
   748  071C                     u2151:
   749  071C  1283               	bcf	status, 5	;RP0=0, select bank0
   750  071D  1303               	bcf	status, 6	;RP1=0, select bank0
   751  071E  1409               	bsf	(72/8),(72)&7
   752  071F  2F23               	goto	u2164
   753  0720                     u2150:
   754  0720  1283               	bcf	status, 5	;RP0=0, select bank0
   755  0721  1303               	bcf	status, 6	;RP1=0, select bank0
   756  0722  1009               	bcf	(72/8),(72)&7
   757  0723                     u2164:
   758                           	line	16
   759                           ;Receive.c: 16: RE1=b;
   760  0723  1872               	btfsc	(display@b),0
   761  0724  2F26               	goto	u2171
   762  0725  2F2A               	goto	u2170
   763                           	
   764  0726                     u2171:
   765  0726  1283               	bcf	status, 5	;RP0=0, select bank0
   766  0727  1303               	bcf	status, 6	;RP1=0, select bank0
   767  0728  1489               	bsf	(73/8),(73)&7
   768  0729  2F2D               	goto	u2184
   769  072A                     u2170:
   770  072A  1283               	bcf	status, 5	;RP0=0, select bank0
   771  072B  1303               	bcf	status, 6	;RP1=0, select bank0
   772  072C  1089               	bcf	(73/8),(73)&7
   773  072D                     u2184:
   774                           	line	17
   775                           	
   776  072D                     l2191:	
   777                           ;Receive.c: 17: PORTD=c;
   778  072D  0873               	movf	(display@c),w
   779  072E  0088               	movwf	(8)	;volatile
   780                           	line	18
   781                           	
   782  072F                     l2193:	
   783                           ;Receive.c: 18: RE2=1;
   784  072F  1509               	bsf	(74/8),(74)&7
   785                           	line	19
   786                           	
   787  0730                     l2195:	
   788                           ;Receive.c: 19: delay(2000);
   789  0730  30D0               	movlw	low(07D0h)
   790  0731  00F0               	movwf	(?_delay)
   791  0732  3007               	movlw	high(07D0h)
   792  0733  00F1               	movwf	((?_delay))+1
   793  0734  120A  118A  2704   	fcall	_delay
              120A  118A         
   794                           	line	20
   795                           	
   796  0739                     l2197:	
   797                           ;Receive.c: 20: RE2=0;
   798  0739  1283               	bcf	status, 5	;RP0=0, select bank0
   799  073A  1303               	bcf	status, 6	;RP1=0, select bank0
   800  073B  1109               	bcf	(74/8),(74)&7
   801                           	line	21
   802                           	
   803  073C                     l2199:	
   804                           ;Receive.c: 21: delay(2000);
   805  073C  30D0               	movlw	low(07D0h)
   806  073D  00F0               	movwf	(?_delay)
   807  073E  3007               	movlw	high(07D0h)
   808  073F  00F1               	movwf	((?_delay))+1
   809  0740  120A  118A  2704   	fcall	_delay
              120A  118A         
   810                           	line	22
   811                           	
   812  0745                     l1031:	
   813  0745  0008               	return
   814                           	opt stack 0
   815                           GLOBAL	__end_of_display
   816  0746                     	__end_of_display:
   817 ;; =============== function _display ends ============
   818                           
   819                           	signat	_display,12408
   820                           	global	_delay
   821                           psect	text81,local,class=CODE,delta=2
   822                           global __ptext81
   823  0704                     __ptext81:
   824                           
   825 ;; *************** function _delay *****************
   826 ;; Defined at:
   827 ;;		line 10 in file "D:\Embedded\pic\code\software\protocal\receive_data\Receive.c"
   828 ;; Parameters:    Size  Location     Type
   829 ;;  ms              2    0[COMMON] unsigned int 
   830 ;; Auto vars:     Size  Location     Type
   831 ;;		None
   832 ;; Return value:  Size  Location     Type
   833 ;;		None               void
   834 ;; Registers used:
   835 ;;		wreg
   836 ;; Tracked objects:
   837 ;;		On entry : 0/0
   838 ;;		On exit  : 0/0
   839 ;;		Unchanged: 0/0
   840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   841 ;;      Params:         2       0       0       0       0
   842 ;;      Locals:         0       0       0       0       0
   843 ;;      Temps:          0       0       0       0       0
   844 ;;      Totals:         2       0       0       0       0
   845 ;;Total ram usage:        2 bytes
   846 ;; Hardware stack levels used:    1
   847 ;; This function calls:
   848 ;;		Nothing
   849 ;; This function is called by:
   850 ;;		_display
   851 ;; This function uses a non-reentrant model
   852 ;;
   853                           psect	text81
   854                           	file	"D:\Embedded\pic\code\software\protocal\receive_data\Receive.c"
   855                           	line	10
   856                           	global	__size_of_delay
   857  0014                     	__size_of_delay	equ	__end_of_delay-_delay
   858                           	
   859  0704                     _delay:	
   860                           	opt	stack 5
   861                           ; Regs used in _delay: [wreg]
   862                           	line	11
   863                           	
   864  0704                     l1419:	
   865                           ;Receive.c: 11: while(ms--);
   866  0704  2F06               	goto	l1421
   867                           	
   868  0705                     l1026:	
   869  0705  2F06               	goto	l1421
   870                           	
   871  0706                     l1025:	
   872                           	
   873  0706                     l1421:	
   874  0706  3001               	movlw	low(01h)
   875  0707  02F0               	subwf	(delay@ms),f
   876  0708  3000               	movlw	high(01h)
   877  0709  1C03               	skipc
   878  070A  03F1               	decf	(delay@ms+1),f
   879  070B  02F1               	subwf	(delay@ms+1),f
   880  070C  30FF               	movlw	high(0FFFFh)
   881  070D  0671               	xorwf	((delay@ms+1)),w
   882  070E  1D03               	skipz
   883  070F  2F12               	goto	u15
   884  0710  30FF               	movlw	low(0FFFFh)
   885  0711  0670               	xorwf	((delay@ms)),w
   886  0712                     u15:
   887                           
   888  0712  1D03               	skipz
   889  0713  2F15               	goto	u11
   890  0714  2F16               	goto	u10
   891  0715                     u11:
   892  0715  2F06               	goto	l1421
   893  0716                     u10:
   894  0716  2F17               	goto	l1028
   895                           	
   896  0717                     l1027:	
   897                           	line	12
   898                           	
   899  0717                     l1028:	
   900  0717  0008               	return
   901                           	opt stack 0
   902                           GLOBAL	__end_of_delay
   903  0718                     	__end_of_delay:
   904 ;; =============== function _delay ends ============
   905                           
   906                           	signat	_delay,4216
   907                           psect	text82,local,class=CODE,delta=2
   908                           global __ptext82
   909  0000                     __ptext82:
   910                           	global	btemp
   911  007E                     	btemp set 07Eh
   912                           
   913                           	DABS	1,126,2	;btemp
   914                           	global	wtemp0
   915  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.81 build 7503 
Symbol Table                                                                                   Wed Jun 01 22:43:11 2022

                  _RC 0795                    u10 0716                    u11 0715                    u15 0712  
                 ?_RC 0070                   RC@i 007A                   _RC1 0039                   _RE0 0048  
                 _RE1 0049                   _RE2 004A                   fsr0 0004                   indf 0000  
                ??_RC 0075                  l1031 0745                  l1040 07E2                  l1025 0706  
                l1041 07E1                  l1026 0705                  l1042 07FF                  l1034 07BD  
                l1050 0792                  l1027 0717                  l1043 07FE                  l1035 0798  
                l1028 0717                  l1044 07FF                  l1036 0799                  l1037 0799  
                l1038 07A0                  l1039 07CB                  l1047 078B                  l1048 0791  
                l2201 0795                  l1049 0792                  l2203 07A0                  l2211 07BD  
                l1421 0706                  l2221 07E2                  l2213 07CB                  l2205 07A7  
                l2223 07E8                  l2215 07D1                  l2207 07A8                  l2231 0746  
                l2225 07EE                  l2217 07D7                  l2209 07B6                  l2241 0756  
                l2233 0749                  l1419 0704                  l2227 07F4                  l2219 07DD  
                l2251 0765                  l2243 0759                  l2235 074D                  l2229 07FA  
                l2253 0769                  l2245 075C                  l2237 0750                  l2191 072D  
                l2255 0774                  l2247 075D                  l2239 0753                  l2193 072F  
                l2257 077F                  l2249 0761                  l2195 0730                  l2259 078B  
                l2197 0739                  l2189 0719                  l2199 073C                  u2200 07CA  
                u2201 07C9                  u2210 07D1                  u2211 07D0                  u2220 07D7  
                u2221 07D6                  u2205 07C6                  u2150 0720                  u2230 07DD  
                u2151 071C                  u2231 07DC                  u2240 07E8                  u2241 07E7  
                u2170 072A                  u2250 07EE                  u2171 0726                  u2251 07ED  
                u2164 0723                  u2260 07F4                  u2261 07F3                  u2270 07FA  
                u2190 079F                  u2271 07F9                  u2191 079E                  u2184 072D  
                _RCIF 0065                  _main 0746                  btemp 007E                  start 0000  
               ?_main 0070                 _ANSEL 0188                 _RCREG 001A                 _RCSTA 0018  
               _SPBRG 0099                 _PORTC 0007                 _PORTD 0008                 _PORTE 0009  
               _TRISC 0087                 _TRISD 0088                 _TRISE 0089                 _TXSTA 0098  
     __end_of_display 0746                 _delay 0704                 status 0003                 wtemp0 007E  
        __end_of_main 0795                ??_main 007C                RC@data 0076                ?_delay 0070  
              _ANSELH 0189             ??_display 0074        __pcstackCOMMON 0070         __end_of_delay 0718  
          __end_of_RC 0800               ??_delay 0072            __pmaintext 0746               _display 0718  
             delay@ms 0070  end_of_initialization 0700   start_initialization 0700              ?_display 0072  
      __size_of_delay 0014           __size_of_RC 006B      __size_of_display 002E              __ptext80 0718  
            __ptext81 0704              __ptext82 0000              __ptext78 0000              __ptext79 0795  
       __size_of_main 004F              display@a 0074              display@b 0072              display@c 0073  
