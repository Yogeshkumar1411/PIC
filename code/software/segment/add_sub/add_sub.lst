

HI-TECH Software PIC LITE Macro Assembler V9.81 build 7503 
                                                                                               Wed Mar 16 01:50:45 2022

HI-TECH Software Omniscient Code Generator (Lite mode) build 7503
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 7503"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F887
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           	FNCALL	_main,_div
    43                           	FNCALL	_main,_mod
    44                           	FNCALL	_main,_delay
    45                           	FNCALL	_mod,___awmod
    46                           	FNCALL	_div,___awdiv
    47                           	FNROOT	_main
    48                           	global	main@F1614
    49                           psect	idataBANK0,class=CODE,space=0,delta=2
    50                           global __pidataBANK0
    51  0598                     __pidataBANK0:
    52                           	file	"D:\Embedded\pic\code\software\segment\add_sub\add_sub.c"
    53                           	line	31
    54                           
    55                           ;initializer for main@F1614
    56  0598  343F               	retlw	03Fh
    57  0599  3406               	retlw	06h
    58  059A  345B               	retlw	05Bh
    59  059B  344F               	retlw	04Fh
    60  059C  3466               	retlw	066h
    61  059D  346D               	retlw	06Dh
    62  059E  347D               	retlw	07Dh
    63  059F  3407               	retlw	07h
    64  05A0  347F               	retlw	07Fh
    65  05A1  346F               	retlw	06Fh
    66  05A2  3400               	retlw	0
    67  05A3  3400               	retlw	0
    68  05A4  3400               	retlw	0
    69  05A5  3400               	retlw	0
    70  05A6  3400               	retlw	0
    71  05A7  3400               	retlw	0
    72  05A8  3400               	retlw	0
    73  05A9  3400               	retlw	0
    74  05AA  3400               	retlw	0
    75  05AB  3400               	retlw	0
    76                           	global	_PORTA
    77  0005                     _PORTA	set	5
    78                           	global	_PORTC
    79  0007                     _PORTC	set	7
    80                           	global	_PORTD
    81  0008                     _PORTD	set	8
    82                           	global	_RA0
    83  0028                     _RA0	set	40
    84                           	global	_RA1
    85  0029                     _RA1	set	41
    86                           	global	_RA2
    87  002A                     _RA2	set	42
    88                           	global	_RA3
    89  002B                     _RA3	set	43
    90                           	global	_RA4
    91  002C                     _RA4	set	44
    92                           	global	_RD0
    93  0040                     _RD0	set	64
    94                           	global	_RD1
    95  0041                     _RD1	set	65
    96                           	global	_TRISA
    97  0085                     _TRISA	set	133
    98                           	global	_TRISC
    99  0087                     _TRISC	set	135
   100                           	global	_TRISD
   101  0088                     _TRISD	set	136
   102                           	global	_ANSEL
   103  0188                     _ANSEL	set	392
   104                           	global	_ANSELH
   105  0189                     _ANSELH	set	393
   106                           	file	"add_sub.as"
   107                           	line	#
   108                           psect cinit,class=CODE,delta=2
   109                           global start_initialization
   110  0572                     start_initialization:
   111                           
   112                           psect	dataBANK0,class=BANK0,space=1
   113                           global __pdataBANK0
   114  0044                     __pdataBANK0:
   115                           	file	"D:\Embedded\pic\code\software\segment\add_sub\add_sub.c"
   116  0044                     main@F1614:
   117  0044                            ds      20
   118                           
   119                           global btemp
   120                           psect inittext,class=CODE,delta=2
   121                           global init_fetch,btemp
   122                           ;	Called with low address in FSR and high address in W
   123  0561                     init_fetch:
   124  0561  087E               	movf btemp,w
   125  0562  008A               	movwf pclath
   126  0563  087F               	movf btemp+1,w
   127  0564  0082               	movwf pc
   128                           global init_ram
   129                           ;Called with:
   130                           ;	high address of idata address in btemp 
   131                           ;	low address of idata address in btemp+1 
   132                           ;	low address of data in FSR
   133                           ;	high address + 1 of data in btemp-1
   134  0565                     init_ram:
   135  0565  2561  120A  118A   	fcall init_fetch
   136  0568  0080               	movwf indf,f
   137  0569  0A84               	incf fsr,f
   138  056A  0804               	movf fsr,w
   139  056B  067D               	xorwf btemp-1,w
   140  056C  1903               	btfsc status,2
   141  056D  3400               	retlw 0
   142  056E  0AFF               	incf btemp+1,f
   143  056F  1903               	btfsc status,2
   144  0570  0AFE               	incf btemp,f
   145  0571  2D65               	goto init_ram
   146                           ; Initialize objects allocated to BANK0
   147                           psect cinit,class=CODE,delta=2
   148                           global init_ram, __pidataBANK0
   149  0572  1383               	bcf	status, 7	;select IRP bank0
   150  0573  3058               	movlw low(__pdataBANK0+20)
   151  0574  00FD               	movwf btemp-1,f
   152  0575  3005               	movlw high(__pidataBANK0)
   153  0576  00FE               	movwf btemp,f
   154  0577  3098               	movlw low(__pidataBANK0)
   155  0578  00FF               	movwf btemp+1,f
   156  0579  3044               	movlw low(__pdataBANK0)
   157  057A  0084               	movwf fsr,f
   158  057B  120A  118A  2565   	fcall init_ram
              120A  118A         
   159                           psect cinit,class=CODE,delta=2
   160                           global end_of_initialization
   161                           
   162                           ;End of C runtime variable initialization code
   163                           
   164  0580                     end_of_initialization:
   165  0580  0183               clrf status
   166  0581  120A  118A  2EC0   ljmp _main	;jump to C main() function
   167                           psect	cstackCOMMON,class=COMMON,space=1
   168                           global __pcstackCOMMON
   169  0070                     __pcstackCOMMON:
   170                           	global	?_delay
   171  0070                     ?_delay:	; 0 bytes @ 0x0
   172                           	global	?_main
   173  0070                     ?_main:	; 0 bytes @ 0x0
   174                           	global	?___awdiv
   175  0070                     ?___awdiv:	; 2 bytes @ 0x0
   176                           	global	?___awmod
   177  0070                     ?___awmod:	; 2 bytes @ 0x0
   178                           	global	delay@a
   179  0070                     delay@a:	; 2 bytes @ 0x0
   180                           	global	___awdiv@divisor
   181  0070                     ___awdiv@divisor:	; 2 bytes @ 0x0
   182                           	global	___awmod@divisor
   183  0070                     ___awmod@divisor:	; 2 bytes @ 0x0
   184  0070                     	ds	2
   185                           	global	??_delay
   186  0072                     ??_delay:	; 0 bytes @ 0x2
   187                           	global	___awdiv@dividend
   188  0072                     ___awdiv@dividend:	; 2 bytes @ 0x2
   189                           	global	___awmod@dividend
   190  0072                     ___awmod@dividend:	; 2 bytes @ 0x2
   191  0072                     	ds	2
   192                           	global	??___awdiv
   193  0074                     ??___awdiv:	; 0 bytes @ 0x4
   194                           	global	??___awmod
   195  0074                     ??___awmod:	; 0 bytes @ 0x4
   196  0074                     	ds	1
   197                           	global	___awdiv@counter
   198  0075                     ___awdiv@counter:	; 1 bytes @ 0x5
   199                           	global	___awmod@counter
   200  0075                     ___awmod@counter:	; 1 bytes @ 0x5
   201  0075                     	ds	1
   202                           	global	___awdiv@sign
   203  0076                     ___awdiv@sign:	; 1 bytes @ 0x6
   204                           	global	___awmod@sign
   205  0076                     ___awmod@sign:	; 1 bytes @ 0x6
   206  0076                     	ds	1
   207                           	global	?_mod
   208  0077                     ?_mod:	; 2 bytes @ 0x7
   209                           	global	mod@y
   210  0077                     mod@y:	; 2 bytes @ 0x7
   211                           	global	___awdiv@quotient
   212  0077                     ___awdiv@quotient:	; 2 bytes @ 0x7
   213  0077                     	ds	2
   214                           	global	??_mod
   215  0079                     ??_mod:	; 0 bytes @ 0x9
   216                           	global	?_div
   217  0079                     ?_div:	; 2 bytes @ 0x9
   218                           	global	div@x
   219  0079                     div@x:	; 2 bytes @ 0x9
   220                           	global	mod@n
   221  0079                     mod@n:	; 2 bytes @ 0x9
   222  0079                     	ds	2
   223                           	global	??_div
   224  007B                     ??_div:	; 0 bytes @ 0xB
   225                           	global	div@m
   226  007B                     div@m:	; 2 bytes @ 0xB
   227  007B                     	ds	2
   228                           psect	cstackBANK0,class=BANK0,space=1
   229                           global __pcstackBANK0
   230  0020                     __pcstackBANK0:
   231                           	global	??_main
   232  0020                     ??_main:	; 0 bytes @ 0x0
   233  0020                     	ds	4
   234                           	global	main@seg
   235  0024                     main@seg:	; 20 bytes @ 0x4
   236  0024                     	ds	20
   237                           	global	main@count1
   238  0038                     main@count1:	; 2 bytes @ 0x18
   239  0038                     	ds	2
   240                           	global	main@m1
   241  003A                     main@m1:	; 2 bytes @ 0x1A
   242  003A                     	ds	2
   243                           	global	main@n1
   244  003C                     main@n1:	; 2 bytes @ 0x1C
   245  003C                     	ds	2
   246                           	global	main@count
   247  003E                     main@count:	; 2 bytes @ 0x1E
   248  003E                     	ds	2
   249                           	global	main@i
   250  0040                     main@i:	; 2 bytes @ 0x20
   251  0040                     	ds	2
   252                           	global	main@j
   253  0042                     main@j:	; 2 bytes @ 0x22
   254  0042                     	ds	2
   255 ;;Data sizes: Strings 0, constant 0, data 20, bss 0, persistent 0 stack 0
   256 ;;Auto spaces:   Size  Autos    Used
   257 ;; COMMON          14     13      13
   258 ;; BANK0           80     36      56
   259 ;; BANK1           80      0       0
   260 ;; BANK3           96      0       0
   261 ;; BANK2           96      0       0
   262                           
   263 ;;
   264 ;; Pointer list with targets:
   265                           
   266 ;; ?_mod	int  size(1) Largest target is 0
   267 ;;
   268 ;; ?___awmod	int  size(1) Largest target is 0
   269 ;;
   270 ;; ?_div	int  size(1) Largest target is 0
   271 ;;
   272 ;; ?___awdiv	int  size(1) Largest target is 0
   273 ;;
   274                           
   275                           
   276 ;;
   277 ;; Critical Paths under _main in COMMON
   278 ;;
   279 ;;   _main->_div
   280 ;;   _mod->___awmod
   281 ;;   _div->___awdiv
   282 ;;
   283 ;; Critical Paths under _main in BANK0
   284 ;;
   285 ;;   None.
   286 ;;
   287 ;; Critical Paths under _main in BANK1
   288 ;;
   289 ;;   None.
   290 ;;
   291 ;; Critical Paths under _main in BANK3
   292 ;;
   293 ;;   None.
   294 ;;
   295 ;; Critical Paths under _main in BANK2
   296 ;;
   297 ;;   None.
   298                           
   299 ;;
   300 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   301 ;;
   302                           
   303 ;;
   304 ;;Call Graph Tables:
   305 ;;
   306 ;; ---------------------------------------------------------------------------------
   307 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   308 ;; ---------------------------------------------------------------------------------
   309 ;; (0) _main                                                36    36      0    1124
   310 ;;                                              0 BANK0     36    36      0
   311 ;;                                _div
   312 ;;                                _mod
   313 ;;                              _delay
   314 ;; ---------------------------------------------------------------------------------
   315 ;; (1) _mod                                                  4     2      2     341
   316 ;;                                              7 COMMON     4     2      2
   317 ;;                            ___awmod
   318 ;; ---------------------------------------------------------------------------------
   319 ;; (1) _div                                                  4     2      2     345
   320 ;;                                              9 COMMON     4     2      2
   321 ;;                            ___awdiv
   322 ;; ---------------------------------------------------------------------------------
   323 ;; (2) ___awmod                                              7     3      4     296
   324 ;;                                              0 COMMON     7     3      4
   325 ;; ---------------------------------------------------------------------------------
   326 ;; (2) ___awdiv                                              9     5      4     300
   327 ;;                                              0 COMMON     9     5      4
   328 ;; ---------------------------------------------------------------------------------
   329 ;; (1) _delay                                                2     0      2      22
   330 ;;                                              0 COMMON     2     0      2
   331 ;; ---------------------------------------------------------------------------------
   332 ;; Estimated maximum stack depth 2
   333 ;; ---------------------------------------------------------------------------------
   334                           
   335 ;; Call Graph Graphs:
   336                           
   337 ;; _main (ROOT)
   338 ;;   _div
   339 ;;     ___awdiv
   340 ;;   _mod
   341 ;;     ___awmod
   342 ;;   _delay
   343 ;;
   344                           
   345 ;; Address spaces:
   346                           
   347 ;;Name               Size   Autos  Total    Cost      Usage
   348 ;;BANK3               60      0       0       9        0.0%
   349 ;;BITBANK3            60      0       0       8        0.0%
   350 ;;SFR3                 0      0       0       4        0.0%
   351 ;;BITSFR3              0      0       0       4        0.0%
   352 ;;BANK2               60      0       0      11        0.0%
   353 ;;BITBANK2            60      0       0      10        0.0%
   354 ;;SFR2                 0      0       0       5        0.0%
   355 ;;BITSFR2              0      0       0       5        0.0%
   356 ;;SFR1                 0      0       0       2        0.0%
   357 ;;BITSFR1              0      0       0       2        0.0%
   358 ;;BANK1               50      0       0       7        0.0%
   359 ;;BITBANK1            50      0       0       6        0.0%
   360 ;;CODE                 0      0       0       0        0.0%
   361 ;;DATA                 0      0      47      12        0.0%
   362 ;;ABS                  0      0      45       3        0.0%
   363 ;;NULL                 0      0       0       0        0.0%
   364 ;;STACK                0      0       2       2        0.0%
   365 ;;BANK0               50     24      38       5       70.0%
   366 ;;BITBANK0            50      0       0       4        0.0%
   367 ;;SFR0                 0      0       0       1        0.0%
   368 ;;BITSFR0              0      0       0       1        0.0%
   369 ;;COMMON               E      D       D       1       92.9%
   370 ;;BITCOMMON            E      0       0       0        0.0%
   371 ;;EEDATA             100      0       0       0        0.0%
   372                           
   373                           	global	_main
   374                           psect	maintext,global,class=CODE,delta=2
   375                           global __pmaintext
   376  06C0                     __pmaintext:
   377                           
   378 ;; *************** function _main *****************
   379 ;; Defined at:
   380 ;;		line 29 in file "D:\Embedded\pic\code\software\segment\add_sub\add_sub.c"
   381 ;; Parameters:    Size  Location     Type
   382 ;;		None
   383 ;; Auto vars:     Size  Location     Type
   384 ;;  seg            20    4[BANK0 ] unsigned char [20]
   385 ;;  j               2   34[BANK0 ] int 
   386 ;;  i               2   32[BANK0 ] int 
   387 ;;  count           2   30[BANK0 ] int 
   388 ;;  n1              2   28[BANK0 ] int 
   389 ;;  m1              2   26[BANK0 ] int 
   390 ;;  count1          2   24[BANK0 ] int 
   391 ;; Return value:  Size  Location     Type
   392 ;;		None               void
   393 ;; Registers used:
   394 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   395 ;; Tracked objects:
   396 ;;		On entry : 17F/0
   397 ;;		On exit  : 0/0
   398 ;;		Unchanged: 0/0
   399 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   400 ;;      Params:         0       0       0       0       0
   401 ;;      Locals:         0      32       0       0       0
   402 ;;      Temps:          0       4       0       0       0
   403 ;;      Totals:         0      36       0       0       0
   404 ;;Total ram usage:       36 bytes
   405 ;; Hardware stack levels required when called:    2
   406 ;; This function calls:
   407 ;;		_div
   408 ;;		_mod
   409 ;;		_delay
   410 ;; This function is called by:
   411 ;;		Startup code after reset
   412 ;; This function uses a non-reentrant model
   413 ;;
   414                           psect	maintext
   415                           	file	"D:\Embedded\pic\code\software\segment\add_sub\add_sub.c"
   416                           	line	29
   417                           	global	__size_of_main
   418  0140                     	__size_of_main	equ	__end_of_main-_main
   419                           	
   420  06C0                     _main:	
   421                           	opt	stack 6
   422                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   423                           	line	30
   424                           	
   425  06C0                     l2403:	
   426                           ;add_sub.c: 30: int i=0,j=0,count=0,count1=0,m1,n1;
   427  06C0  1283               	bcf	status, 5	;RP0=0, select bank0
   428  06C1  1303               	bcf	status, 6	;RP1=0, select bank0
   429  06C2  01C0               	clrf	(main@i)
   430  06C3  01C1               	clrf	(main@i+1)
   431  06C4  01C2               	clrf	(main@j)
   432  06C5  01C3               	clrf	(main@j+1)
   433  06C6  01BE               	clrf	(main@count)
   434  06C7  01BF               	clrf	(main@count+1)
   435  06C8  01B8               	clrf	(main@count1)
   436  06C9  01B9               	clrf	(main@count1+1)
   437                           	line	31
   438                           	
   439  06CA                     l2405:	
   440                           ;add_sub.c: 31: char seg[20]={0X3F,0X06,0X5B,0X4F,0X66,0X6D,0X7D,0X07,0X7F,0X6F};
   441  06CA  3024               	movlw	(main@seg)&0ffh
   442  06CB  0084               	movwf	fsr0
   443  06CC  3044               	movlw	low(main@F1614)
   444  06CD  00A0               	movwf	(??_main+0)+0
   445  06CE  0804               	movf	fsr0,w
   446  06CF  00A1               	movwf	((??_main+0)+0+1)
   447  06D0  3014               	movlw	20
   448  06D1  00A2               	movwf	((??_main+0)+0+2)
   449  06D2                     u2460:
   450  06D2  0820               	movf	(??_main+0)+0,w
   451  06D3  0084               	movwf	fsr0
   452  06D4  1383               	bcf	status, 7	;select IRP bank0
   453                           	
   454  06D5  0800               	movf	indf,w
   455  06D6  00A3               	movwf	((??_main+0)+0+3)
   456  06D7  0AA0               	incf	(??_main+0)+0,f
   457  06D8  0821               	movf	((??_main+0)+0+1),w
   458  06D9  0084               	movwf	fsr0
   459                           	
   460  06DA  0823               	movf	((??_main+0)+0+3),w
   461  06DB  0080               	movwf	indf
   462  06DC  0AA1               	incf	((??_main+0)+0+1),f
   463  06DD  0BA2               	decfsz	((??_main+0)+0+2),f
   464  06DE  2ED2               	goto	u2460
   465                           	line	32
   466                           	
   467  06DF                     l2407:	
   468                           ;add_sub.c: 32: PORTC=0X00;
   469  06DF  0187               	clrf	(7)	;volatile
   470                           	line	33
   471                           	
   472  06E0                     l2409:	
   473                           ;add_sub.c: 33: TRISC=0X00;
   474  06E0  1683               	bsf	status, 5	;RP0=1, select bank1
   475  06E1  1303               	bcf	status, 6	;RP1=0, select bank1
   476  06E2  0187               	clrf	(135)^080h	;volatile
   477                           	line	34
   478                           	
   479  06E3                     l2411:	
   480                           ;add_sub.c: 34: PORTD=0X00;
   481  06E3  1283               	bcf	status, 5	;RP0=0, select bank0
   482  06E4  1303               	bcf	status, 6	;RP1=0, select bank0
   483  06E5  0188               	clrf	(8)	;volatile
   484                           	line	35
   485                           	
   486  06E6                     l2413:	
   487                           ;add_sub.c: 35: TRISD=0X00;
   488  06E6  1683               	bsf	status, 5	;RP0=1, select bank1
   489  06E7  1303               	bcf	status, 6	;RP1=0, select bank1
   490  06E8  0188               	clrf	(136)^080h	;volatile
   491                           	line	36
   492                           	
   493  06E9                     l2415:	
   494                           ;add_sub.c: 36: TRISA=0X1F;
   495  06E9  301F               	movlw	(01Fh)
   496  06EA  0085               	movwf	(133)^080h	;volatile
   497                           	line	37
   498                           	
   499  06EB                     l2417:	
   500                           ;add_sub.c: 37: PORTA=0X00;
   501  06EB  1283               	bcf	status, 5	;RP0=0, select bank0
   502  06EC  1303               	bcf	status, 6	;RP1=0, select bank0
   503  06ED  0185               	clrf	(5)	;volatile
   504                           	line	38
   505                           	
   506  06EE                     l2419:	
   507                           ;add_sub.c: 38: ANSEL=0X00;
   508  06EE  1683               	bsf	status, 5	;RP0=1, select bank3
   509  06EF  1703               	bsf	status, 6	;RP1=1, select bank3
   510  06F0  0188               	clrf	(392)^0180h	;volatile
   511                           	line	39
   512                           	
   513  06F1                     l2421:	
   514                           ;add_sub.c: 39: ANSELH=0X00;
   515  06F1  0189               	clrf	(393)^0180h	;volatile
   516  06F2  2EF3               	goto	l2423
   517                           	line	40
   518                           ;add_sub.c: 40: while(1)
   519                           	
   520  06F3                     l1039:	
   521                           	line	42
   522                           	
   523  06F3                     l2423:	
   524                           ;add_sub.c: 41: {
   525                           ;add_sub.c: 42: if(RA0==1)
   526  06F3  1283               	bcf	status, 5	;RP0=0, select bank0
   527  06F4  1303               	bcf	status, 6	;RP1=0, select bank0
   528  06F5  1C05               	btfss	(40/8),(40)&7
   529  06F6  2EF8               	goto	u2471
   530  06F7  2EF9               	goto	u2470
   531  06F8                     u2471:
   532  06F8  2F0D               	goto	l1040
   533  06F9                     u2470:
   534                           	line	44
   535                           	
   536  06F9                     l2425:	
   537                           ;add_sub.c: 43: {
   538                           ;add_sub.c: 44: i+=i+1;
   539  06F9  0840               	movf	(main@i),w
   540  06FA  3E01               	addlw	low(01h)
   541  06FB  00A0               	movwf	(??_main+0)+0
   542  06FC  0841               	movf	(main@i+1),w
   543  06FD  1803               	skipnc
   544  06FE  3E01               	addlw	1
   545  06FF  3E00               	addlw	high(01h)
   546  0700  00A1               	movwf	1+(??_main+0)+0
   547  0701  0820               	movf	(??_main+0)+0,w
   548  0702  07C0               	addwf	(main@i),f
   549  0703  1803               	skipnc
   550  0704  0AC1               	incf	(main@i+1),f
   551  0705  0821               	movf	(??_main+0)+1,w
   552  0706  07C1               	addwf	(main@i+1),f
   553                           	line	45
   554                           ;add_sub.c: 45: while(RA0==1);
   555  0707  2F08               	goto	l1041
   556                           	
   557  0708                     l1042:	
   558                           	
   559  0708                     l1041:	
   560  0708  1805               	btfsc	(40/8),(40)&7
   561  0709  2F0B               	goto	u2481
   562  070A  2F0C               	goto	u2480
   563  070B                     u2481:
   564  070B  2F08               	goto	l1041
   565  070C                     u2480:
   566  070C  2F0D               	goto	l1040
   567                           	
   568  070D                     l1043:	
   569                           	line	46
   570                           	
   571  070D                     l1040:	
   572                           	line	47
   573                           ;add_sub.c: 46: }
   574                           ;add_sub.c: 47: if(RA1==1)
   575  070D  1C85               	btfss	(41/8),(41)&7
   576  070E  2F10               	goto	u2491
   577  070F  2F11               	goto	u2490
   578  0710                     u2491:
   579  0710  2F25               	goto	l1044
   580  0711                     u2490:
   581                           	line	49
   582                           	
   583  0711                     l2427:	
   584                           ;add_sub.c: 48: {
   585                           ;add_sub.c: 49: j+=j+1;
   586  0711  0842               	movf	(main@j),w
   587  0712  3E01               	addlw	low(01h)
   588  0713  00A0               	movwf	(??_main+0)+0
   589  0714  0843               	movf	(main@j+1),w
   590  0715  1803               	skipnc
   591  0716  3E01               	addlw	1
   592  0717  3E00               	addlw	high(01h)
   593  0718  00A1               	movwf	1+(??_main+0)+0
   594  0719  0820               	movf	(??_main+0)+0,w
   595  071A  07C2               	addwf	(main@j),f
   596  071B  1803               	skipnc
   597  071C  0AC3               	incf	(main@j+1),f
   598  071D  0821               	movf	(??_main+0)+1,w
   599  071E  07C3               	addwf	(main@j+1),f
   600                           	line	50
   601                           ;add_sub.c: 50: while(RA1==1);
   602  071F  2F20               	goto	l1045
   603                           	
   604  0720                     l1046:	
   605                           	
   606  0720                     l1045:	
   607  0720  1885               	btfsc	(41/8),(41)&7
   608  0721  2F23               	goto	u2501
   609  0722  2F24               	goto	u2500
   610  0723                     u2501:
   611  0723  2F20               	goto	l1045
   612  0724                     u2500:
   613  0724  2F25               	goto	l1044
   614                           	
   615  0725                     l1047:	
   616                           	line	51
   617                           	
   618  0725                     l1044:	
   619                           	line	52
   620                           ;add_sub.c: 51: }
   621                           ;add_sub.c: 52: if(RA2==1)
   622  0725  1D05               	btfss	(42/8),(42)&7
   623  0726  2F28               	goto	u2511
   624  0727  2F29               	goto	u2510
   625  0728                     u2511:
   626  0728  2F5E               	goto	l2433
   627  0729                     u2510:
   628                           	line	55
   629                           	
   630  0729                     l2429:	
   631                           ;add_sub.c: 53: {
   632                           ;add_sub.c: 55: count=i+j;
   633  0729  0842               	movf	(main@j),w
   634  072A  0740               	addwf	(main@i),w
   635  072B  00BE               	movwf	(main@count)
   636  072C  0843               	movf	(main@j+1),w
   637  072D  1803               	skipnc
   638  072E  0A43               	incf	(main@j+1),w
   639  072F  0741               	addwf	(main@i+1),w
   640  0730  00BF               	movwf	1+(main@count)
   641                           	line	56
   642                           ;add_sub.c: 56: while(RA2==1);
   643  0731  2F32               	goto	l1049
   644                           	
   645  0732                     l1050:	
   646                           	
   647  0732                     l1049:	
   648  0732  1905               	btfsc	(42/8),(42)&7
   649  0733  2F35               	goto	u2521
   650  0734  2F36               	goto	u2520
   651  0735                     u2521:
   652  0735  2F32               	goto	l1049
   653  0736                     u2520:
   654  0736  2F37               	goto	l2431
   655                           	
   656  0737                     l1051:	
   657                           	line	58
   658                           	
   659  0737                     l2431:	
   660                           ;add_sub.c: 58: m1=div(count);
   661  0737  083F               	movf	(main@count+1),w
   662  0738  01FA               	clrf	(?_div+1)
   663  0739  07FA               	addwf	(?_div+1)
   664  073A  083E               	movf	(main@count),w
   665  073B  01F9               	clrf	(?_div)
   666  073C  07F9               	addwf	(?_div)
   667                           
   668  073D  120A  118A  25AC   	fcall	_div
              120A  118A         
   669  0742  087A               	movf	(1+(?_div)),w
   670  0743  1283               	bcf	status, 5	;RP0=0, select bank0
   671  0744  1303               	bcf	status, 6	;RP1=0, select bank0
   672  0745  01BB               	clrf	(main@m1+1)
   673  0746  07BB               	addwf	(main@m1+1)
   674  0747  0879               	movf	(0+(?_div)),w
   675  0748  01BA               	clrf	(main@m1)
   676  0749  07BA               	addwf	(main@m1)
   677                           
   678                           	line	59
   679                           ;add_sub.c: 59: n1=mod(count);
   680  074A  083F               	movf	(main@count+1),w
   681  074B  01F8               	clrf	(?_mod+1)
   682  074C  07F8               	addwf	(?_mod+1)
   683  074D  083E               	movf	(main@count),w
   684  074E  01F7               	clrf	(?_mod)
   685  074F  07F7               	addwf	(?_mod)
   686                           
   687  0750  120A  118A  25C9   	fcall	_mod
              120A  118A         
   688  0755  0878               	movf	(1+(?_mod)),w
   689  0756  1283               	bcf	status, 5	;RP0=0, select bank0
   690  0757  1303               	bcf	status, 6	;RP1=0, select bank0
   691  0758  01BD               	clrf	(main@n1+1)
   692  0759  07BD               	addwf	(main@n1+1)
   693  075A  0877               	movf	(0+(?_mod)),w
   694  075B  01BC               	clrf	(main@n1)
   695  075C  07BC               	addwf	(main@n1)
   696                           
   697  075D  2F5E               	goto	l2433
   698                           	line	61
   699                           	
   700  075E                     l1048:	
   701                           	line	64
   702                           	
   703  075E                     l2433:	
   704                           ;add_sub.c: 61: }
   705                           ;add_sub.c: 64: RD0=0;
   706  075E  1008               	bcf	(64/8),(64)&7
   707                           	line	65
   708                           	
   709  075F                     l2435:	
   710                           ;add_sub.c: 65: RD1=1;
   711  075F  1488               	bsf	(65/8),(65)&7
   712                           	line	66
   713                           	
   714  0760                     l2437:	
   715                           ;add_sub.c: 66: PORTC=seg[m1];
   716  0760  083A               	movf	(main@m1),w
   717  0761  3E24               	addlw	main@seg&0ffh
   718  0762  0084               	movwf	fsr0
   719  0763  1383               	bcf	status, 7	;select IRP bank0
   720  0764  0800               	movf	indf,w
   721  0765  0087               	movwf	(7)	;volatile
   722                           	line	67
   723                           	
   724  0766                     l2439:	
   725                           ;add_sub.c: 67: delay(2900);
   726  0766  3054               	movlw	low(0B54h)
   727  0767  00F0               	movwf	(?_delay)
   728  0768  300B               	movlw	high(0B54h)
   729  0769  00F1               	movwf	((?_delay))+1
   730  076A  120A  118A  2584   	fcall	_delay
              120A  118A         
   731                           	line	68
   732                           	
   733  076F                     l2441:	
   734                           ;add_sub.c: 68: RD0=1;
   735  076F  1283               	bcf	status, 5	;RP0=0, select bank0
   736  0770  1303               	bcf	status, 6	;RP1=0, select bank0
   737  0771  1408               	bsf	(64/8),(64)&7
   738                           	line	69
   739                           	
   740  0772                     l2443:	
   741                           ;add_sub.c: 69: RD1=0;
   742  0772  1088               	bcf	(65/8),(65)&7
   743                           	line	70
   744                           ;add_sub.c: 70: PORTC=seg[n1];
   745  0773  083C               	movf	(main@n1),w
   746  0774  3E24               	addlw	main@seg&0ffh
   747  0775  0084               	movwf	fsr0
   748  0776  1383               	bcf	status, 7	;select IRP bank0
   749  0777  0800               	movf	indf,w
   750  0778  0087               	movwf	(7)	;volatile
   751                           	line	71
   752                           	
   753  0779                     l2445:	
   754                           ;add_sub.c: 71: delay(2900);
   755  0779  3054               	movlw	low(0B54h)
   756  077A  00F0               	movwf	(?_delay)
   757  077B  300B               	movlw	high(0B54h)
   758  077C  00F1               	movwf	((?_delay))+1
   759  077D  120A  118A  2584   	fcall	_delay
              120A  118A         
   760                           	line	74
   761                           	
   762  0782                     l2447:	
   763                           ;add_sub.c: 74: if(RA3==1)
   764  0782  1283               	bcf	status, 5	;RP0=0, select bank0
   765  0783  1303               	bcf	status, 6	;RP1=0, select bank0
   766  0784  1D85               	btfss	(43/8),(43)&7
   767  0785  2F87               	goto	u2531
   768  0786  2F88               	goto	u2530
   769  0787                     u2531:
   770  0787  2FC4               	goto	l2453
   771  0788                     u2530:
   772                           	line	77
   773                           	
   774  0788                     l2449:	
   775                           ;add_sub.c: 76: {
   776                           ;add_sub.c: 77: count1=i-j;
   777  0788  0942               	comf	(main@j),w
   778  0789  00A0               	movwf	(??_main+0)+0
   779  078A  0943               	comf	(main@j+1),w
   780  078B  00A1               	movwf	((??_main+0)+0+1)
   781  078C  0AA0               	incf	(??_main+0)+0,f
   782  078D  1903               	skipnz
   783  078E  0AA1               	incf	((??_main+0)+0+1),f
   784  078F  0840               	movf	(main@i),w
   785  0790  0720               	addwf	0+(??_main+0)+0,w
   786  0791  00B8               	movwf	(main@count1)
   787  0792  0841               	movf	(main@i+1),w
   788  0793  1803               	skipnc
   789  0794  0A41               	incf	(main@i+1),w
   790  0795  0721               	addwf	1+(??_main+0)+0,w
   791  0796  00B9               	movwf	1+(main@count1)
   792                           	line	78
   793                           ;add_sub.c: 78: while(RA3==1);
   794  0797  2F98               	goto	l1053
   795                           	
   796  0798                     l1054:	
   797                           	
   798  0798                     l1053:	
   799  0798  1985               	btfsc	(43/8),(43)&7
   800  0799  2F9B               	goto	u2541
   801  079A  2F9C               	goto	u2540
   802  079B                     u2541:
   803  079B  2F98               	goto	l1053
   804  079C                     u2540:
   805  079C  2F9D               	goto	l2451
   806                           	
   807  079D                     l1055:	
   808                           	line	79
   809                           	
   810  079D                     l2451:	
   811                           ;add_sub.c: 79: m1=div(count1);
   812  079D  0839               	movf	(main@count1+1),w
   813  079E  01FA               	clrf	(?_div+1)
   814  079F  07FA               	addwf	(?_div+1)
   815  07A0  0838               	movf	(main@count1),w
   816  07A1  01F9               	clrf	(?_div)
   817  07A2  07F9               	addwf	(?_div)
   818                           
   819  07A3  120A  118A  25AC   	fcall	_div
              120A  118A         
   820  07A8  087A               	movf	(1+(?_div)),w
   821  07A9  1283               	bcf	status, 5	;RP0=0, select bank0
   822  07AA  1303               	bcf	status, 6	;RP1=0, select bank0
   823  07AB  01BB               	clrf	(main@m1+1)
   824  07AC  07BB               	addwf	(main@m1+1)
   825  07AD  0879               	movf	(0+(?_div)),w
   826  07AE  01BA               	clrf	(main@m1)
   827  07AF  07BA               	addwf	(main@m1)
   828                           
   829                           	line	80
   830                           ;add_sub.c: 80: n1=mod(count1);
   831  07B0  0839               	movf	(main@count1+1),w
   832  07B1  01F8               	clrf	(?_mod+1)
   833  07B2  07F8               	addwf	(?_mod+1)
   834  07B3  0838               	movf	(main@count1),w
   835  07B4  01F7               	clrf	(?_mod)
   836  07B5  07F7               	addwf	(?_mod)
   837                           
   838  07B6  120A  118A  25C9   	fcall	_mod
              120A  118A         
   839  07BB  0878               	movf	(1+(?_mod)),w
   840  07BC  1283               	bcf	status, 5	;RP0=0, select bank0
   841  07BD  1303               	bcf	status, 6	;RP1=0, select bank0
   842  07BE  01BD               	clrf	(main@n1+1)
   843  07BF  07BD               	addwf	(main@n1+1)
   844  07C0  0877               	movf	(0+(?_mod)),w
   845  07C1  01BC               	clrf	(main@n1)
   846  07C2  07BC               	addwf	(main@n1)
   847                           
   848  07C3  2FC4               	goto	l2453
   849                           	line	81
   850                           	
   851  07C4                     l1052:	
   852                           	line	83
   853                           	
   854  07C4                     l2453:	
   855                           ;add_sub.c: 81: }
   856                           ;add_sub.c: 83: RD0=0;
   857  07C4  1008               	bcf	(64/8),(64)&7
   858                           	line	84
   859                           	
   860  07C5                     l2455:	
   861                           ;add_sub.c: 84: RD1=1;
   862  07C5  1488               	bsf	(65/8),(65)&7
   863                           	line	85
   864                           	
   865  07C6                     l2457:	
   866                           ;add_sub.c: 85: PORTC=seg[m1];
   867  07C6  083A               	movf	(main@m1),w
   868  07C7  3E24               	addlw	main@seg&0ffh
   869  07C8  0084               	movwf	fsr0
   870  07C9  1383               	bcf	status, 7	;select IRP bank0
   871  07CA  0800               	movf	indf,w
   872  07CB  0087               	movwf	(7)	;volatile
   873                           	line	86
   874                           	
   875  07CC                     l2459:	
   876                           ;add_sub.c: 86: delay(2900);
   877  07CC  3054               	movlw	low(0B54h)
   878  07CD  00F0               	movwf	(?_delay)
   879  07CE  300B               	movlw	high(0B54h)
   880  07CF  00F1               	movwf	((?_delay))+1
   881  07D0  120A  118A  2584   	fcall	_delay
              120A  118A         
   882                           	line	87
   883                           	
   884  07D5                     l2461:	
   885                           ;add_sub.c: 87: RD0=1;
   886  07D5  1283               	bcf	status, 5	;RP0=0, select bank0
   887  07D6  1303               	bcf	status, 6	;RP1=0, select bank0
   888  07D7  1408               	bsf	(64/8),(64)&7
   889                           	line	88
   890                           	
   891  07D8                     l2463:	
   892                           ;add_sub.c: 88: RD1=0;
   893  07D8  1088               	bcf	(65/8),(65)&7
   894                           	line	89
   895                           ;add_sub.c: 89: PORTC=seg[n1];
   896  07D9  083C               	movf	(main@n1),w
   897  07DA  3E24               	addlw	main@seg&0ffh
   898  07DB  0084               	movwf	fsr0
   899  07DC  1383               	bcf	status, 7	;select IRP bank0
   900  07DD  0800               	movf	indf,w
   901  07DE  0087               	movwf	(7)	;volatile
   902                           	line	90
   903                           	
   904  07DF                     l2465:	
   905                           ;add_sub.c: 90: delay(2900);
   906  07DF  3054               	movlw	low(0B54h)
   907  07E0  00F0               	movwf	(?_delay)
   908  07E1  300B               	movlw	high(0B54h)
   909  07E2  00F1               	movwf	((?_delay))+1
   910  07E3  120A  118A  2584   	fcall	_delay
              120A  118A         
   911                           	line	92
   912                           	
   913  07E8                     l2467:	
   914                           ;add_sub.c: 92: if(RA4==1)
   915  07E8  1283               	bcf	status, 5	;RP0=0, select bank0
   916  07E9  1303               	bcf	status, 6	;RP1=0, select bank0
   917  07EA  1E05               	btfss	(44/8),(44)&7
   918  07EB  2FED               	goto	u2551
   919  07EC  2FEE               	goto	u2550
   920  07ED                     u2551:
   921  07ED  2EF3               	goto	l2423
   922  07EE                     u2550:
   923                           	line	94
   924                           	
   925  07EE                     l2469:	
   926                           ;add_sub.c: 93: {
   927                           ;add_sub.c: 94: i=0;
   928  07EE  01C0               	clrf	(main@i)
   929  07EF  01C1               	clrf	(main@i+1)
   930                           	line	95
   931                           ;add_sub.c: 95: j=0;
   932  07F0  01C2               	clrf	(main@j)
   933  07F1  01C3               	clrf	(main@j+1)
   934                           	line	96
   935                           ;add_sub.c: 96: count=0;
   936  07F2  01BE               	clrf	(main@count)
   937  07F3  01BF               	clrf	(main@count+1)
   938                           	line	97
   939                           ;add_sub.c: 97: while(RA4==1);
   940  07F4  2FF5               	goto	l1057
   941                           	
   942  07F5                     l1058:	
   943                           	
   944  07F5                     l1057:	
   945  07F5  1A05               	btfsc	(44/8),(44)&7
   946  07F6  2FF8               	goto	u2561
   947  07F7  2FF9               	goto	u2560
   948  07F8                     u2561:
   949  07F8  2FF5               	goto	l1057
   950  07F9                     u2560:
   951  07F9  2EF3               	goto	l2423
   952                           	
   953  07FA                     l1059:	
   954  07FA  2EF3               	goto	l2423
   955                           	line	98
   956                           	
   957  07FB                     l1056:	
   958  07FB  2EF3               	goto	l2423
   959                           	line	99
   960                           	
   961  07FC                     l1060:	
   962                           	line	40
   963  07FC  2EF3               	goto	l2423
   964                           	
   965  07FD                     l1061:	
   966                           	line	100
   967                           	
   968  07FD                     l1062:	
   969                           	global	start
   970  07FD  120A  118A  2800   	ljmp	start
   971                           	opt stack 0
   972                           GLOBAL	__end_of_main
   973  0800                     	__end_of_main:
   974 ;; =============== function _main ends ============
   975                           
   976                           	signat	_main,88
   977                           	global	_mod
   978                           psect	text119,local,class=CODE,delta=2
   979                           global __ptext119
   980  05C9                     __ptext119:
   981                           
   982 ;; *************** function _mod *****************
   983 ;; Defined at:
   984 ;;		line 23 in file "D:\Embedded\pic\code\software\segment\add_sub\add_sub.c"
   985 ;; Parameters:    Size  Location     Type
   986 ;;  y               2    7[COMMON] int 
   987 ;; Auto vars:     Size  Location     Type
   988 ;;  n               2    9[COMMON] int 
   989 ;; Return value:  Size  Location     Type
   990 ;;                  2    7[COMMON] int 
   991 ;; Registers used:
   992 ;;		wreg, status,2, status,0, pclath, cstack
   993 ;; Tracked objects:
   994 ;;		On entry : 0/0
   995 ;;		On exit  : 0/0
   996 ;;		Unchanged: 0/0
   997 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   998 ;;      Params:         2       0       0       0       0
   999 ;;      Locals:         2       0       0       0       0
  1000 ;;      Temps:          0       0       0       0       0
  1001 ;;      Totals:         4       0       0       0       0
  1002 ;;Total ram usage:        4 bytes
  1003 ;; Hardware stack levels used:    1
  1004 ;; Hardware stack levels required when called:    1
  1005 ;; This function calls:
  1006 ;;		___awmod
  1007 ;; This function is called by:
  1008 ;;		_main
  1009 ;; This function uses a non-reentrant model
  1010 ;;
  1011                           psect	text119
  1012                           	file	"D:\Embedded\pic\code\software\segment\add_sub\add_sub.c"
  1013                           	line	23
  1014                           	global	__size_of_mod
  1015  001D                     	__size_of_mod	equ	__end_of_mod-_mod
  1016                           	
  1017  05C9                     _mod:	
  1018                           	opt	stack 6
  1019                           ; Regs used in _mod: [wreg+status,2+status,0+pclath+cstack]
  1020                           	line	25
  1021                           	
  1022  05C9                     l2397:	
  1023                           ;add_sub.c: 24: int n;
  1024                           ;add_sub.c: 25: n=y%10;
  1025  05C9  300A               	movlw	low(0Ah)
  1026  05CA  00F0               	movwf	(?___awmod)
  1027  05CB  3000               	movlw	high(0Ah)
  1028  05CC  00F1               	movwf	((?___awmod))+1
  1029  05CD  0878               	movf	(mod@y+1),w
  1030  05CE  01F3               	clrf	1+(?___awmod)+02h
  1031  05CF  07F3               	addwf	1+(?___awmod)+02h
  1032  05D0  0877               	movf	(mod@y),w
  1033  05D1  01F2               	clrf	0+(?___awmod)+02h
  1034  05D2  07F2               	addwf	0+(?___awmod)+02h
  1035                           
  1036  05D3  120A  118A  25E6   	fcall	___awmod
              120A  118A         
  1037  05D8  0871               	movf	(1+(?___awmod)),w
  1038  05D9  01FA               	clrf	(mod@n+1)
  1039  05DA  07FA               	addwf	(mod@n+1)
  1040  05DB  0870               	movf	(0+(?___awmod)),w
  1041  05DC  01F9               	clrf	(mod@n)
  1042  05DD  07F9               	addwf	(mod@n)
  1043                           
  1044                           	line	26
  1045                           	
  1046  05DE                     l2399:	
  1047                           ;add_sub.c: 26: return n;
  1048  05DE  087A               	movf	(mod@n+1),w
  1049  05DF  01F8               	clrf	(?_mod+1)
  1050  05E0  07F8               	addwf	(?_mod+1)
  1051  05E1  0879               	movf	(mod@n),w
  1052  05E2  01F7               	clrf	(?_mod)
  1053  05E3  07F7               	addwf	(?_mod)
  1054                           
  1055  05E4  2DE5               	goto	l1034
  1056                           	
  1057  05E5                     l2401:	
  1058                           	line	27
  1059                           	
  1060  05E5                     l1034:	
  1061  05E5  0008               	return
  1062                           	opt stack 0
  1063                           GLOBAL	__end_of_mod
  1064  05E6                     	__end_of_mod:
  1065 ;; =============== function _mod ends ============
  1066                           
  1067                           	signat	_mod,4218
  1068                           	global	_div
  1069                           psect	text120,local,class=CODE,delta=2
  1070                           global __ptext120
  1071  05AC                     __ptext120:
  1072                           
  1073 ;; *************** function _div *****************
  1074 ;; Defined at:
  1075 ;;		line 17 in file "D:\Embedded\pic\code\software\segment\add_sub\add_sub.c"
  1076 ;; Parameters:    Size  Location     Type
  1077 ;;  x               2    9[COMMON] int 
  1078 ;; Auto vars:     Size  Location     Type
  1079 ;;  m               2   11[COMMON] int 
  1080 ;; Return value:  Size  Location     Type
  1081 ;;                  2    9[COMMON] int 
  1082 ;; Registers used:
  1083 ;;		wreg, status,2, status,0, pclath, cstack
  1084 ;; Tracked objects:
  1085 ;;		On entry : 0/0
  1086 ;;		On exit  : 0/0
  1087 ;;		Unchanged: 0/0
  1088 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1089 ;;      Params:         2       0       0       0       0
  1090 ;;      Locals:         2       0       0       0       0
  1091 ;;      Temps:          0       0       0       0       0
  1092 ;;      Totals:         4       0       0       0       0
  1093 ;;Total ram usage:        4 bytes
  1094 ;; Hardware stack levels used:    1
  1095 ;; Hardware stack levels required when called:    1
  1096 ;; This function calls:
  1097 ;;		___awdiv
  1098 ;; This function is called by:
  1099 ;;		_main
  1100 ;; This function uses a non-reentrant model
  1101 ;;
  1102                           psect	text120
  1103                           	file	"D:\Embedded\pic\code\software\segment\add_sub\add_sub.c"
  1104                           	line	17
  1105                           	global	__size_of_div
  1106  001D                     	__size_of_div	equ	__end_of_div-_div
  1107                           	
  1108  05AC                     _div:	
  1109                           	opt	stack 6
  1110                           ; Regs used in _div: [wreg+status,2+status,0+pclath+cstack]
  1111                           	line	19
  1112                           	
  1113  05AC                     l2391:	
  1114                           ;add_sub.c: 18: int m;
  1115                           ;add_sub.c: 19: m=x/10;
  1116  05AC  300A               	movlw	low(0Ah)
  1117  05AD  00F0               	movwf	(?___awdiv)
  1118  05AE  3000               	movlw	high(0Ah)
  1119  05AF  00F1               	movwf	((?___awdiv))+1
  1120  05B0  087A               	movf	(div@x+1),w
  1121  05B1  01F3               	clrf	1+(?___awdiv)+02h
  1122  05B2  07F3               	addwf	1+(?___awdiv)+02h
  1123  05B3  0879               	movf	(div@x),w
  1124  05B4  01F2               	clrf	0+(?___awdiv)+02h
  1125  05B5  07F2               	addwf	0+(?___awdiv)+02h
  1126                           
  1127  05B6  120A  118A  264C   	fcall	___awdiv
              120A  118A         
  1128  05BB  0871               	movf	(1+(?___awdiv)),w
  1129  05BC  01FC               	clrf	(div@m+1)
  1130  05BD  07FC               	addwf	(div@m+1)
  1131  05BE  0870               	movf	(0+(?___awdiv)),w
  1132  05BF  01FB               	clrf	(div@m)
  1133  05C0  07FB               	addwf	(div@m)
  1134                           
  1135                           	line	20
  1136                           	
  1137  05C1                     l2393:	
  1138                           ;add_sub.c: 20: return m;
  1139  05C1  087C               	movf	(div@m+1),w
  1140  05C2  01FA               	clrf	(?_div+1)
  1141  05C3  07FA               	addwf	(?_div+1)
  1142  05C4  087B               	movf	(div@m),w
  1143  05C5  01F9               	clrf	(?_div)
  1144  05C6  07F9               	addwf	(?_div)
  1145                           
  1146  05C7  2DC8               	goto	l1031
  1147                           	
  1148  05C8                     l2395:	
  1149                           	line	21
  1150                           	
  1151  05C8                     l1031:	
  1152  05C8  0008               	return
  1153                           	opt stack 0
  1154                           GLOBAL	__end_of_div
  1155  05C9                     	__end_of_div:
  1156 ;; =============== function _div ends ============
  1157                           
  1158                           	signat	_div,4218
  1159                           	global	___awmod
  1160                           psect	text121,local,class=CODE,delta=2
  1161                           global __ptext121
  1162  05E6                     __ptext121:
  1163                           
  1164 ;; *************** function ___awmod *****************
  1165 ;; Defined at:
  1166 ;;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.81\sources\awmod.c"
  1167 ;; Parameters:    Size  Location     Type
  1168 ;;  divisor         2    0[COMMON] int 
  1169 ;;  dividend        2    2[COMMON] int 
  1170 ;; Auto vars:     Size  Location     Type
  1171 ;;  sign            1    6[COMMON] unsigned char 
  1172 ;;  counter         1    5[COMMON] unsigned char 
  1173 ;; Return value:  Size  Location     Type
  1174 ;;                  2    0[COMMON] int 
  1175 ;; Registers used:
  1176 ;;		wreg, status,2, status,0
  1177 ;; Tracked objects:
  1178 ;;		On entry : 0/0
  1179 ;;		On exit  : 0/0
  1180 ;;		Unchanged: 0/0
  1181 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1182 ;;      Params:         4       0       0       0       0
  1183 ;;      Locals:         2       0       0       0       0
  1184 ;;      Temps:          1       0       0       0       0
  1185 ;;      Totals:         7       0       0       0       0
  1186 ;;Total ram usage:        7 bytes
  1187 ;; Hardware stack levels used:    1
  1188 ;; This function calls:
  1189 ;;		Nothing
  1190 ;; This function is called by:
  1191 ;;		_mod
  1192 ;; This function uses a non-reentrant model
  1193 ;;
  1194                           psect	text121
  1195                           	file	"C:\Program Files\HI-TECH Software\PICC\9.81\sources\awmod.c"
  1196                           	line	5
  1197                           	global	__size_of___awmod
  1198  0066                     	__size_of___awmod	equ	__end_of___awmod-___awmod
  1199                           	
  1200  05E6                     ___awmod:	
  1201                           	opt	stack 6
  1202                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  1203                           	line	8
  1204                           	
  1205  05E6                     l2357:	
  1206  05E6  01F6               	clrf	(___awmod@sign)
  1207                           	line	9
  1208  05E7  1FF3               	btfss	(___awmod@dividend+1),7
  1209  05E8  2DEA               	goto	u2371
  1210  05E9  2DEB               	goto	u2370
  1211  05EA                     u2371:
  1212  05EA  2DF4               	goto	l2361
  1213  05EB                     u2370:
  1214                           	line	10
  1215                           	
  1216  05EB                     l2359:	
  1217  05EB  09F2               	comf	(___awmod@dividend),f
  1218  05EC  09F3               	comf	(___awmod@dividend+1),f
  1219  05ED  0AF2               	incf	(___awmod@dividend),f
  1220  05EE  1903               	skipnz
  1221  05EF  0AF3               	incf	(___awmod@dividend+1),f
  1222                           	line	11
  1223  05F0  01F6               	clrf	(___awmod@sign)
  1224  05F1  1403               	bsf	status,0
  1225  05F2  0DF6               	rlf	(___awmod@sign),f
  1226  05F3  2DF4               	goto	l2361
  1227                           	line	12
  1228                           	
  1229  05F4                     l1279:	
  1230                           	line	13
  1231                           	
  1232  05F4                     l2361:	
  1233  05F4  1FF1               	btfss	(___awmod@divisor+1),7
  1234  05F5  2DF7               	goto	u2381
  1235  05F6  2DF8               	goto	u2380
  1236  05F7                     u2381:
  1237  05F7  2DFE               	goto	l2365
  1238  05F8                     u2380:
  1239                           	line	14
  1240                           	
  1241  05F8                     l2363:	
  1242  05F8  09F0               	comf	(___awmod@divisor),f
  1243  05F9  09F1               	comf	(___awmod@divisor+1),f
  1244  05FA  0AF0               	incf	(___awmod@divisor),f
  1245  05FB  1903               	skipnz
  1246  05FC  0AF1               	incf	(___awmod@divisor+1),f
  1247  05FD  2DFE               	goto	l2365
  1248                           	
  1249  05FE                     l1280:	
  1250                           	line	15
  1251                           	
  1252  05FE                     l2365:	
  1253  05FE  0871               	movf	(___awmod@divisor+1),w
  1254  05FF  0470               	iorwf	(___awmod@divisor),w
  1255  0600  1903               	skipnz
  1256  0601  2E03               	goto	u2391
  1257  0602  2E04               	goto	u2390
  1258  0603                     u2391:
  1259  0603  2E3A               	goto	l2383
  1260  0604                     u2390:
  1261                           	line	16
  1262                           	
  1263  0604                     l2367:	
  1264  0604  01F5               	clrf	(___awmod@counter)
  1265  0605  1403               	bsf	status,0
  1266  0606  0DF5               	rlf	(___awmod@counter),f
  1267                           	line	17
  1268  0607  2E14               	goto	l2373
  1269                           	
  1270  0608                     l1283:	
  1271                           	line	18
  1272                           	
  1273  0608                     l2369:	
  1274  0608  3001               	movlw	01h
  1275                           	
  1276  0609                     u2405:
  1277  0609  1003               	clrc
  1278  060A  0DF0               	rlf	(___awmod@divisor),f
  1279  060B  0DF1               	rlf	(___awmod@divisor+1),f
  1280  060C  3EFF               	addlw	-1
  1281  060D  1D03               	skipz
  1282  060E  2E09               	goto	u2405
  1283                           	line	19
  1284                           	
  1285  060F                     l2371:	
  1286  060F  3001               	movlw	(01h)
  1287  0610  00F4               	movwf	(??___awmod+0)+0
  1288  0611  0874               	movf	(??___awmod+0)+0,w
  1289  0612  07F5               	addwf	(___awmod@counter),f
  1290  0613  2E14               	goto	l2373
  1291                           	line	20
  1292                           	
  1293  0614                     l1282:	
  1294                           	line	17
  1295                           	
  1296  0614                     l2373:	
  1297  0614  1FF1               	btfss	(___awmod@divisor+1),(15)&7
  1298  0615  2E17               	goto	u2411
  1299  0616  2E18               	goto	u2410
  1300  0617                     u2411:
  1301  0617  2E08               	goto	l2369
  1302  0618                     u2410:
  1303  0618  2E1A               	goto	l2375
  1304                           	
  1305  0619                     l1284:	
  1306  0619  2E1A               	goto	l2375
  1307                           	line	21
  1308                           	
  1309  061A                     l1285:	
  1310                           	line	22
  1311                           	
  1312  061A                     l2375:	
  1313  061A  0871               	movf	(___awmod@divisor+1),w
  1314  061B  0273               	subwf	(___awmod@dividend+1),w
  1315  061C  1D03               	skipz
  1316  061D  2E20               	goto	u2425
  1317  061E  0870               	movf	(___awmod@divisor),w
  1318  061F  0272               	subwf	(___awmod@dividend),w
  1319  0620                     u2425:
  1320  0620  1C03               	skipc
  1321  0621  2E23               	goto	u2421
  1322  0622  2E24               	goto	u2420
  1323  0623                     u2421:
  1324  0623  2E2B               	goto	l2379
  1325  0624                     u2420:
  1326                           	line	23
  1327                           	
  1328  0624                     l2377:	
  1329  0624  0870               	movf	(___awmod@divisor),w
  1330  0625  02F2               	subwf	(___awmod@dividend),f
  1331  0626  0871               	movf	(___awmod@divisor+1),w
  1332  0627  1C03               	skipc
  1333  0628  03F3               	decf	(___awmod@dividend+1),f
  1334  0629  02F3               	subwf	(___awmod@dividend+1),f
  1335  062A  2E2B               	goto	l2379
  1336                           	
  1337  062B                     l1286:	
  1338                           	line	24
  1339                           	
  1340  062B                     l2379:	
  1341  062B  3001               	movlw	01h
  1342                           	
  1343  062C                     u2435:
  1344  062C  1003               	clrc
  1345  062D  0CF1               	rrf	(___awmod@divisor+1),f
  1346  062E  0CF0               	rrf	(___awmod@divisor),f
  1347  062F  3EFF               	addlw	-1
  1348  0630  1D03               	skipz
  1349  0631  2E2C               	goto	u2435
  1350                           	line	25
  1351                           	
  1352  0632                     l2381:	
  1353  0632  3001               	movlw	low(01h)
  1354  0633  02F5               	subwf	(___awmod@counter),f
  1355  0634  1D03               	btfss	status,2
  1356  0635  2E37               	goto	u2441
  1357  0636  2E38               	goto	u2440
  1358  0637                     u2441:
  1359  0637  2E1A               	goto	l2375
  1360  0638                     u2440:
  1361  0638  2E3A               	goto	l2383
  1362                           	
  1363  0639                     l1287:	
  1364  0639  2E3A               	goto	l2383
  1365                           	line	26
  1366                           	
  1367  063A                     l1281:	
  1368                           	line	27
  1369                           	
  1370  063A                     l2383:	
  1371  063A  0876               	movf	(___awmod@sign),w
  1372  063B  1D03               	skipz
  1373  063C  2E3E               	goto	u2450
  1374  063D  2E44               	goto	l2387
  1375  063E                     u2450:
  1376                           	line	28
  1377                           	
  1378  063E                     l2385:	
  1379  063E  09F2               	comf	(___awmod@dividend),f
  1380  063F  09F3               	comf	(___awmod@dividend+1),f
  1381  0640  0AF2               	incf	(___awmod@dividend),f
  1382  0641  1903               	skipnz
  1383  0642  0AF3               	incf	(___awmod@dividend+1),f
  1384  0643  2E44               	goto	l2387
  1385                           	
  1386  0644                     l1288:	
  1387                           	line	29
  1388                           	
  1389  0644                     l2387:	
  1390  0644  0873               	movf	(___awmod@dividend+1),w
  1391  0645  01F1               	clrf	(?___awmod+1)
  1392  0646  07F1               	addwf	(?___awmod+1)
  1393  0647  0872               	movf	(___awmod@dividend),w
  1394  0648  01F0               	clrf	(?___awmod)
  1395  0649  07F0               	addwf	(?___awmod)
  1396                           
  1397  064A  2E4B               	goto	l1289
  1398                           	
  1399  064B                     l2389:	
  1400                           	line	30
  1401                           	
  1402  064B                     l1289:	
  1403  064B  0008               	return
  1404                           	opt stack 0
  1405                           GLOBAL	__end_of___awmod
  1406  064C                     	__end_of___awmod:
  1407 ;; =============== function ___awmod ends ============
  1408                           
  1409                           	signat	___awmod,8314
  1410                           	global	___awdiv
  1411                           psect	text122,local,class=CODE,delta=2
  1412                           global __ptext122
  1413  064C                     __ptext122:
  1414                           
  1415 ;; *************** function ___awdiv *****************
  1416 ;; Defined at:
  1417 ;;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.81\sources\awdiv.c"
  1418 ;; Parameters:    Size  Location     Type
  1419 ;;  divisor         2    0[COMMON] int 
  1420 ;;  dividend        2    2[COMMON] int 
  1421 ;; Auto vars:     Size  Location     Type
  1422 ;;  quotient        2    7[COMMON] int 
  1423 ;;  sign            1    6[COMMON] unsigned char 
  1424 ;;  counter         1    5[COMMON] unsigned char 
  1425 ;; Return value:  Size  Location     Type
  1426 ;;                  2    0[COMMON] int 
  1427 ;; Registers used:
  1428 ;;		wreg, status,2, status,0
  1429 ;; Tracked objects:
  1430 ;;		On entry : 0/0
  1431 ;;		On exit  : 0/0
  1432 ;;		Unchanged: 0/0
  1433 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1434 ;;      Params:         4       0       0       0       0
  1435 ;;      Locals:         4       0       0       0       0
  1436 ;;      Temps:          1       0       0       0       0
  1437 ;;      Totals:         9       0       0       0       0
  1438 ;;Total ram usage:        9 bytes
  1439 ;; Hardware stack levels used:    1
  1440 ;; This function calls:
  1441 ;;		Nothing
  1442 ;; This function is called by:
  1443 ;;		_div
  1444 ;; This function uses a non-reentrant model
  1445 ;;
  1446                           psect	text122
  1447                           	file	"C:\Program Files\HI-TECH Software\PICC\9.81\sources\awdiv.c"
  1448                           	line	5
  1449                           	global	__size_of___awdiv
  1450  0074                     	__size_of___awdiv	equ	__end_of___awdiv-___awdiv
  1451                           	
  1452  064C                     ___awdiv:	
  1453                           	opt	stack 6
  1454                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1455                           	line	9
  1456                           	
  1457  064C                     l2317:	
  1458  064C  01F6               	clrf	(___awdiv@sign)
  1459                           	line	10
  1460  064D  1FF1               	btfss	(___awdiv@divisor+1),7
  1461  064E  2E50               	goto	u2271
  1462  064F  2E51               	goto	u2270
  1463  0650                     u2271:
  1464  0650  2E5A               	goto	l2321
  1465  0651                     u2270:
  1466                           	line	11
  1467                           	
  1468  0651                     l2319:	
  1469  0651  09F0               	comf	(___awdiv@divisor),f
  1470  0652  09F1               	comf	(___awdiv@divisor+1),f
  1471  0653  0AF0               	incf	(___awdiv@divisor),f
  1472  0654  1903               	skipnz
  1473  0655  0AF1               	incf	(___awdiv@divisor+1),f
  1474                           	line	12
  1475  0656  01F6               	clrf	(___awdiv@sign)
  1476  0657  1403               	bsf	status,0
  1477  0658  0DF6               	rlf	(___awdiv@sign),f
  1478  0659  2E5A               	goto	l2321
  1479                           	line	13
  1480                           	
  1481  065A                     l1211:	
  1482                           	line	14
  1483                           	
  1484  065A                     l2321:	
  1485  065A  1FF3               	btfss	(___awdiv@dividend+1),7
  1486  065B  2E5D               	goto	u2281
  1487  065C  2E5E               	goto	u2280
  1488  065D                     u2281:
  1489  065D  2E68               	goto	l2327
  1490  065E                     u2280:
  1491                           	line	15
  1492                           	
  1493  065E                     l2323:	
  1494  065E  09F2               	comf	(___awdiv@dividend),f
  1495  065F  09F3               	comf	(___awdiv@dividend+1),f
  1496  0660  0AF2               	incf	(___awdiv@dividend),f
  1497  0661  1903               	skipnz
  1498  0662  0AF3               	incf	(___awdiv@dividend+1),f
  1499                           	line	16
  1500                           	
  1501  0663                     l2325:	
  1502  0663  3001               	movlw	(01h)
  1503  0664  00F4               	movwf	(??___awdiv+0)+0
  1504  0665  0874               	movf	(??___awdiv+0)+0,w
  1505  0666  06F6               	xorwf	(___awdiv@sign),f
  1506  0667  2E68               	goto	l2327
  1507                           	line	17
  1508                           	
  1509  0668                     l1212:	
  1510                           	line	18
  1511                           	
  1512  0668                     l2327:	
  1513  0668  01F7               	clrf	(___awdiv@quotient)
  1514  0669  01F8               	clrf	(___awdiv@quotient+1)
  1515                           	line	19
  1516                           	
  1517  066A                     l2329:	
  1518  066A  0871               	movf	(___awdiv@divisor+1),w
  1519  066B  0470               	iorwf	(___awdiv@divisor),w
  1520  066C  1903               	skipnz
  1521  066D  2E6F               	goto	u2291
  1522  066E  2E70               	goto	u2290
  1523  066F                     u2291:
  1524  066F  2EAE               	goto	l2349
  1525  0670                     u2290:
  1526                           	line	20
  1527                           	
  1528  0670                     l2331:	
  1529  0670  01F5               	clrf	(___awdiv@counter)
  1530  0671  1403               	bsf	status,0
  1531  0672  0DF5               	rlf	(___awdiv@counter),f
  1532                           	line	21
  1533  0673  2E80               	goto	l2337
  1534                           	
  1535  0674                     l1215:	
  1536                           	line	22
  1537                           	
  1538  0674                     l2333:	
  1539  0674  3001               	movlw	01h
  1540                           	
  1541  0675                     u2305:
  1542  0675  1003               	clrc
  1543  0676  0DF0               	rlf	(___awdiv@divisor),f
  1544  0677  0DF1               	rlf	(___awdiv@divisor+1),f
  1545  0678  3EFF               	addlw	-1
  1546  0679  1D03               	skipz
  1547  067A  2E75               	goto	u2305
  1548                           	line	23
  1549                           	
  1550  067B                     l2335:	
  1551  067B  3001               	movlw	(01h)
  1552  067C  00F4               	movwf	(??___awdiv+0)+0
  1553  067D  0874               	movf	(??___awdiv+0)+0,w
  1554  067E  07F5               	addwf	(___awdiv@counter),f
  1555  067F  2E80               	goto	l2337
  1556                           	line	24
  1557                           	
  1558  0680                     l1214:	
  1559                           	line	21
  1560                           	
  1561  0680                     l2337:	
  1562  0680  1FF1               	btfss	(___awdiv@divisor+1),(15)&7
  1563  0681  2E83               	goto	u2311
  1564  0682  2E84               	goto	u2310
  1565  0683                     u2311:
  1566  0683  2E74               	goto	l2333
  1567  0684                     u2310:
  1568  0684  2E86               	goto	l2339
  1569                           	
  1570  0685                     l1216:	
  1571  0685  2E86               	goto	l2339
  1572                           	line	25
  1573                           	
  1574  0686                     l1217:	
  1575                           	line	26
  1576                           	
  1577  0686                     l2339:	
  1578  0686  3001               	movlw	01h
  1579                           	
  1580  0687                     u2325:
  1581  0687  1003               	clrc
  1582  0688  0DF7               	rlf	(___awdiv@quotient),f
  1583  0689  0DF8               	rlf	(___awdiv@quotient+1),f
  1584  068A  3EFF               	addlw	-1
  1585  068B  1D03               	skipz
  1586  068C  2E87               	goto	u2325
  1587                           	line	27
  1588  068D  0871               	movf	(___awdiv@divisor+1),w
  1589  068E  0273               	subwf	(___awdiv@dividend+1),w
  1590  068F  1D03               	skipz
  1591  0690  2E93               	goto	u2335
  1592  0691  0870               	movf	(___awdiv@divisor),w
  1593  0692  0272               	subwf	(___awdiv@dividend),w
  1594  0693                     u2335:
  1595  0693  1C03               	skipc
  1596  0694  2E96               	goto	u2331
  1597  0695  2E97               	goto	u2330
  1598  0696                     u2331:
  1599  0696  2E9F               	goto	l2345
  1600  0697                     u2330:
  1601                           	line	28
  1602                           	
  1603  0697                     l2341:	
  1604  0697  0870               	movf	(___awdiv@divisor),w
  1605  0698  02F2               	subwf	(___awdiv@dividend),f
  1606  0699  0871               	movf	(___awdiv@divisor+1),w
  1607  069A  1C03               	skipc
  1608  069B  03F3               	decf	(___awdiv@dividend+1),f
  1609  069C  02F3               	subwf	(___awdiv@dividend+1),f
  1610                           	line	29
  1611                           	
  1612  069D                     l2343:	
  1613  069D  1477               	bsf	(___awdiv@quotient)+(0/8),(0)&7
  1614  069E  2E9F               	goto	l2345
  1615                           	line	30
  1616                           	
  1617  069F                     l1218:	
  1618                           	line	31
  1619                           	
  1620  069F                     l2345:	
  1621  069F  3001               	movlw	01h
  1622                           	
  1623  06A0                     u2345:
  1624  06A0  1003               	clrc
  1625  06A1  0CF1               	rrf	(___awdiv@divisor+1),f
  1626  06A2  0CF0               	rrf	(___awdiv@divisor),f
  1627  06A3  3EFF               	addlw	-1
  1628  06A4  1D03               	skipz
  1629  06A5  2EA0               	goto	u2345
  1630                           	line	32
  1631                           	
  1632  06A6                     l2347:	
  1633  06A6  3001               	movlw	low(01h)
  1634  06A7  02F5               	subwf	(___awdiv@counter),f
  1635  06A8  1D03               	btfss	status,2
  1636  06A9  2EAB               	goto	u2351
  1637  06AA  2EAC               	goto	u2350
  1638  06AB                     u2351:
  1639  06AB  2E86               	goto	l2339
  1640  06AC                     u2350:
  1641  06AC  2EAE               	goto	l2349
  1642                           	
  1643  06AD                     l1219:	
  1644  06AD  2EAE               	goto	l2349
  1645                           	line	33
  1646                           	
  1647  06AE                     l1213:	
  1648                           	line	34
  1649                           	
  1650  06AE                     l2349:	
  1651  06AE  0876               	movf	(___awdiv@sign),w
  1652  06AF  1D03               	skipz
  1653  06B0  2EB2               	goto	u2360
  1654  06B1  2EB8               	goto	l2353
  1655  06B2                     u2360:
  1656                           	line	35
  1657                           	
  1658  06B2                     l2351:	
  1659  06B2  09F7               	comf	(___awdiv@quotient),f
  1660  06B3  09F8               	comf	(___awdiv@quotient+1),f
  1661  06B4  0AF7               	incf	(___awdiv@quotient),f
  1662  06B5  1903               	skipnz
  1663  06B6  0AF8               	incf	(___awdiv@quotient+1),f
  1664  06B7  2EB8               	goto	l2353
  1665                           	
  1666  06B8                     l1220:	
  1667                           	line	36
  1668                           	
  1669  06B8                     l2353:	
  1670  06B8  0878               	movf	(___awdiv@quotient+1),w
  1671  06B9  01F1               	clrf	(?___awdiv+1)
  1672  06BA  07F1               	addwf	(?___awdiv+1)
  1673  06BB  0877               	movf	(___awdiv@quotient),w
  1674  06BC  01F0               	clrf	(?___awdiv)
  1675  06BD  07F0               	addwf	(?___awdiv)
  1676                           
  1677  06BE  2EBF               	goto	l1221
  1678                           	
  1679  06BF                     l2355:	
  1680                           	line	37
  1681                           	
  1682  06BF                     l1221:	
  1683  06BF  0008               	return
  1684                           	opt stack 0
  1685                           GLOBAL	__end_of___awdiv
  1686  06C0                     	__end_of___awdiv:
  1687 ;; =============== function ___awdiv ends ============
  1688                           
  1689                           	signat	___awdiv,8314
  1690                           	global	_delay
  1691                           psect	text123,local,class=CODE,delta=2
  1692                           global __ptext123
  1693  0584                     __ptext123:
  1694                           
  1695 ;; *************** function _delay *****************
  1696 ;; Defined at:
  1697 ;;		line 13 in file "D:\Embedded\pic\code\software\segment\add_sub\add_sub.c"
  1698 ;; Parameters:    Size  Location     Type
  1699 ;;  a               2    0[COMMON] unsigned int 
  1700 ;; Auto vars:     Size  Location     Type
  1701 ;;		None
  1702 ;; Return value:  Size  Location     Type
  1703 ;;		None               void
  1704 ;; Registers used:
  1705 ;;		wreg
  1706 ;; Tracked objects:
  1707 ;;		On entry : 0/0
  1708 ;;		On exit  : 0/0
  1709 ;;		Unchanged: 0/0
  1710 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1711 ;;      Params:         2       0       0       0       0
  1712 ;;      Locals:         0       0       0       0       0
  1713 ;;      Temps:          0       0       0       0       0
  1714 ;;      Totals:         2       0       0       0       0
  1715 ;;Total ram usage:        2 bytes
  1716 ;; Hardware stack levels used:    1
  1717 ;; This function calls:
  1718 ;;		Nothing
  1719 ;; This function is called by:
  1720 ;;		_main
  1721 ;; This function uses a non-reentrant model
  1722 ;;
  1723                           psect	text123
  1724                           	file	"D:\Embedded\pic\code\software\segment\add_sub\add_sub.c"
  1725                           	line	13
  1726                           	global	__size_of_delay
  1727  0014                     	__size_of_delay	equ	__end_of_delay-_delay
  1728                           	
  1729  0584                     _delay:	
  1730                           	opt	stack 7
  1731                           ; Regs used in _delay: [wreg]
  1732                           	line	14
  1733                           	
  1734  0584                     l2313:	
  1735                           ;add_sub.c: 14: while(a--);
  1736  0584  2D86               	goto	l2315
  1737                           	
  1738  0585                     l1026:	
  1739  0585  2D86               	goto	l2315
  1740                           	
  1741  0586                     l1025:	
  1742                           	
  1743  0586                     l2315:	
  1744  0586  3001               	movlw	low(01h)
  1745  0587  02F0               	subwf	(delay@a),f
  1746  0588  3000               	movlw	high(01h)
  1747  0589  1C03               	skipc
  1748  058A  03F1               	decf	(delay@a+1),f
  1749  058B  02F1               	subwf	(delay@a+1),f
  1750  058C  30FF               	movlw	high(0FFFFh)
  1751  058D  0671               	xorwf	((delay@a+1)),w
  1752  058E  1D03               	skipz
  1753  058F  2D92               	goto	u2265
  1754  0590  30FF               	movlw	low(0FFFFh)
  1755  0591  0670               	xorwf	((delay@a)),w
  1756  0592                     u2265:
  1757                           
  1758  0592  1D03               	skipz
  1759  0593  2D95               	goto	u2261
  1760  0594  2D96               	goto	u2260
  1761  0595                     u2261:
  1762  0595  2D86               	goto	l2315
  1763  0596                     u2260:
  1764  0596  2D97               	goto	l1028
  1765                           	
  1766  0597                     l1027:	
  1767                           	line	15
  1768                           	
  1769  0597                     l1028:	
  1770  0597  0008               	return
  1771                           	opt stack 0
  1772                           GLOBAL	__end_of_delay
  1773  0598                     	__end_of_delay:
  1774 ;; =============== function _delay ends ============
  1775                           
  1776                           	signat	_delay,4216
  1777                           psect	text124,local,class=CODE,delta=2
  1778                           global __ptext124
  1779  0000                     __ptext124:
  1780                           	global	btemp
  1781  007E                     	btemp set 07Eh
  1782                           
  1783                           	DABS	1,126,2	;btemp
  1784                           	global	wtemp0
  1785  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.81 build 7503 
Symbol Table                                                                                   Wed Mar 16 01:50:45 2022

                   pc 0002          ___awdiv@sign 0076                    fsr 0004                   _RA0 0028  
                 _RA1 0029                   _RA2 002A                   _RA3 002B                   _RA4 002C  
                 _RD0 0040                   _RD1 0041                   _div 05AC                   _mod 05C9  
                 fsr0 0004                   indf 0000          ___awmod@sign 0076                  l1031 05C8  
                l1040 070D                  l1025 0586                  l1041 0708                  l1026 0585  
                l1034 05E5                  l1050 0732                  l1042 0708                  l1027 0597  
                l1211 065A                  l1051 0737                  l1043 070D                  l1028 0597  
                l1220 06B8                  l1212 0668                  l1060 07FC                  l1052 07C4  
                l1044 0725                  l1221 06BF                  l1213 06AE                  l1061 07FD  
                l1053 0798                  l1045 0720                  l1214 0680                  l1062 07FD  
                l1054 0798                  l1046 0720                  l1215 0674                  l1055 079D  
                l1047 0725                  l1039 06F3                  l1216 0685                  l1056 07FB  
                l1048 075E                  l1217 0686                  l1057 07F5                  l1049 0732  
                l1218 069F                  l1058 07F5                  l1219 06AD                  l1059 07FA  
                l1280 05FE                  l2313 0584                  l2321 065A                  l1281 063A  
                l2401 05E5                  l1282 0614                  l2315 0586                  l2331 0670  
                l2323 065E                  l1283 0608                  l2411 06E3                  l2403 06C0  
                l1284 0619                  l2341 0697                  l2333 0674                  l2325 0663  
                l2317 064C                  l1285 061A                  l2421 06F1                  l2413 06E6  
                l2405 06CA                  l1286 062B                  l2351 06B2                  l2343 069D  
                l2335 067B                  l2327 0668                  l2319 0651                  l1287 0639  
                l1279 05F4                  l2431 0737                  l2423 06F3                  l2415 06E9  
                l2407 06DF                  l1288 0644                  l2353 06B8                  l2345 069F  
                l2337 0680                  l2329 066A                  l1289 064B                  l2361 05F4  
                l2441 076F                  l2433 075E                  l2425 06F9                  l2417 06EB  
                l2409 06E0                  l2355 06BF                  l2347 06A6                  l2339 0686  
                l2371 060F                  l2363 05F8                  l2451 079D                  l2443 0772  
                l2435 075F                  l2427 0711                  l2419 06EE                  l2349 06AE  
                l2381 0632                  l2373 0614                  l2365 05FE                  l2357 05E6  
                l2461 07D5                  l2453 07C4                  l2445 0779                  l2437 0760  
                l2429 0729                  l2375 061A                  l2367 0604                  l2383 063A  
                l2359 05EB                  l2391 05AC                  l2463 07D8                  l2455 07C5  
                l2447 0782                  l2439 0766                  ?_div 0079                  l2385 063E  
                l2377 0624                  l2369 0608                  l2393 05C1                  l2465 07DF  
                l2457 07C6                  l2449 0788                  l2387 0644                  l2379 062B  
                l2395 05C8                  l2467 07E8                  l2459 07CC                  l2389 064B  
                l2397 05C9                  l2469 07EE                  l2399 05DE                  ?_mod 0077  
                u2310 0684                  u2311 0683                  u2305 0675                  u2330 0697  
                u2410 0618                  u2331 0696                  u2411 0617                  u2260 0596  
                u2420 0624                  u2500 0724                  u2261 0595                  u2325 0687  
                u2421 0623                  u2405 0609                  u2501 0723                  u2350 06AC  
                u2270 0651                  u2510 0729                  u2351 06AB                  u2335 0693  
                u2271 0650                  u2511 0728                  u2360 06B2                  u2280 065E  
                u2440 0638                  u2520 0736                  u2265 0592                  u2345 06A0  
                u2281 065D                  u2441 0637                  u2425 0620                  u2521 0735  
                u2290 0670                  u2450 063E                  u2370 05EB                  u2530 0788  
                u2291 066F                  u2435 062C                  u2371 05EA                  u2531 0787  
                u2380 05F8                  u2540 079C                  u2460 06D2                  u2381 05F7  
                u2541 079B                  u2390 0604                  u2550 07EE                  u2470 06F9  
                u2391 0603                  u2551 07ED                  u2471 06F8                  u2560 07F9  
                u2480 070C                  u2561 07F8                  u2481 070B                  u2490 0711  
                u2491 0710                  _main 06C0                  div@m 007B                  div@x 0079  
                btemp 007E                  mod@n 0079                  mod@y 0077                  start 0000  
               ??_div 007B                 ??_mod 0079                 ?_main 0070       __end_of___awdiv 06C0  
     __end_of___awmod 064C                 _ANSEL 0188       ___awdiv@divisor 0070       ___awdiv@counter 0075  
               _PORTA 0005                 _PORTC 0007                 _PORTD 0008                 _TRISA 0085  
               _TRISC 0087                 _TRISD 0088                 _delay 0584                 main@i 0040  
               main@j 0042                 pclath 000A                 status 0003                 wtemp0 007E  
        __end_of_main 0800                ??_main 0020                ?_delay 0070      ___awdiv@dividend 0072  
              _ANSELH 0189             ??___awdiv 0074             ??___awmod 0074                delay@a 0070  
    ___awdiv@quotient 0077       ___awmod@divisor 0070       ___awmod@counter 0075                main@m1 003A  
              main@n1 003C        __pcstackCOMMON 0070          __pidataBANK0 0598         __end_of_delay 0598  
             ??_delay 0072            __pmaintext 06C0               ___awdiv 064C               ___awmod 05E6  
        __size_of_div 001D          __size_of_mod 001D      ___awmod@dividend 0072               main@seg 0024  
end_of_initialization 0580               init_ram 0565            main@count1 0038   start_initialization 0572  
         __end_of_div 05C9           __end_of_mod 05E6           __pdataBANK0 0044         __pcstackBANK0 0020  
            ?___awdiv 0070             __ptext120 05AC             __ptext121 05E6             __ptext122 064C  
           __ptext123 0584             __ptext124 0000             __ptext119 05C9              ?___awmod 0070  
      __size_of_delay 0014             main@F1614 0044             main@count 003E             init_fetch 0561  
    __size_of___awdiv 0074      __size_of___awmod 0066         __size_of_main 0140  
