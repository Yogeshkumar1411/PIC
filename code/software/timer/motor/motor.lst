

HI-TECH Software PIC LITE Macro Assembler V9.81 build 7503 
                                                                                               Fri Apr 15 22:53:46 2022

HI-TECH Software Omniscient Code Generator (Lite mode) build 7503
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 7503"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F887
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           	FNCALL	_main,_timer
    43                           	FNROOT	_main
    44                           	global	_count
    45                           	global	_PORTC
    46                           psect	maintext,global,class=CODE,delta=2
    47                           global __pmaintext
    48  07AB                     __pmaintext:
    49  0007                     _PORTC	set	7
    50                           	global	_RC0
    51  0038                     _RC0	set	56
    52                           	global	_RC1
    53  0039                     _RC1	set	57
    54                           	global	_T0IF
    55  005A                     _T0IF	set	90
    56                           	global	_OPTION_REG
    57  0081                     _OPTION_REG	set	129
    58                           	global	_TRISC
    59  0087                     _TRISC	set	135
    60                           	file	"motor.as"
    61                           	line	#
    62                           psect cinit,class=CODE,delta=2
    63                           global start_initialization
    64  07A5                     start_initialization:
    65                           
    66                           psect	bssCOMMON,class=COMMON,space=1
    67                           global __pbssCOMMON
    68  0070                     __pbssCOMMON:
    69  0070                     _count:
    70  0070                            ds      2
    71                           
    72                           ; Clear objects allocated to COMMON
    73                           psect cinit,class=CODE,delta=2
    74  07A5  01F0               	clrf	((__pbssCOMMON)+0)&07Fh
    75  07A6  01F1               	clrf	((__pbssCOMMON)+1)&07Fh
    76                           psect cinit,class=CODE,delta=2
    77                           global end_of_initialization
    78                           
    79                           ;End of C runtime variable initialization code
    80                           
    81  07A7                     end_of_initialization:
    82  07A7  0183               clrf status
    83  07A8  120A  118A  2FAB   ljmp _main	;jump to C main() function
    84                           psect	cstackCOMMON,class=COMMON,space=1
    85                           global __pcstackCOMMON
    86  0072                     __pcstackCOMMON:
    87                           	global	?_timer
    88  0072                     ?_timer:	; 0 bytes @ 0x0
    89                           	global	?_main
    90  0072                     ?_main:	; 0 bytes @ 0x0
    91                           	global	timer@sec
    92  0072                     timer@sec:	; 2 bytes @ 0x0
    93  0072                     	ds	2
    94                           	global	??_timer
    95  0074                     ??_timer:	; 0 bytes @ 0x2
    96                           	global	??_main
    97  0074                     ??_main:	; 0 bytes @ 0x2
    98 ;;Data sizes: Strings 0, constant 0, data 0, bss 2, persistent 0 stack 0
    99 ;;Auto spaces:   Size  Autos    Used
   100 ;; COMMON          14      2       4
   101 ;; BANK0           80      0       0
   102 ;; BANK1           80      0       0
   103 ;; BANK3           96      0       0
   104 ;; BANK2           96      0       0
   105                           
   106 ;;
   107 ;; Pointer list with targets:
   108                           
   109                           
   110                           
   111 ;;
   112 ;; Critical Paths under _main in COMMON
   113 ;;
   114 ;;   _main->_timer
   115 ;;
   116 ;; Critical Paths under _main in BANK0
   117 ;;
   118 ;;   None.
   119 ;;
   120 ;; Critical Paths under _main in BANK1
   121 ;;
   122 ;;   None.
   123 ;;
   124 ;; Critical Paths under _main in BANK3
   125 ;;
   126 ;;   None.
   127 ;;
   128 ;; Critical Paths under _main in BANK2
   129 ;;
   130 ;;   None.
   131                           
   132 ;;
   133 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   134 ;;
   135                           
   136 ;;
   137 ;;Call Graph Tables:
   138 ;;
   139 ;; ---------------------------------------------------------------------------------
   140 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   141 ;; ---------------------------------------------------------------------------------
   142 ;; (0) _main                                                 0     0      0      15
   143 ;;                              _timer
   144 ;; ---------------------------------------------------------------------------------
   145 ;; (1) _timer                                                2     0      2      15
   146 ;;                                              0 COMMON     2     0      2
   147 ;; ---------------------------------------------------------------------------------
   148 ;; Estimated maximum stack depth 1
   149 ;; ---------------------------------------------------------------------------------
   150                           
   151 ;; Call Graph Graphs:
   152                           
   153 ;; _main (ROOT)
   154 ;;   _timer
   155 ;;
   156                           
   157 ;; Address spaces:
   158                           
   159 ;;Name               Size   Autos  Total    Cost      Usage
   160 ;;BITCOMMON            E      0       0       0        0.0%
   161 ;;EEDATA             100      0       0       0        0.0%
   162 ;;NULL                 0      0       0       0        0.0%
   163 ;;CODE                 0      0       0       0        0.0%
   164 ;;COMMON               E      2       4       1       28.6%
   165 ;;BITSFR0              0      0       0       1        0.0%
   166 ;;SFR0                 0      0       0       1        0.0%
   167 ;;BITSFR1              0      0       0       2        0.0%
   168 ;;SFR1                 0      0       0       2        0.0%
   169 ;;STACK                0      0       1       2        0.0%
   170 ;;ABS                  0      0       4       3        0.0%
   171 ;;BITBANK0            50      0       0       4        0.0%
   172 ;;BITSFR3              0      0       0       4        0.0%
   173 ;;SFR3                 0      0       0       4        0.0%
   174 ;;BANK0               50      0       0       5        0.0%
   175 ;;BITSFR2              0      0       0       5        0.0%
   176 ;;SFR2                 0      0       0       5        0.0%
   177 ;;BITBANK1            50      0       0       6        0.0%
   178 ;;BANK1               50      0       0       7        0.0%
   179 ;;BITBANK3            60      0       0       8        0.0%
   180 ;;BANK3               60      0       0       9        0.0%
   181 ;;BITBANK2            60      0       0      10        0.0%
   182 ;;BANK2               60      0       0      11        0.0%
   183 ;;DATA                 0      0       5      12        0.0%
   184                           
   185                           	global	_main
   186                           psect	maintext
   187                           
   188 ;; *************** function _main *****************
   189 ;; Defined at:
   190 ;;		line 23 in file "D:\Embedded\pic\code\software\timer\motor\motor.c"
   191 ;; Parameters:    Size  Location     Type
   192 ;;		None
   193 ;; Auto vars:     Size  Location     Type
   194 ;;		None
   195 ;; Return value:  Size  Location     Type
   196 ;;		None               void
   197 ;; Registers used:
   198 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   199 ;; Tracked objects:
   200 ;;		On entry : 17F/0
   201 ;;		On exit  : 0/0
   202 ;;		Unchanged: 0/0
   203 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   204 ;;      Params:         0       0       0       0       0
   205 ;;      Locals:         0       0       0       0       0
   206 ;;      Temps:          0       0       0       0       0
   207 ;;      Totals:         0       0       0       0       0
   208 ;;Total ram usage:        0 bytes
   209 ;; Hardware stack levels required when called:    1
   210 ;; This function calls:
   211 ;;		_timer
   212 ;; This function is called by:
   213 ;;		Startup code after reset
   214 ;; This function uses a non-reentrant model
   215 ;;
   216                           psect	maintext
   217                           	file	"D:\Embedded\pic\code\software\timer\motor\motor.c"
   218                           	line	23
   219                           	global	__size_of_main
   220  0028                     	__size_of_main	equ	__end_of_main-_main
   221                           	
   222  07AB                     _main:	
   223                           	opt	stack 7
   224                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   225                           	line	24
   226                           	
   227  07AB                     l2185:	
   228                           ;motor.c: 24: PORTC=0X00;
   229  07AB  1283               	bcf	status, 5	;RP0=0, select bank0
   230  07AC  1303               	bcf	status, 6	;RP1=0, select bank0
   231  07AD  0187               	clrf	(7)	;volatile
   232                           	line	25
   233                           ;motor.c: 25: TRISC=0X00;
   234  07AE  1683               	bsf	status, 5	;RP0=1, select bank1
   235  07AF  1303               	bcf	status, 6	;RP1=0, select bank1
   236  07B0  0187               	clrf	(135)^080h	;volatile
   237                           	line	27
   238                           	
   239  07B1                     l2187:	
   240                           ;motor.c: 27: OPTION_REG=0X07;
   241  07B1  3007               	movlw	(07h)
   242  07B2  0081               	movwf	(129)^080h	;volatile
   243  07B3  2FB4               	goto	l2189
   244                           	line	28
   245                           ;motor.c: 28: while(1)
   246                           	
   247  07B4                     l1035:	
   248                           	line	30
   249                           	
   250  07B4                     l2189:	
   251                           ;motor.c: 29: {
   252                           ;motor.c: 30: RC0=1;
   253  07B4  1283               	bcf	status, 5	;RP0=0, select bank0
   254  07B5  1303               	bcf	status, 6	;RP1=0, select bank0
   255  07B6  1407               	bsf	(56/8),(56)&7
   256                           	line	31
   257                           	
   258  07B7                     l2191:	
   259                           ;motor.c: 31: RC1=0;
   260  07B7  1087               	bcf	(57/8),(57)&7
   261                           	line	32
   262                           	
   263  07B8                     l2193:	
   264                           ;motor.c: 32: timer(5);
   265  07B8  3005               	movlw	low(05h)
   266  07B9  00F2               	movwf	(?_timer)
   267  07BA  3000               	movlw	high(05h)
   268  07BB  00F3               	movwf	((?_timer))+1
   269  07BC  120A  118A  27D3   	fcall	_timer
              120A  118A         
   270                           	line	33
   271                           	
   272  07C1                     l2195:	
   273                           ;motor.c: 33: RC0=0;
   274  07C1  1283               	bcf	status, 5	;RP0=0, select bank0
   275  07C2  1303               	bcf	status, 6	;RP1=0, select bank0
   276  07C3  1007               	bcf	(56/8),(56)&7
   277                           	line	34
   278                           	
   279  07C4                     l2197:	
   280                           ;motor.c: 34: RC1=1;
   281  07C4  1487               	bsf	(57/8),(57)&7
   282                           	line	35
   283                           	
   284  07C5                     l2199:	
   285                           ;motor.c: 35: timer(2);
   286  07C5  3002               	movlw	low(02h)
   287  07C6  00F2               	movwf	(?_timer)
   288  07C7  3000               	movlw	high(02h)
   289  07C8  00F3               	movwf	((?_timer))+1
   290  07C9  120A  118A  27D3   	fcall	_timer
              120A  118A         
   291  07CE  2FB4               	goto	l2189
   292                           	line	40
   293                           	
   294  07CF                     l1036:	
   295                           	line	28
   296  07CF  2FB4               	goto	l2189
   297                           	
   298  07D0                     l1037:	
   299                           	line	41
   300                           	
   301  07D0                     l1038:	
   302                           	global	start
   303  07D0  120A  118A  2800   	ljmp	start
   304                           	opt stack 0
   305                           GLOBAL	__end_of_main
   306  07D3                     	__end_of_main:
   307 ;; =============== function _main ends ============
   308                           
   309                           	signat	_main,88
   310                           	global	_timer
   311                           psect	text55,local,class=CODE,delta=2
   312                           global __ptext55
   313  07D3                     __ptext55:
   314                           
   315 ;; *************** function _timer *****************
   316 ;; Defined at:
   317 ;;		line 7 in file "D:\Embedded\pic\code\software\timer\motor\motor.c"
   318 ;; Parameters:    Size  Location     Type
   319 ;;  sec             2    0[COMMON] int 
   320 ;; Auto vars:     Size  Location     Type
   321 ;;		None
   322 ;; Return value:  Size  Location     Type
   323 ;;		None               void
   324 ;; Registers used:
   325 ;;		wreg, status,2, btemp+1
   326 ;; Tracked objects:
   327 ;;		On entry : 0/0
   328 ;;		On exit  : 0/0
   329 ;;		Unchanged: 0/0
   330 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   331 ;;      Params:         2       0       0       0       0
   332 ;;      Locals:         0       0       0       0       0
   333 ;;      Temps:          0       0       0       0       0
   334 ;;      Totals:         2       0       0       0       0
   335 ;;Total ram usage:        2 bytes
   336 ;; Hardware stack levels used:    1
   337 ;; This function calls:
   338 ;;		Nothing
   339 ;; This function is called by:
   340 ;;		_main
   341 ;; This function uses a non-reentrant model
   342 ;;
   343                           psect	text55
   344                           	file	"D:\Embedded\pic\code\software\timer\motor\motor.c"
   345                           	line	7
   346                           	global	__size_of_timer
   347  002D                     	__size_of_timer	equ	__end_of_timer-_timer
   348                           	
   349  07D3                     _timer:	
   350                           	opt	stack 7
   351                           ; Regs used in _timer: [wreg+status,2+btemp+1]
   352                           	line	8
   353                           	
   354  07D3                     l1407:	
   355                           ;motor.c: 8: while(sec>0)
   356  07D3  2FF1               	goto	l1417
   357                           	
   358  07D4                     l1028:	
   359                           	line	10
   360                           ;motor.c: 9: {
   361                           ;motor.c: 10: if(T0IF==1)
   362  07D4  1D0B               	btfss	(90/8),(90)&7
   363  07D5  2FD7               	goto	u11
   364  07D6  2FD8               	goto	u10
   365  07D7                     u11:
   366  07D7  2FDF               	goto	l1411
   367  07D8                     u10:
   368                           	line	12
   369                           	
   370  07D8                     l1409:	
   371                           ;motor.c: 11: {
   372                           ;motor.c: 12: count++;
   373  07D8  3001               	movlw	low(01h)
   374  07D9  07F0               	addwf	(_count),f
   375  07DA  1803               	skipnc
   376  07DB  0AF1               	incf	(_count+1),f
   377  07DC  3000               	movlw	high(01h)
   378  07DD  07F1               	addwf	(_count+1),f
   379  07DE  2FDF               	goto	l1411
   380                           	line	13
   381                           	
   382  07DF                     l1029:	
   383                           	line	14
   384                           	
   385  07DF                     l1411:	
   386                           ;motor.c: 13: }
   387                           ;motor.c: 14: T0IF=0;
   388  07DF  110B               	bcf	(90/8),(90)&7
   389                           	line	15
   390                           ;motor.c: 15: if(count==15)
   391  07E0  300F               	movlw	0Fh
   392  07E1  0670               	xorwf	(_count),w
   393  07E2  0471               	iorwf	(_count+1),w
   394  07E3  1D03               	skipz
   395  07E4  2FE6               	goto	u21
   396  07E5  2FE7               	goto	u20
   397  07E6                     u21:
   398  07E6  2FF1               	goto	l1417
   399  07E7                     u20:
   400                           	line	17
   401                           	
   402  07E7                     l1413:	
   403                           ;motor.c: 16: {
   404                           ;motor.c: 17: count=0;
   405  07E7  01F0               	clrf	(_count)
   406  07E8  01F1               	clrf	(_count+1)
   407                           	line	18
   408                           	
   409  07E9                     l1415:	
   410                           ;motor.c: 18: sec--;
   411  07E9  30FF               	movlw	low(-1)
   412  07EA  07F2               	addwf	(timer@sec),f
   413  07EB  1803               	skipnc
   414  07EC  0AF3               	incf	(timer@sec+1),f
   415  07ED  30FF               	movlw	high(-1)
   416  07EE  07F3               	addwf	(timer@sec+1),f
   417  07EF  2FF1               	goto	l1417
   418                           	line	19
   419                           	
   420  07F0                     l1030:	
   421  07F0  2FF1               	goto	l1417
   422                           	line	20
   423                           	
   424  07F1                     l1027:	
   425                           	line	8
   426                           	
   427  07F1                     l1417:	
   428  07F1  0873               	movf	(timer@sec+1),w
   429  07F2  3A80               	xorlw	80h
   430  07F3  00FF               	movwf	btemp+1
   431  07F4  3080               	movlw	(high(01h))^80h
   432  07F5  027F               	subwf	btemp+1,w
   433  07F6  1D03               	skipz
   434  07F7  2FFA               	goto	u35
   435  07F8  3001               	movlw	low(01h)
   436  07F9  0272               	subwf	(timer@sec),w
   437  07FA                     u35:
   438                           
   439  07FA  1803               	skipnc
   440  07FB  2FFD               	goto	u31
   441  07FC  2FFE               	goto	u30
   442  07FD                     u31:
   443  07FD  2FD4               	goto	l1028
   444  07FE                     u30:
   445  07FE  2FFF               	goto	l1032
   446                           	
   447  07FF                     l1031:	
   448                           	line	21
   449                           	
   450  07FF                     l1032:	
   451  07FF  0008               	return
   452                           	opt stack 0
   453                           GLOBAL	__end_of_timer
   454  0800                     	__end_of_timer:
   455 ;; =============== function _timer ends ============
   456                           
   457                           	signat	_timer,4216
   458                           psect	text56,local,class=CODE,delta=2
   459                           global __ptext56
   460  0000                     __ptext56:
   461                           	global	btemp
   462  007E                     	btemp set 07Eh
   463                           
   464                           	DABS	1,126,2	;btemp
   465                           	global	wtemp0
   466  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.81 build 7503 
Symbol Table                                                                                   Fri Apr 15 22:53:46 2022

                  u10 07D8                    u11 07D7                    u20 07E7                    u21 07E6  
                  u30 07FE                    u31 07FD                    u35 07FA                   _RC0 0038  
                 _RC1 0039                  l1030 07F0                  l1031 07FF                  l1032 07FF  
                l1027 07F1                  l1035 07B4                  l1028 07D4                  l1036 07CF  
                l1029 07DF                  l1037 07D0                  l1038 07D0                  l1411 07DF  
                l1413 07E7                  l1415 07E9                  l1407 07D3                  l1409 07D8  
                l1417 07F1                  l2191 07B7                  l2193 07B8                  l2185 07AB  
                l2195 07C1                  l2187 07B1                  l2197 07C4                  l2189 07B4  
                l2199 07C5                  _T0IF 005A                  _main 07AB                  btemp 007E  
                start 0000                 ?_main 0072                 _PORTC 0007                 _TRISC 0087  
               _count 0070                 _timer 07D3                 status 0003                 wtemp0 007E  
        __end_of_main 07D3                ??_main 0074                ?_timer 0072        __pcstackCOMMON 0072  
       __end_of_timer 0800               ??_timer 0074            __pmaintext 07AB  end_of_initialization 07A7  
 start_initialization 07A5           __pbssCOMMON 0070        __size_of_timer 002D              __ptext55 07D3  
            __ptext56 0000         __size_of_main 0028              timer@sec 0072            _OPTION_REG 0081  
