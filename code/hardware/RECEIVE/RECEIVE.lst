

HI-TECH Software PIC LITE Macro Assembler V9.81 build 7503 
                                                                                               Sat Jun 25 16:35:54 2022

HI-TECH Software Omniscient Code Generator (Lite mode) build 7503
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 7503"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F887
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           	FNCALL	_main,_display
    43                           	FNCALL	_main,_RC
    44                           	FNCALL	_RC,_string
    45                           	FNCALL	_RC,_tx
    46                           	FNCALL	_RC,_strcmp
    47                           	FNCALL	_string,_display
    48                           	FNCALL	_display,_pulse
    49                           	FNCALL	_pulse,_delay
    50                           	FNROOT	_main
    51                           	global	_k
    52                           	global	_i
    53                           	global	_j
    54                           	global	_data
    55                           	global	_PORTB
    56                           psect	text204,local,class=CODE,delta=2
    57                           global __ptext204
    58  0000                     __ptext204:
    59  0006                     _PORTB	set	6
    60                           	global	_PORTC
    61  0007                     _PORTC	set	7
    62                           	global	_PORTE
    63  0009                     _PORTE	set	9
    64                           	global	_RCREG
    65  001A                     _RCREG	set	26
    66                           	global	_RCSTA
    67  0018                     _RCSTA	set	24
    68                           	global	_TXREG
    69  0019                     _TXREG	set	25
    70                           	global	_RC1
    71  0039                     _RC1	set	57
    72                           	global	_RCIF
    73  0065                     _RCIF	set	101
    74                           	global	_RE0
    75  0048                     _RE0	set	72
    76                           	global	_RE1
    77  0049                     _RE1	set	73
    78                           	global	_RE2
    79  004A                     _RE2	set	74
    80                           	global	_TXIF
    81  0064                     _TXIF	set	100
    82                           	global	_SPBRG
    83  0099                     _SPBRG	set	153
    84                           	global	_TRISB
    85  0086                     _TRISB	set	134
    86                           	global	_TRISC
    87  0087                     _TRISC	set	135
    88                           	global	_TRISE
    89  0089                     _TRISE	set	137
    90                           	global	_TXSTA
    91  0098                     _TXSTA	set	152
    92                           	global	_ANSEL
    93  0188                     _ANSEL	set	392
    94                           	global	_ANSELH
    95  0189                     _ANSELH	set	393
    96                           psect	strings,class=STRING,delta=2
    97                           global __pstrings
    98  0003                     __pstrings:
    99                           ;	global	stringdir,stringtab,__stringbase
   100  0003                     stringtab:
   101                           ;	String table - string pointers are 1 byte each
   102  0003                     stringcode:stringdir:
      + 0003                     stringdir:	
   103  0003  3000               movlw high(stringdir)
   104  0004  008A               movwf pclath
   105  0005  0804               movf fsr,w
   106  0006  0A84               incf fsr
   107  0007  0782               	addwf pc
   108  0008                     __stringbase:
   109  0008  3400               	retlw	0
   110                           psect	strings
   111                           	
   112  0009                     STR_2:	
   113  0009  344F               	retlw	79	;'O'
   114  000A  3446               	retlw	70	;'F'
   115  000B  3446               	retlw	70	;'F'
   116  000C  3400               	retlw	0
   117                           psect	strings
   118                           	
   119  000D                     STR_1:	
   120  000D  344F               	retlw	79	;'O'
   121  000E  344E               	retlw	78	;'N'
   122  000F  3400               	retlw	0
   123                           psect	strings
   124                           	file	"RECEIVE.as"
   125                           	line	#
   126                           psect cinit,class=CODE,delta=2
   127                           global start_initialization
   128  0678                     start_initialization:
   129                           
   130                           psect	bssCOMMON,class=COMMON,space=1
   131                           global __pbssCOMMON
   132  007A                     __pbssCOMMON:
   133  007A                     _i:
   134  007A                            ds      2
   135                           
   136  007C                     _j:
   137  007C                            ds      2
   138                           
   139                           psect	bssBANK0,class=BANK0,space=1
   140                           global __pbssBANK0
   141  0020                     __pbssBANK0:
   142  0020                     _k:
   143  0020                            ds      2
   144                           
   145  0022                     _data:
   146  0022                            ds      10
   147                           
   148                           ; Clear objects allocated to COMMON
   149                           psect cinit,class=CODE,delta=2
   150  0678  01FA               	clrf	((__pbssCOMMON)+0)&07Fh
   151  0679  01FB               	clrf	((__pbssCOMMON)+1)&07Fh
   152  067A  01FC               	clrf	((__pbssCOMMON)+2)&07Fh
   153  067B  01FD               	clrf	((__pbssCOMMON)+3)&07Fh
   154                           ; Clear objects allocated to BANK0
   155                           psect cinit,class=CODE,delta=2
   156  067C  01A0               	clrf	((__pbssBANK0)+0)&07Fh
   157  067D  01A1               	clrf	((__pbssBANK0)+1)&07Fh
   158  067E  01A2               	clrf	((__pbssBANK0)+2)&07Fh
   159  067F  01A3               	clrf	((__pbssBANK0)+3)&07Fh
   160  0680  01A4               	clrf	((__pbssBANK0)+4)&07Fh
   161  0681  01A5               	clrf	((__pbssBANK0)+5)&07Fh
   162  0682  01A6               	clrf	((__pbssBANK0)+6)&07Fh
   163  0683  01A7               	clrf	((__pbssBANK0)+7)&07Fh
   164  0684  01A8               	clrf	((__pbssBANK0)+8)&07Fh
   165  0685  01A9               	clrf	((__pbssBANK0)+9)&07Fh
   166  0686  01AA               	clrf	((__pbssBANK0)+10)&07Fh
   167  0687  01AB               	clrf	((__pbssBANK0)+11)&07Fh
   168                           psect cinit,class=CODE,delta=2
   169                           global end_of_initialization
   170                           
   171                           ;End of C runtime variable initialization code
   172                           
   173  0688                     end_of_initialization:
   174  0688  0183               clrf status
   175  0689  120A  118A  2F40   ljmp _main	;jump to C main() function
   176                           psect	cstackCOMMON,class=COMMON,space=1
   177                           global __pcstackCOMMON
   178  0070                     __pcstackCOMMON:
   179                           	global	?_delay
   180  0070                     ?_delay:	; 0 bytes @ 0x0
   181                           	global	?_pulse
   182  0070                     ?_pulse:	; 0 bytes @ 0x0
   183                           	global	?_string
   184  0070                     ?_string:	; 0 bytes @ 0x0
   185                           	global	?_tx
   186  0070                     ?_tx:	; 0 bytes @ 0x0
   187                           	global	??_tx
   188  0070                     ??_tx:	; 0 bytes @ 0x0
   189                           	global	?_RC
   190  0070                     ?_RC:	; 0 bytes @ 0x0
   191                           	global	?_main
   192  0070                     ?_main:	; 0 bytes @ 0x0
   193                           	global	?_strcmp
   194  0070                     ?_strcmp:	; 2 bytes @ 0x0
   195                           	global	strcmp@s2
   196  0070                     strcmp@s2:	; 1 bytes @ 0x0
   197                           	global	delay@ms
   198  0070                     delay@ms:	; 2 bytes @ 0x0
   199  0070                     	ds	1
   200                           	global	tx@s
   201  0071                     tx@s:	; 1 bytes @ 0x1
   202  0071                     	ds	1
   203                           	global	??_strcmp
   204  0072                     ??_strcmp:	; 0 bytes @ 0x2
   205                           	global	??_delay
   206  0072                     ??_delay:	; 0 bytes @ 0x2
   207                           	global	??_pulse
   208  0072                     ??_pulse:	; 0 bytes @ 0x2
   209                           	global	?_display
   210  0072                     ?_display:	; 0 bytes @ 0x2
   211                           	global	display@b
   212  0072                     display@b:	; 1 bytes @ 0x2
   213  0072                     	ds	1
   214                           	global	display@c
   215  0073                     display@c:	; 1 bytes @ 0x3
   216  0073                     	ds	1
   217                           	global	??_display
   218  0074                     ??_display:	; 0 bytes @ 0x4
   219                           	global	strcmp@r
   220  0074                     strcmp@r:	; 1 bytes @ 0x4
   221  0074                     	ds	1
   222                           	global	display@a
   223  0075                     display@a:	; 1 bytes @ 0x5
   224                           	global	strcmp@s1
   225  0075                     strcmp@s1:	; 1 bytes @ 0x5
   226  0075                     	ds	1
   227                           	global	??_string
   228  0076                     ??_string:	; 0 bytes @ 0x6
   229  0076                     	ds	1
   230                           	global	string@data1
   231  0077                     string@data1:	; 1 bytes @ 0x7
   232  0077                     	ds	1
   233                           	global	??_RC
   234  0078                     ??_RC:	; 0 bytes @ 0x8
   235  0078                     	ds	1
   236                           	global	??_main
   237  0079                     ??_main:	; 0 bytes @ 0x9
   238  0079                     	ds	1
   239 ;;Data sizes: Strings 7, constant 0, data 0, bss 16, persistent 0 stack 0
   240 ;;Auto spaces:   Size  Autos    Used
   241 ;; COMMON          14     10      14
   242 ;; BANK0           80      0      12
   243 ;; BANK1           80      0       0
   244 ;; BANK3           96      0       0
   245 ;; BANK2           96      0       0
   246                           
   247 ;;
   248 ;; Pointer list with targets:
   249                           
   250 ;; ?_strcmp	int  size(1) Largest target is 0
   251 ;;
   252 ;; strcmp@s2	PTR const unsigned char  size(1) Largest target is 4
   253 ;;		 -> STR_2(CODE[4]), STR_1(CODE[3]), 
   254 ;;
   255 ;; strcmp@s1	PTR const unsigned char  size(1) Largest target is 10
   256 ;;		 -> data(BANK0[10]), 
   257 ;;
   258 ;; tx@s	PTR unsigned char  size(1) Largest target is 10
   259 ;;		 -> data(BANK0[10]), 
   260 ;;
   261 ;; string@data1	PTR unsigned char  size(1) Largest target is 10
   262 ;;		 -> data(BANK0[10]), 
   263 ;;
   264                           
   265                           
   266 ;;
   267 ;; Critical Paths under _main in COMMON
   268 ;;
   269 ;;   _main->_RC
   270 ;;   _RC->_string
   271 ;;   _string->_display
   272 ;;   _pulse->_delay
   273 ;;
   274 ;; Critical Paths under _main in BANK0
   275 ;;
   276 ;;   None.
   277 ;;
   278 ;; Critical Paths under _main in BANK1
   279 ;;
   280 ;;   None.
   281 ;;
   282 ;; Critical Paths under _main in BANK3
   283 ;;
   284 ;;   None.
   285 ;;
   286 ;; Critical Paths under _main in BANK2
   287 ;;
   288 ;;   None.
   289                           
   290 ;;
   291 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   292 ;;
   293                           
   294 ;;
   295 ;;Call Graph Tables:
   296 ;;
   297 ;; ---------------------------------------------------------------------------------
   298 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   299 ;; ---------------------------------------------------------------------------------
   300 ;; (0) _main                                                 1     1      0     399
   301 ;;                                              9 COMMON     1     1      0
   302 ;;                            _display
   303 ;;                                 _RC
   304 ;; ---------------------------------------------------------------------------------
   305 ;; (1) _RC                                                   1     1      0     289
   306 ;;                                              8 COMMON     1     1      0
   307 ;;                             _string
   308 ;;                                 _tx
   309 ;;                             _strcmp
   310 ;; ---------------------------------------------------------------------------------
   311 ;; (2) _string                                               2     2      0     155
   312 ;;                                              6 COMMON     2     2      0
   313 ;;                            _display
   314 ;; ---------------------------------------------------------------------------------
   315 ;; (3) _display                                              4     2      2     110
   316 ;;                                              2 COMMON     4     2      2
   317 ;;                              _pulse
   318 ;; ---------------------------------------------------------------------------------
   319 ;; (4) _pulse                                                0     0      0      22
   320 ;;                              _delay
   321 ;; ---------------------------------------------------------------------------------
   322 ;; (3) _strcmp                                               6     4      2      89
   323 ;;                                              0 COMMON     6     4      2
   324 ;; ---------------------------------------------------------------------------------
   325 ;; (2) _tx                                                   2     2      0      45
   326 ;;                                              0 COMMON     2     2      0
   327 ;; ---------------------------------------------------------------------------------
   328 ;; (5) _delay                                                2     0      2      22
   329 ;;                                              0 COMMON     2     0      2
   330 ;; ---------------------------------------------------------------------------------
   331 ;; Estimated maximum stack depth 5
   332 ;; ---------------------------------------------------------------------------------
   333                           
   334 ;; Call Graph Graphs:
   335                           
   336 ;; _main (ROOT)
   337 ;;   _display
   338 ;;     _pulse
   339 ;;       _delay
   340 ;;   _RC
   341 ;;     _string
   342 ;;       _display
   343 ;;         _pulse
   344 ;;           _delay
   345 ;;     _tx
   346 ;;     _strcmp
   347 ;;
   348                           
   349 ;; Address spaces:
   350                           
   351 ;;Name               Size   Autos  Total    Cost      Usage
   352 ;;BITCOMMON            E      0       0       0        0.0%
   353 ;;EEDATA             100      0       0       0        0.0%
   354 ;;NULL                 0      0       0       0        0.0%
   355 ;;CODE                 0      0       0       0        0.0%
   356 ;;COMMON               E      A       E       1      100.0%
   357 ;;BITSFR0              0      0       0       1        0.0%
   358 ;;SFR0                 0      0       0       1        0.0%
   359 ;;BITSFR1              0      0       0       2        0.0%
   360 ;;SFR1                 0      0       0       2        0.0%
   361 ;;STACK                0      0       5       2        0.0%
   362 ;;ABS                  0      0      1A       3        0.0%
   363 ;;BITBANK0            50      0       0       4        0.0%
   364 ;;BITSFR3              0      0       0       4        0.0%
   365 ;;SFR3                 0      0       0       4        0.0%
   366 ;;BANK0               50      0       C       5       15.0%
   367 ;;BITSFR2              0      0       0       5        0.0%
   368 ;;SFR2                 0      0       0       5        0.0%
   369 ;;BITBANK1            50      0       0       6        0.0%
   370 ;;BANK1               50      0       0       7        0.0%
   371 ;;BITBANK3            60      0       0       8        0.0%
   372 ;;BANK3               60      0       0       9        0.0%
   373 ;;BITBANK2            60      0       0      10        0.0%
   374 ;;BANK2               60      0       0      11        0.0%
   375 ;;DATA                 0      0      1F      12        0.0%
   376                           
   377                           	global	_main
   378                           psect	maintext,global,class=CODE,delta=2
   379                           global __pmaintext
   380  0740                     __pmaintext:
   381                           
   382 ;; *************** function _main *****************
   383 ;; Defined at:
   384 ;;		line 81 in file "D:\Embedded\pic\code\hardware\RECEIVE\RECEIVE.c"
   385 ;; Parameters:    Size  Location     Type
   386 ;;		None
   387 ;; Auto vars:     Size  Location     Type
   388 ;;		None
   389 ;; Return value:  Size  Location     Type
   390 ;;		None               void
   391 ;; Registers used:
   392 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   393 ;; Tracked objects:
   394 ;;		On entry : 17F/0
   395 ;;		On exit  : 0/0
   396 ;;		Unchanged: 0/0
   397 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   398 ;;      Params:         0       0       0       0       0
   399 ;;      Locals:         0       0       0       0       0
   400 ;;      Temps:          1       0       0       0       0
   401 ;;      Totals:         1       0       0       0       0
   402 ;;Total ram usage:        1 bytes
   403 ;; Hardware stack levels required when called:    5
   404 ;; This function calls:
   405 ;;		_display
   406 ;;		_RC
   407 ;; This function is called by:
   408 ;;		Startup code after reset
   409 ;; This function uses a non-reentrant model
   410 ;;
   411                           psect	maintext
   412                           	file	"D:\Embedded\pic\code\hardware\RECEIVE\RECEIVE.c"
   413                           	line	81
   414                           	global	__size_of_main
   415  005A                     	__size_of_main	equ	__end_of_main-_main
   416                           	
   417  0740                     _main:	
   418                           	opt	stack 3
   419                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   420                           	line	82
   421                           	
   422  0740                     l2398:	
   423                           ;RECEIVE.c: 82: PORTC=0X00;
   424  0740  1283               	bcf	status, 5	;RP0=0, select bank0
   425  0741  1303               	bcf	status, 6	;RP1=0, select bank0
   426  0742  0187               	clrf	(7)	;volatile
   427                           	line	83
   428                           	
   429  0743                     l2400:	
   430                           ;RECEIVE.c: 83: TRISC=0X80;
   431  0743  3080               	movlw	(080h)
   432  0744  1683               	bsf	status, 5	;RP0=1, select bank1
   433  0745  1303               	bcf	status, 6	;RP1=0, select bank1
   434  0746  0087               	movwf	(135)^080h	;volatile
   435                           	line	84
   436                           	
   437  0747                     l2402:	
   438                           ;RECEIVE.c: 84: PORTB=0X00;
   439  0747  1283               	bcf	status, 5	;RP0=0, select bank0
   440  0748  1303               	bcf	status, 6	;RP1=0, select bank0
   441  0749  0186               	clrf	(6)	;volatile
   442                           	line	85
   443                           	
   444  074A                     l2404:	
   445                           ;RECEIVE.c: 85: TRISB=0X00;
   446  074A  1683               	bsf	status, 5	;RP0=1, select bank1
   447  074B  1303               	bcf	status, 6	;RP1=0, select bank1
   448  074C  0186               	clrf	(134)^080h	;volatile
   449                           	line	86
   450                           	
   451  074D                     l2406:	
   452                           ;RECEIVE.c: 86: PORTE=0X00;
   453  074D  1283               	bcf	status, 5	;RP0=0, select bank0
   454  074E  1303               	bcf	status, 6	;RP1=0, select bank0
   455  074F  0189               	clrf	(9)	;volatile
   456                           	line	87
   457                           	
   458  0750                     l2408:	
   459                           ;RECEIVE.c: 87: TRISE=0X00;
   460  0750  1683               	bsf	status, 5	;RP0=1, select bank1
   461  0751  1303               	bcf	status, 6	;RP1=0, select bank1
   462  0752  0189               	clrf	(137)^080h	;volatile
   463                           	line	88
   464                           	
   465  0753                     l2410:	
   466                           ;RECEIVE.c: 88: ANSEL=0X00;
   467  0753  1683               	bsf	status, 5	;RP0=1, select bank3
   468  0754  1703               	bsf	status, 6	;RP1=1, select bank3
   469  0755  0188               	clrf	(392)^0180h	;volatile
   470                           	line	89
   471                           	
   472  0756                     l2412:	
   473                           ;RECEIVE.c: 89: ANSELH=0X00;
   474  0756  0189               	clrf	(393)^0180h	;volatile
   475                           	line	90
   476                           	
   477  0757                     l2414:	
   478                           ;RECEIVE.c: 90: TXSTA=0X26;
   479  0757  3026               	movlw	(026h)
   480  0758  1683               	bsf	status, 5	;RP0=1, select bank1
   481  0759  1303               	bcf	status, 6	;RP1=0, select bank1
   482  075A  0098               	movwf	(152)^080h	;volatile
   483                           	line	91
   484                           	
   485  075B                     l2416:	
   486                           ;RECEIVE.c: 91: RCSTA=0X90;
   487  075B  3090               	movlw	(090h)
   488  075C  1283               	bcf	status, 5	;RP0=0, select bank0
   489  075D  1303               	bcf	status, 6	;RP1=0, select bank0
   490  075E  0098               	movwf	(24)	;volatile
   491                           	line	92
   492                           	
   493  075F                     l2418:	
   494                           ;RECEIVE.c: 92: SPBRG=25;
   495  075F  3019               	movlw	(019h)
   496  0760  1683               	bsf	status, 5	;RP0=1, select bank1
   497  0761  1303               	bcf	status, 6	;RP1=0, select bank1
   498  0762  0099               	movwf	(153)^080h	;volatile
   499                           	line	93
   500                           	
   501  0763                     l2420:	
   502                           ;RECEIVE.c: 93: display(0,0,0X02);
   503  0763  01F2               	clrf	(?_display)
   504  0764  3002               	movlw	(02h)
   505  0765  00F9               	movwf	(??_main+0)+0
   506  0766  0879               	movf	(??_main+0)+0,w
   507  0767  00F3               	movwf	0+(?_display)+01h
   508  0768  3000               	movlw	(0)
   509  0769  120A  118A  2711   	fcall	_display
              120A  118A         
   510                           	line	94
   511                           	
   512  076E                     l2422:	
   513                           ;RECEIVE.c: 94: display(0,0,0X28);
   514  076E  01F2               	clrf	(?_display)
   515  076F  3028               	movlw	(028h)
   516  0770  00F9               	movwf	(??_main+0)+0
   517  0771  0879               	movf	(??_main+0)+0,w
   518  0772  00F3               	movwf	0+(?_display)+01h
   519  0773  3000               	movlw	(0)
   520  0774  120A  118A  2711   	fcall	_display
              120A  118A         
   521                           	line	95
   522                           	
   523  0779                     l2424:	
   524                           ;RECEIVE.c: 95: display(0,0,0X0F);
   525  0779  01F2               	clrf	(?_display)
   526  077A  300F               	movlw	(0Fh)
   527  077B  00F9               	movwf	(??_main+0)+0
   528  077C  0879               	movf	(??_main+0)+0,w
   529  077D  00F3               	movwf	0+(?_display)+01h
   530  077E  3000               	movlw	(0)
   531  077F  120A  118A  2711   	fcall	_display
              120A  118A         
   532                           	line	96
   533                           	
   534  0784                     l2426:	
   535                           ;RECEIVE.c: 96: display(0,0,0X80);
   536  0784  01F2               	clrf	(?_display)
   537  0785  3080               	movlw	(080h)
   538  0786  00F9               	movwf	(??_main+0)+0
   539  0787  0879               	movf	(??_main+0)+0,w
   540  0788  00F3               	movwf	0+(?_display)+01h
   541  0789  3000               	movlw	(0)
   542  078A  120A  118A  2711   	fcall	_display
              120A  118A         
   543  078F  2F90               	goto	l2428
   544                           	line	98
   545                           ;RECEIVE.c: 98: while(1)
   546                           	
   547  0790                     l1072:	
   548                           	line	100
   549                           	
   550  0790                     l2428:	
   551                           ;RECEIVE.c: 99: {
   552                           ;RECEIVE.c: 100: RC();
   553  0790  120A  118A  279A   	fcall	_RC
              120A  118A         
   554  0795  2F90               	goto	l2428
   555                           	line	102
   556                           	
   557  0796                     l1073:	
   558                           	line	98
   559  0796  2F90               	goto	l2428
   560                           	
   561  0797                     l1074:	
   562                           	line	103
   563                           	
   564  0797                     l1075:	
   565                           	global	start
   566  0797  120A  118A  2800   	ljmp	start
   567                           	opt stack 0
   568                           GLOBAL	__end_of_main
   569  079A                     	__end_of_main:
   570 ;; =============== function _main ends ============
   571                           
   572                           	signat	_main,88
   573                           	global	_RC
   574                           psect	text205,local,class=CODE,delta=2
   575                           global __ptext205
   576  079A                     __ptext205:
   577                           
   578 ;; *************** function _RC *****************
   579 ;; Defined at:
   580 ;;		line 52 in file "D:\Embedded\pic\code\hardware\RECEIVE\RECEIVE.c"
   581 ;; Parameters:    Size  Location     Type
   582 ;;		None
   583 ;; Auto vars:     Size  Location     Type
   584 ;;		None
   585 ;; Return value:  Size  Location     Type
   586 ;;		None               void
   587 ;; Registers used:
   588 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   589 ;; Tracked objects:
   590 ;;		On entry : 0/0
   591 ;;		On exit  : 0/0
   592 ;;		Unchanged: 0/0
   593 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   594 ;;      Params:         0       0       0       0       0
   595 ;;      Locals:         0       0       0       0       0
   596 ;;      Temps:          1       0       0       0       0
   597 ;;      Totals:         1       0       0       0       0
   598 ;;Total ram usage:        1 bytes
   599 ;; Hardware stack levels used:    1
   600 ;; Hardware stack levels required when called:    4
   601 ;; This function calls:
   602 ;;		_string
   603 ;;		_tx
   604 ;;		_strcmp
   605 ;; This function is called by:
   606 ;;		_main
   607 ;; This function uses a non-reentrant model
   608 ;;
   609                           psect	text205
   610                           	file	"D:\Embedded\pic\code\hardware\RECEIVE\RECEIVE.c"
   611                           	line	52
   612                           	global	__size_of_RC
   613  0066                     	__size_of_RC	equ	__end_of_RC-_RC
   614                           	
   615  079A                     _RC:	
   616                           	opt	stack 3
   617                           ; Regs used in _RC: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   618                           	line	53
   619                           	
   620  079A                     l2372:	
   621                           ;RECEIVE.c: 53: while(RCIF==0);
   622  079A  2F9B               	goto	l1062
   623                           	
   624  079B                     l1063:	
   625                           	
   626  079B                     l1062:	
   627  079B  1283               	bcf	status, 5	;RP0=0, select bank0
   628  079C  1303               	bcf	status, 6	;RP1=0, select bank0
   629  079D  1E8C               	btfss	(101/8),(101)&7
   630  079E  2FA0               	goto	u2411
   631  079F  2FA1               	goto	u2410
   632  07A0                     u2411:
   633  07A0  2F9B               	goto	l1062
   634  07A1                     u2410:
   635  07A1  2FA2               	goto	l2374
   636                           	
   637  07A2                     l1064:	
   638                           	line	54
   639                           	
   640  07A2                     l2374:	
   641                           ;RECEIVE.c: 54: data[i]=RCREG;
   642  07A2  081A               	movf	(26),w	;volatile
   643  07A3  00F8               	movwf	(??_RC+0)+0
   644  07A4  087A               	movf	(_i),w
   645  07A5  3E22               	addlw	_data&0ffh
   646  07A6  0084               	movwf	fsr0
   647  07A7  0878               	movf	(??_RC+0)+0,w
   648  07A8  1383               	bcf	status, 7	;select IRP bank0
   649  07A9  0080               	movwf	indf
   650                           	line	55
   651                           	
   652  07AA                     l2376:	
   653                           ;RECEIVE.c: 55: RCIF=0;
   654  07AA  128C               	bcf	(101/8),(101)&7
   655                           	line	56
   656                           ;RECEIVE.c: 56: if(data[i]!=13)
   657  07AB  087A               	movf	(_i),w
   658  07AC  3E22               	addlw	_data&0ffh
   659  07AD  0084               	movwf	fsr0
   660  07AE  0800               	movf	indf,w
   661  07AF  3A0D               	xorlw	0Dh
   662  07B0  1903               	skipnz
   663  07B1  2FB3               	goto	u2421
   664  07B2  2FB4               	goto	u2420
   665  07B3                     u2421:
   666  07B3  2FBB               	goto	l2380
   667  07B4                     u2420:
   668                           	line	58
   669                           	
   670  07B4                     l2378:	
   671                           ;RECEIVE.c: 57: {
   672                           ;RECEIVE.c: 58: i++;
   673  07B4  3001               	movlw	low(01h)
   674  07B5  07FA               	addwf	(_i),f
   675  07B6  1803               	skipnc
   676  07B7  0AFB               	incf	(_i+1),f
   677  07B8  3000               	movlw	high(01h)
   678  07B9  07FB               	addwf	(_i+1),f
   679  07BA  2FBB               	goto	l2380
   680                           	line	59
   681                           	
   682  07BB                     l1065:	
   683                           	line	60
   684                           	
   685  07BB                     l2380:	
   686                           ;RECEIVE.c: 59: }
   687                           ;RECEIVE.c: 60: if(data[i]==13)
   688  07BB  087A               	movf	(_i),w
   689  07BC  3E22               	addlw	_data&0ffh
   690  07BD  0084               	movwf	fsr0
   691  07BE  0800               	movf	indf,w
   692  07BF  3A0D               	xorlw	0Dh
   693  07C0  1D03               	skipz
   694  07C1  2FC3               	goto	u2431
   695  07C2  2FC4               	goto	u2430
   696  07C3                     u2431:
   697  07C3  2FFF               	goto	l1069
   698  07C4                     u2430:
   699                           	line	62
   700                           	
   701  07C4                     l2382:	
   702                           ;RECEIVE.c: 61: {
   703                           ;RECEIVE.c: 62: data[i]='\0';
   704  07C4  087A               	movf	(_i),w
   705  07C5  3E22               	addlw	_data&0ffh
   706  07C6  0084               	movwf	fsr0
   707  07C7  0180               	clrf	indf
   708                           	line	63
   709                           	
   710  07C8                     l2384:	
   711                           ;RECEIVE.c: 63: string(data);
   712  07C8  3022               	movlw	(_data)&0ffh
   713  07C9  120A  118A  26C3   	fcall	_string
              120A  118A         
   714                           	line	64
   715                           	
   716  07CE                     l2386:	
   717                           ;RECEIVE.c: 64: tx(data);
   718  07CE  3022               	movlw	(_data)&0ffh
   719  07CF  120A  118A  26A5   	fcall	_tx
              120A  118A         
   720                           	line	65
   721                           	
   722  07D4                     l2388:	
   723                           ;RECEIVE.c: 65: i=0;
   724  07D4  01FA               	clrf	(_i)
   725  07D5  01FB               	clrf	(_i+1)
   726                           	line	66
   727                           	
   728  07D6                     l2390:	
   729                           ;RECEIVE.c: 66: if(strcmp(data,"ON")==0)
   730  07D6  3005               	movlw	((STR_1-__stringbase))&0ffh
   731  07D7  00F8               	movwf	(??_RC+0)+0
   732  07D8  0878               	movf	(??_RC+0)+0,w
   733  07D9  00F0               	movwf	(?_strcmp)
   734  07DA  3022               	movlw	(_data)&0ffh
   735  07DB  120A  118A  26E2   	fcall	_strcmp
              120A  118A         
   736  07E0  0871               	movf	((1+(?_strcmp))),w
   737  07E1  0470               	iorwf	((0+(?_strcmp))),w
   738  07E2  1D03               	skipz
   739  07E3  2FE5               	goto	u2441
   740  07E4  2FE6               	goto	u2440
   741  07E5                     u2441:
   742  07E5  2FEA               	goto	l2394
   743  07E6                     u2440:
   744                           	line	68
   745                           	
   746  07E6                     l2392:	
   747                           ;RECEIVE.c: 67: {
   748                           ;RECEIVE.c: 68: RC1=1;
   749  07E6  1283               	bcf	status, 5	;RP0=0, select bank0
   750  07E7  1303               	bcf	status, 6	;RP1=0, select bank0
   751  07E8  1487               	bsf	(57/8),(57)&7
   752  07E9  2FEA               	goto	l2394
   753                           	line	69
   754                           	
   755  07EA                     l1067:	
   756                           	line	70
   757                           	
   758  07EA                     l2394:	
   759                           ;RECEIVE.c: 69: }
   760                           ;RECEIVE.c: 70: if(strcmp(data,"OFF")==0)
   761  07EA  3001               	movlw	((STR_2-__stringbase))&0ffh
   762  07EB  00F8               	movwf	(??_RC+0)+0
   763  07EC  0878               	movf	(??_RC+0)+0,w
   764  07ED  00F0               	movwf	(?_strcmp)
   765  07EE  3022               	movlw	(_data)&0ffh
   766  07EF  120A  118A  26E2   	fcall	_strcmp
              120A  118A         
   767  07F4  0871               	movf	((1+(?_strcmp))),w
   768  07F5  0470               	iorwf	((0+(?_strcmp))),w
   769  07F6  1D03               	skipz
   770  07F7  2FF9               	goto	u2451
   771  07F8  2FFA               	goto	u2450
   772  07F9                     u2451:
   773  07F9  2FFF               	goto	l1069
   774  07FA                     u2450:
   775                           	line	72
   776                           	
   777  07FA                     l2396:	
   778                           ;RECEIVE.c: 71: {
   779                           ;RECEIVE.c: 72: RC1=0;
   780  07FA  1283               	bcf	status, 5	;RP0=0, select bank0
   781  07FB  1303               	bcf	status, 6	;RP1=0, select bank0
   782  07FC  1087               	bcf	(57/8),(57)&7
   783  07FD  2FFF               	goto	l1069
   784                           	line	73
   785                           	
   786  07FE                     l1068:	
   787  07FE  2FFF               	goto	l1069
   788                           	line	74
   789                           	
   790  07FF                     l1066:	
   791                           	line	78
   792                           	
   793  07FF                     l1069:	
   794  07FF  0008               	return
   795                           	opt stack 0
   796                           GLOBAL	__end_of_RC
   797  0800                     	__end_of_RC:
   798 ;; =============== function _RC ends ============
   799                           
   800                           	signat	_RC,88
   801                           	global	_string
   802                           psect	text206,local,class=CODE,delta=2
   803                           global __ptext206
   804  06C3                     __ptext206:
   805                           
   806 ;; *************** function _string *****************
   807 ;; Defined at:
   808 ;;		line 35 in file "D:\Embedded\pic\code\hardware\RECEIVE\RECEIVE.c"
   809 ;; Parameters:    Size  Location     Type
   810 ;;  data1           1    wreg     PTR unsigned char 
   811 ;;		 -> data(10), 
   812 ;; Auto vars:     Size  Location     Type
   813 ;;  data1           1    7[COMMON] PTR unsigned char 
   814 ;;		 -> data(10), 
   815 ;; Return value:  Size  Location     Type
   816 ;;		None               void
   817 ;; Registers used:
   818 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   819 ;; Tracked objects:
   820 ;;		On entry : 0/0
   821 ;;		On exit  : 0/0
   822 ;;		Unchanged: 0/0
   823 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   824 ;;      Params:         0       0       0       0       0
   825 ;;      Locals:         1       0       0       0       0
   826 ;;      Temps:          1       0       0       0       0
   827 ;;      Totals:         2       0       0       0       0
   828 ;;Total ram usage:        2 bytes
   829 ;; Hardware stack levels used:    1
   830 ;; Hardware stack levels required when called:    3
   831 ;; This function calls:
   832 ;;		_display
   833 ;; This function is called by:
   834 ;;		_RC
   835 ;; This function uses a non-reentrant model
   836 ;;
   837                           psect	text206
   838                           	file	"D:\Embedded\pic\code\hardware\RECEIVE\RECEIVE.c"
   839                           	line	35
   840                           	global	__size_of_string
   841  001F                     	__size_of_string	equ	__end_of_string-_string
   842                           	
   843  06C3                     _string:	
   844                           	opt	stack 3
   845                           ; Regs used in _string: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   846                           ;string@data1 stored from wreg
   847  06C3  00F7               	movwf	(string@data1)
   848                           	line	36
   849                           	
   850  06C4                     l2364:	
   851                           ;RECEIVE.c: 36: while(*data1)
   852  06C4  2ED8               	goto	l2370
   853                           	
   854  06C5                     l1048:	
   855                           	line	38
   856                           	
   857  06C5                     l2366:	
   858                           ;RECEIVE.c: 37: {
   859                           ;RECEIVE.c: 38: display(1,0,*data1++);
   860  06C5  01F2               	clrf	(?_display)
   861  06C6  0877               	movf	(string@data1),w
   862  06C7  0084               	movwf	fsr0
   863  06C8  1383               	bcf	status, 7	;select IRP bank0
   864  06C9  0800               	movf	indf,w
   865  06CA  00F6               	movwf	(??_string+0)+0
   866  06CB  0876               	movf	(??_string+0)+0,w
   867  06CC  00F3               	movwf	0+(?_display)+01h
   868  06CD  3001               	movlw	(01h)
   869  06CE  120A  118A  2711   	fcall	_display
              120A  118A         
   870                           	
   871  06D3                     l2368:	
   872  06D3  3001               	movlw	(01h)
   873  06D4  00F6               	movwf	(??_string+0)+0
   874  06D5  0876               	movf	(??_string+0)+0,w
   875  06D6  07F7               	addwf	(string@data1),f
   876  06D7  2ED8               	goto	l2370
   877                           	line	39
   878                           	
   879  06D8                     l1047:	
   880                           	line	36
   881                           	
   882  06D8                     l2370:	
   883  06D8  0877               	movf	(string@data1),w
   884  06D9  0084               	movwf	fsr0
   885  06DA  1383               	bcf	status, 7	;select IRP bank0
   886  06DB  0880               	movf	indf,f
   887  06DC  1D03               	skipz
   888  06DD  2EDF               	goto	u2401
   889  06DE  2EE0               	goto	u2400
   890  06DF                     u2401:
   891  06DF  2EC5               	goto	l2366
   892  06E0                     u2400:
   893  06E0  2EE1               	goto	l1050
   894                           	
   895  06E1                     l1049:	
   896                           	line	40
   897                           	
   898  06E1                     l1050:	
   899  06E1  0008               	return
   900                           	opt stack 0
   901                           GLOBAL	__end_of_string
   902  06E2                     	__end_of_string:
   903 ;; =============== function _string ends ============
   904                           
   905                           	signat	_string,4216
   906                           	global	_display
   907                           psect	text207,local,class=CODE,delta=2
   908                           global __ptext207
   909  0711                     __ptext207:
   910                           
   911 ;; *************** function _display *****************
   912 ;; Defined at:
   913 ;;		line 25 in file "D:\Embedded\pic\code\hardware\RECEIVE\RECEIVE.c"
   914 ;; Parameters:    Size  Location     Type
   915 ;;  a               1    wreg     unsigned char 
   916 ;;  b               1    2[COMMON] unsigned char 
   917 ;;  c               1    3[COMMON] unsigned char 
   918 ;; Auto vars:     Size  Location     Type
   919 ;;  a               1    5[COMMON] unsigned char 
   920 ;; Return value:  Size  Location     Type
   921 ;;		None               void
   922 ;; Registers used:
   923 ;;		wreg, status,2, status,0, pclath, cstack
   924 ;; Tracked objects:
   925 ;;		On entry : 0/0
   926 ;;		On exit  : 0/0
   927 ;;		Unchanged: 0/0
   928 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   929 ;;      Params:         2       0       0       0       0
   930 ;;      Locals:         1       0       0       0       0
   931 ;;      Temps:          1       0       0       0       0
   932 ;;      Totals:         4       0       0       0       0
   933 ;;Total ram usage:        4 bytes
   934 ;; Hardware stack levels used:    1
   935 ;; Hardware stack levels required when called:    2
   936 ;; This function calls:
   937 ;;		_pulse
   938 ;; This function is called by:
   939 ;;		_string
   940 ;;		_main
   941 ;; This function uses a non-reentrant model
   942 ;;
   943                           psect	text207
   944                           	file	"D:\Embedded\pic\code\hardware\RECEIVE\RECEIVE.c"
   945                           	line	25
   946                           	global	__size_of_display
   947  002F                     	__size_of_display	equ	__end_of_display-_display
   948                           	
   949  0711                     _display:	
   950                           	opt	stack 3
   951                           ; Regs used in _display: [wreg+status,2+status,0+pclath+cstack]
   952                           ;display@a stored from wreg
   953  0711  00F5               	movwf	(display@a)
   954                           	line	26
   955                           	
   956  0712                     l2354:	
   957                           ;RECEIVE.c: 26: RE0=a;
   958  0712  1875               	btfsc	(display@a),0
   959  0713  2F15               	goto	u2351
   960  0714  2F19               	goto	u2350
   961                           	
   962  0715                     u2351:
   963  0715  1283               	bcf	status, 5	;RP0=0, select bank0
   964  0716  1303               	bcf	status, 6	;RP1=0, select bank0
   965  0717  1409               	bsf	(72/8),(72)&7
   966  0718  2F1C               	goto	u2364
   967  0719                     u2350:
   968  0719  1283               	bcf	status, 5	;RP0=0, select bank0
   969  071A  1303               	bcf	status, 6	;RP1=0, select bank0
   970  071B  1009               	bcf	(72/8),(72)&7
   971  071C                     u2364:
   972                           	line	27
   973                           ;RECEIVE.c: 27: RE1=b;
   974  071C  1872               	btfsc	(display@b),0
   975  071D  2F1F               	goto	u2371
   976  071E  2F23               	goto	u2370
   977                           	
   978  071F                     u2371:
   979  071F  1283               	bcf	status, 5	;RP0=0, select bank0
   980  0720  1303               	bcf	status, 6	;RP1=0, select bank0
   981  0721  1489               	bsf	(73/8),(73)&7
   982  0722  2F26               	goto	u2384
   983  0723                     u2370:
   984  0723  1283               	bcf	status, 5	;RP0=0, select bank0
   985  0724  1303               	bcf	status, 6	;RP1=0, select bank0
   986  0725  1089               	bcf	(73/8),(73)&7
   987  0726                     u2384:
   988                           	line	28
   989                           	
   990  0726                     l2356:	
   991                           ;RECEIVE.c: 28: PORTB=c;
   992  0726  0873               	movf	(display@c),w
   993  0727  0086               	movwf	(6)	;volatile
   994                           	line	29
   995                           	
   996  0728                     l2358:	
   997                           ;RECEIVE.c: 29: pulse();
   998  0728  120A  118A  268C   	fcall	_pulse
              120A  118A         
   999                           	line	30
  1000                           	
  1001  072D                     l2360:	
  1002                           ;RECEIVE.c: 30: PORTB=c<<4;
  1003  072D  0873               	movf	(display@c),w
  1004  072E  00F4               	movwf	(??_display+0)+0
  1005  072F  3003               	movlw	(04h)-1
  1006  0730                     u2395:
  1007  0730  1003               	clrc
  1008  0731  0DF4               	rlf	(??_display+0)+0,f
  1009  0732  3EFF               	addlw	-1
  1010  0733  1D03               	skipz
  1011  0734  2F30               	goto	u2395
  1012  0735  1003               	clrc
  1013  0736  0D74               	rlf	(??_display+0)+0,w
  1014  0737  1283               	bcf	status, 5	;RP0=0, select bank0
  1015  0738  1303               	bcf	status, 6	;RP1=0, select bank0
  1016  0739  0086               	movwf	(6)	;volatile
  1017                           	line	31
  1018                           	
  1019  073A                     l2362:	
  1020                           ;RECEIVE.c: 31: pulse();
  1021  073A  120A  118A  268C   	fcall	_pulse
              120A  118A         
  1022                           	line	33
  1023                           	
  1024  073F                     l1044:	
  1025  073F  0008               	return
  1026                           	opt stack 0
  1027                           GLOBAL	__end_of_display
  1028  0740                     	__end_of_display:
  1029 ;; =============== function _display ends ============
  1030                           
  1031                           	signat	_display,12408
  1032                           	global	_pulse
  1033                           psect	text208,local,class=CODE,delta=2
  1034                           global __ptext208
  1035  068C                     __ptext208:
  1036                           
  1037 ;; *************** function _pulse *****************
  1038 ;; Defined at:
  1039 ;;		line 18 in file "D:\Embedded\pic\code\hardware\RECEIVE\RECEIVE.c"
  1040 ;; Parameters:    Size  Location     Type
  1041 ;;		None
  1042 ;; Auto vars:     Size  Location     Type
  1043 ;;		None
  1044 ;; Return value:  Size  Location     Type
  1045 ;;		None               void
  1046 ;; Registers used:
  1047 ;;		wreg, status,2, status,0, pclath, cstack
  1048 ;; Tracked objects:
  1049 ;;		On entry : 0/0
  1050 ;;		On exit  : 0/0
  1051 ;;		Unchanged: 0/0
  1052 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1053 ;;      Params:         0       0       0       0       0
  1054 ;;      Locals:         0       0       0       0       0
  1055 ;;      Temps:          0       0       0       0       0
  1056 ;;      Totals:         0       0       0       0       0
  1057 ;;Total ram usage:        0 bytes
  1058 ;; Hardware stack levels used:    1
  1059 ;; Hardware stack levels required when called:    1
  1060 ;; This function calls:
  1061 ;;		_delay
  1062 ;; This function is called by:
  1063 ;;		_display
  1064 ;; This function uses a non-reentrant model
  1065 ;;
  1066                           psect	text208
  1067                           	file	"D:\Embedded\pic\code\hardware\RECEIVE\RECEIVE.c"
  1068                           	line	18
  1069                           	global	__size_of_pulse
  1070  0019                     	__size_of_pulse	equ	__end_of_pulse-_pulse
  1071                           	
  1072  068C                     _pulse:	
  1073                           	opt	stack 3
  1074                           ; Regs used in _pulse: [wreg+status,2+status,0+pclath+cstack]
  1075                           	line	19
  1076                           	
  1077  068C                     l2348:	
  1078                           ;RECEIVE.c: 19: RE2=1;
  1079  068C  1283               	bcf	status, 5	;RP0=0, select bank0
  1080  068D  1303               	bcf	status, 6	;RP1=0, select bank0
  1081  068E  1509               	bsf	(74/8),(74)&7
  1082                           	line	20
  1083                           	
  1084  068F                     l2350:	
  1085                           ;RECEIVE.c: 20: delay(200);
  1086  068F  30C8               	movlw	low(0C8h)
  1087  0690  00F0               	movwf	(?_delay)
  1088  0691  3000               	movlw	high(0C8h)
  1089  0692  00F1               	movwf	((?_delay))+1
  1090  0693  120A  118A  2664   	fcall	_delay
              120A  118A         
  1091                           	line	21
  1092                           	
  1093  0698                     l2352:	
  1094                           ;RECEIVE.c: 21: RE2=0;
  1095  0698  1283               	bcf	status, 5	;RP0=0, select bank0
  1096  0699  1303               	bcf	status, 6	;RP1=0, select bank0
  1097  069A  1109               	bcf	(74/8),(74)&7
  1098                           	line	22
  1099                           ;RECEIVE.c: 22: delay(200);
  1100  069B  30C8               	movlw	low(0C8h)
  1101  069C  00F0               	movwf	(?_delay)
  1102  069D  3000               	movlw	high(0C8h)
  1103  069E  00F1               	movwf	((?_delay))+1
  1104  069F  120A  118A  2664   	fcall	_delay
              120A  118A         
  1105                           	line	23
  1106                           	
  1107  06A4                     l1041:	
  1108  06A4  0008               	return
  1109                           	opt stack 0
  1110                           GLOBAL	__end_of_pulse
  1111  06A5                     	__end_of_pulse:
  1112 ;; =============== function _pulse ends ============
  1113                           
  1114                           	signat	_pulse,88
  1115                           	global	_strcmp
  1116                           psect	text209,local,class=CODE,delta=2
  1117                           global __ptext209
  1118  06E2                     __ptext209:
  1119                           
  1120 ;; *************** function _strcmp *****************
  1121 ;; Defined at:
  1122 ;;		line 34 in file "../../common/strcmp.c"
  1123 ;; Parameters:    Size  Location     Type
  1124 ;;  s1              1    wreg     PTR const unsigned char 
  1125 ;;		 -> data(10), 
  1126 ;;  s2              1    0[COMMON] PTR const unsigned char 
  1127 ;;		 -> STR_2(4), STR_1(3), 
  1128 ;; Auto vars:     Size  Location     Type
  1129 ;;  s1              1    5[COMMON] PTR const unsigned char 
  1130 ;;		 -> data(10), 
  1131 ;;  r               1    4[COMMON] char 
  1132 ;; Return value:  Size  Location     Type
  1133 ;;                  2    0[COMMON] int 
  1134 ;; Registers used:
  1135 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  1136 ;; Tracked objects:
  1137 ;;		On entry : 0/0
  1138 ;;		On exit  : 0/0
  1139 ;;		Unchanged: 0/0
  1140 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1141 ;;      Params:         2       0       0       0       0
  1142 ;;      Locals:         2       0       0       0       0
  1143 ;;      Temps:          2       0       0       0       0
  1144 ;;      Totals:         6       0       0       0       0
  1145 ;;Total ram usage:        6 bytes
  1146 ;; Hardware stack levels used:    2
  1147 ;; This function calls:
  1148 ;;		Nothing
  1149 ;; This function is called by:
  1150 ;;		_RC
  1151 ;; This function uses a non-reentrant model
  1152 ;;
  1153                           psect	text209
  1154                           	file	"C:\Program Files\HI-TECH Software\PICC\9.81\sources\strcmp.c"
  1155                           	line	34
  1156                           	global	__size_of_strcmp
  1157  002F                     	__size_of_strcmp	equ	__end_of_strcmp-_strcmp
  1158                           	
  1159  06E2                     _strcmp:	
  1160                           	opt	stack 5
  1161                           ; Regs used in _strcmp: [wreg-fsr0h+status,2+status,0+pclath]
  1162                           ;strcmp@s1 stored from wreg
  1163  06E2  00F5               	movwf	(strcmp@s1)
  1164                           	line	37
  1165                           	
  1166  06E3                     l2338:	
  1167  06E3  2EE5               	goto	l2340
  1168                           	
  1169  06E4                     l1079:	
  1170                           	line	38
  1171  06E4  2EE5               	goto	l2340
  1172                           	
  1173  06E5                     l1078:	
  1174                           	line	37
  1175                           	
  1176  06E5                     l2340:	
  1177  06E5  0875               	movf	(strcmp@s1),w
  1178  06E6  0084               	movwf	fsr
  1179  06E7  1383               	bcf	status, 7	;select IRP bank0
  1180  06E8  0800               	movf	indf,w
  1181  06E9  00F2               	movwf	(??_strcmp+0)+0
  1182  06EA  3001               	movlw	01h
  1183  06EB  07F0               	addwf	(strcmp@s2),f
  1184  06EC  30FF               	movlw	-01h
  1185  06ED  0770               	addwf	(strcmp@s2),w
  1186  06EE  0084               	movwf	fsr0
  1187  06EF  120A  118A  2003   	fcall	stringdir
              120A  118A         
  1188  06F4  3AFF               	xorlw	0ffh
  1189  06F5  3E01               	addlw	1
  1190  06F6  0772               	addwf	(??_strcmp+0)+0,w
  1191  06F7  00F3               	movwf	(??_strcmp+1)+0
  1192  06F8  0873               	movf	(??_strcmp+1)+0,w
  1193  06F9  00F4               	movwf	(strcmp@r)
  1194  06FA  08F4               	movf	((strcmp@r)),f
  1195  06FB  1D03               	skipz
  1196  06FC  2EFE               	goto	u2331
  1197  06FD  2EFF               	goto	u2330
  1198  06FE                     u2331:
  1199  06FE  2F0A               	goto	l2344
  1200  06FF                     u2330:
  1201                           	
  1202  06FF                     l2342:	
  1203  06FF  0875               	movf	(strcmp@s1),w
  1204  0700  0084               	movwf	fsr0
  1205  0701  3001               	movlw	01h
  1206  0702  07F5               	addwf	(strcmp@s1),f
  1207  0703  0880               	movf	indf,f
  1208  0704  1D03               	skipz
  1209  0705  2F07               	goto	u2341
  1210  0706  2F08               	goto	u2340
  1211  0707                     u2341:
  1212  0707  2EE5               	goto	l2340
  1213  0708                     u2340:
  1214  0708  2F0A               	goto	l2344
  1215                           	
  1216  0709                     l1081:	
  1217  0709  2F0A               	goto	l2344
  1218                           	
  1219  070A                     l1082:	
  1220                           	line	39
  1221                           	
  1222  070A                     l2344:	
  1223  070A  0874               	movf	(strcmp@r),w
  1224  070B  00F0               	movwf	(?_strcmp)
  1225  070C  01F1               	clrf	(?_strcmp+1)
  1226  070D  1BF0               	btfsc	(?_strcmp),7
  1227  070E  03F1               	decf	(?_strcmp+1),f
  1228  070F  2F10               	goto	l1083
  1229                           	
  1230  0710                     l2346:	
  1231                           	line	40
  1232                           	
  1233  0710                     l1083:	
  1234  0710  0008               	return
  1235                           	opt stack 0
  1236                           GLOBAL	__end_of_strcmp
  1237  0711                     	__end_of_strcmp:
  1238 ;; =============== function _strcmp ends ============
  1239                           
  1240                           	signat	_strcmp,8314
  1241                           	global	_tx
  1242                           psect	text210,local,class=CODE,delta=2
  1243                           global __ptext210
  1244  06A5                     __ptext210:
  1245                           
  1246 ;; *************** function _tx *****************
  1247 ;; Defined at:
  1248 ;;		line 42 in file "D:\Embedded\pic\code\hardware\RECEIVE\RECEIVE.c"
  1249 ;; Parameters:    Size  Location     Type
  1250 ;;  s               1    wreg     PTR unsigned char 
  1251 ;;		 -> data(10), 
  1252 ;; Auto vars:     Size  Location     Type
  1253 ;;  s               1    1[COMMON] PTR unsigned char 
  1254 ;;		 -> data(10), 
  1255 ;; Return value:  Size  Location     Type
  1256 ;;		None               void
  1257 ;; Registers used:
  1258 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1259 ;; Tracked objects:
  1260 ;;		On entry : 0/0
  1261 ;;		On exit  : 0/0
  1262 ;;		Unchanged: 0/0
  1263 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1264 ;;      Params:         0       0       0       0       0
  1265 ;;      Locals:         1       0       0       0       0
  1266 ;;      Temps:          1       0       0       0       0
  1267 ;;      Totals:         2       0       0       0       0
  1268 ;;Total ram usage:        2 bytes
  1269 ;; Hardware stack levels used:    1
  1270 ;; This function calls:
  1271 ;;		Nothing
  1272 ;; This function is called by:
  1273 ;;		_RC
  1274 ;; This function uses a non-reentrant model
  1275 ;;
  1276                           psect	text210
  1277                           	file	"D:\Embedded\pic\code\hardware\RECEIVE\RECEIVE.c"
  1278                           	line	42
  1279                           	global	__size_of_tx
  1280  001E                     	__size_of_tx	equ	__end_of_tx-_tx
  1281                           	
  1282  06A5                     _tx:	
  1283                           	opt	stack 6
  1284                           ; Regs used in _tx: [wreg-fsr0h+status,2+status,0]
  1285                           ;tx@s stored from wreg
  1286  06A5  00F1               	movwf	(tx@s)
  1287                           	line	43
  1288                           	
  1289  06A6                     l2330:	
  1290                           ;RECEIVE.c: 43: while(*s)
  1291  06A6  2EB9               	goto	l2336
  1292                           	
  1293  06A7                     l1054:	
  1294                           	line	45
  1295                           	
  1296  06A7                     l2332:	
  1297                           ;RECEIVE.c: 44: {
  1298                           ;RECEIVE.c: 45: TXREG=*s++;
  1299  06A7  0871               	movf	(tx@s),w
  1300  06A8  0084               	movwf	fsr0
  1301  06A9  1383               	bcf	status, 7	;select IRP bank0
  1302  06AA  0800               	movf	indf,w
  1303  06AB  1283               	bcf	status, 5	;RP0=0, select bank0
  1304  06AC  1303               	bcf	status, 6	;RP1=0, select bank0
  1305  06AD  0099               	movwf	(25)	;volatile
  1306                           	
  1307  06AE                     l2334:	
  1308  06AE  3001               	movlw	(01h)
  1309  06AF  00F0               	movwf	(??_tx+0)+0
  1310  06B0  0870               	movf	(??_tx+0)+0,w
  1311  06B1  07F1               	addwf	(tx@s),f
  1312                           	line	46
  1313                           ;RECEIVE.c: 46: while(TXIF==0);
  1314  06B2  2EB3               	goto	l1055
  1315                           	
  1316  06B3                     l1056:	
  1317                           	
  1318  06B3                     l1055:	
  1319  06B3  1E0C               	btfss	(100/8),(100)&7
  1320  06B4  2EB6               	goto	u2311
  1321  06B5  2EB7               	goto	u2310
  1322  06B6                     u2311:
  1323  06B6  2EB3               	goto	l1055
  1324  06B7                     u2310:
  1325                           	
  1326  06B7                     l1057:	
  1327                           	line	47
  1328                           ;RECEIVE.c: 47: TXIF=0;
  1329  06B7  120C               	bcf	(100/8),(100)&7
  1330  06B8  2EB9               	goto	l2336
  1331                           	line	48
  1332                           	
  1333  06B9                     l1053:	
  1334                           	line	43
  1335                           	
  1336  06B9                     l2336:	
  1337  06B9  0871               	movf	(tx@s),w
  1338  06BA  0084               	movwf	fsr0
  1339  06BB  1383               	bcf	status, 7	;select IRP bank0
  1340  06BC  0880               	movf	indf,f
  1341  06BD  1D03               	skipz
  1342  06BE  2EC0               	goto	u2321
  1343  06BF  2EC1               	goto	u2320
  1344  06C0                     u2321:
  1345  06C0  2EA7               	goto	l2332
  1346  06C1                     u2320:
  1347  06C1  2EC2               	goto	l1059
  1348                           	
  1349  06C2                     l1058:	
  1350                           	line	49
  1351                           	
  1352  06C2                     l1059:	
  1353  06C2  0008               	return
  1354                           	opt stack 0
  1355                           GLOBAL	__end_of_tx
  1356  06C3                     	__end_of_tx:
  1357 ;; =============== function _tx ends ============
  1358                           
  1359                           	signat	_tx,4216
  1360                           	global	_delay
  1361                           psect	text211,local,class=CODE,delta=2
  1362                           global __ptext211
  1363  0664                     __ptext211:
  1364                           
  1365 ;; *************** function _delay *****************
  1366 ;; Defined at:
  1367 ;;		line 14 in file "D:\Embedded\pic\code\hardware\RECEIVE\RECEIVE.c"
  1368 ;; Parameters:    Size  Location     Type
  1369 ;;  ms              2    0[COMMON] unsigned int 
  1370 ;; Auto vars:     Size  Location     Type
  1371 ;;		None
  1372 ;; Return value:  Size  Location     Type
  1373 ;;		None               void
  1374 ;; Registers used:
  1375 ;;		wreg
  1376 ;; Tracked objects:
  1377 ;;		On entry : 0/0
  1378 ;;		On exit  : 0/0
  1379 ;;		Unchanged: 0/0
  1380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1381 ;;      Params:         2       0       0       0       0
  1382 ;;      Locals:         0       0       0       0       0
  1383 ;;      Temps:          0       0       0       0       0
  1384 ;;      Totals:         2       0       0       0       0
  1385 ;;Total ram usage:        2 bytes
  1386 ;; Hardware stack levels used:    1
  1387 ;; This function calls:
  1388 ;;		Nothing
  1389 ;; This function is called by:
  1390 ;;		_pulse
  1391 ;; This function uses a non-reentrant model
  1392 ;;
  1393                           psect	text211
  1394                           	file	"D:\Embedded\pic\code\hardware\RECEIVE\RECEIVE.c"
  1395                           	line	14
  1396                           	global	__size_of_delay
  1397  0014                     	__size_of_delay	equ	__end_of_delay-_delay
  1398                           	
  1399  0664                     _delay:	
  1400                           	opt	stack 3
  1401                           ; Regs used in _delay: [wreg]
  1402                           	line	15
  1403                           	
  1404  0664                     l2326:	
  1405                           ;RECEIVE.c: 15: while(ms--);
  1406  0664  2E66               	goto	l2328
  1407                           	
  1408  0665                     l1036:	
  1409  0665  2E66               	goto	l2328
  1410                           	
  1411  0666                     l1035:	
  1412                           	
  1413  0666                     l2328:	
  1414  0666  3001               	movlw	low(01h)
  1415  0667  02F0               	subwf	(delay@ms),f
  1416  0668  3000               	movlw	high(01h)
  1417  0669  1C03               	skipc
  1418  066A  03F1               	decf	(delay@ms+1),f
  1419  066B  02F1               	subwf	(delay@ms+1),f
  1420  066C  30FF               	movlw	high(0FFFFh)
  1421  066D  0671               	xorwf	((delay@ms+1)),w
  1422  066E  1D03               	skipz
  1423  066F  2E72               	goto	u2305
  1424  0670  30FF               	movlw	low(0FFFFh)
  1425  0671  0670               	xorwf	((delay@ms)),w
  1426  0672                     u2305:
  1427                           
  1428  0672  1D03               	skipz
  1429  0673  2E75               	goto	u2301
  1430  0674  2E76               	goto	u2300
  1431  0675                     u2301:
  1432  0675  2E66               	goto	l2328
  1433  0676                     u2300:
  1434  0676  2E77               	goto	l1038
  1435                           	
  1436  0677                     l1037:	
  1437                           	line	16
  1438                           	
  1439  0677                     l1038:	
  1440  0677  0008               	return
  1441                           	opt stack 0
  1442                           GLOBAL	__end_of_delay
  1443  0678                     	__end_of_delay:
  1444 ;; =============== function _delay ends ============
  1445                           
  1446                           	signat	_delay,4216
  1447                           psect	text212,local,class=CODE,delta=2
  1448                           global __ptext212
  1449  0000                     __ptext212:
  1450                           	global	btemp
  1451  007E                     	btemp set 07Eh
  1452                           
  1453                           	DABS	1,126,2	;btemp
  1454                           	global	wtemp0
  1455  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.81 build 7503 
Symbol Table                                                                                   Sat Jun 25 16:35:54 2022

                   _i 007A                     _j 007C                     _k 0020                     pc 0002  
                  _RC 079A                    _tx 06A5                    fsr 0004                   ?_RC 0070  
                 ?_tx 0070                   _RC1 0039                   _RE0 0048                   _RE1 0049  
                 _RE2 004A                   fsr0 0004                   indf 0000                   tx@s 0071  
                ??_RC 0078                  ??_tx 0070                  l1041 06A4                  l1050 06E1  
                l1035 0666                  l1036 0665                  l1044 073F                  l1037 0677  
                l1053 06B9                  l1038 0677                  l1054 06A7                  l1062 079B  
                l1055 06B3                  l1047 06D8                  l1063 079B                  l1056 06B3  
                l1048 06C5                  l1064 07A2                  l1072 0790                  l1057 06B7  
                l1081 0709                  l1049 06E1                  l1065 07BB                  l1073 0796  
                l1058 06C2                  l1082 070A                  l1066 07FF                  l1074 0797  
                l1059 06C2                  l1083 0710                  l1067 07EA                  l1075 0797  
                l1068 07FE                  l1069 07FF                  l1078 06E5                  l1079 06E4  
                l2400 0743                  l2330 06A6                  l2410 0753                  l2402 0747  
                l2332 06A7                  l2340 06E5                  l2420 0763                  l2412 0756  
                l2404 074A                  l2326 0664                  l2334 06AE                  l2342 06FF  
                l2350 068F                  l2422 076E                  l2414 0757                  l2406 074D  
                l2328 0666                  l2336 06B9                  l2344 070A                  l2352 0698  
                l2360 072D                  l2424 0779                  l2416 075B                  l2408 0750  
                l2346 0710                  l2338 06E3                  l2362 073A                  l2354 0712  
                l2370 06D8                  l2426 0784                  l2418 075F                  l2348 068C  
                l2356 0726                  l2364 06C4                  l2380 07BB                  l2372 079A  
                l2428 0790                  l2358 0728                  l2366 06C5                  l2390 07D6  
                l2382 07C4                  l2374 07A2                  l2368 06D3                  l2392 07E6  
                l2384 07C8                  l2376 07AA                  l2394 07EA                  l2386 07CE  
                l2378 07B4                  l2396 07FA                  l2388 07D4                  l2398 0740  
                STR_1 000D                  STR_2 0009                  u2300 0676                  u2301 0675  
                u2310 06B7                  u2311 06B6                  u2320 06C1                  u2400 06E0  
                u2305 0672                  u2321 06C0                  u2401 06DF                  u2330 06FF  
                u2410 07A1                  u2331 06FE                  u2411 07A0                  u2340 0708  
                u2420 07B4                  u2341 0707                  u2421 07B3                  u2350 0719  
                u2430 07C4                  u2351 0715                  u2431 07C3                  u2440 07E6  
                u2441 07E5                  u2370 0723                  u2450 07FA                  u2371 071F  
                u2451 07F9                  u2364 071C                  u2384 0726                  u2395 0730  
                _RCIF 0065                  _TXIF 0064                  _data 0022                  _main 0740  
                btemp 007E                  start 0000                 ?_main 0070                 _ANSEL 0188  
               _RCREG 001A                 _RCSTA 0018                 _SPBRG 0099                 _PORTB 0006  
               _PORTC 0007                 _PORTE 0009                 _TRISB 0086                 _TRISC 0087  
               _TRISE 0089                 _TXREG 0019                 _TXSTA 0098       __end_of_display 0740  
               _delay 0664                 _pulse 068C                 pclath 000A                 status 0003  
               wtemp0 007E          __end_of_main 079A                ??_main 0079                ?_delay 0070  
              ?_pulse 0070                _ANSELH 0189                _strcmp 06E2                _string 06C3  
           ??_display 0074        __pcstackCOMMON 0070         __end_of_delay 0678         __end_of_pulse 06A5  
          __end_of_RC 0800            __end_of_tx 06C3               ??_delay 0072               ??_pulse 0072  
          __pbssBANK0 0020            __pmaintext 0740               ?_strcmp 0070               ?_string 0070  
             _display 0711       __size_of_strcmp 002F       __size_of_string 001F               delay@ms 0070  
end_of_initialization 0688               strcmp@r 0074        __end_of_strcmp 0711        __end_of_string 06E2  
 start_initialization 0678              ??_strcmp 0072              ??_string 0076           __pbssCOMMON 007A  
           __ptext210 06A5             __ptext211 0664             __ptext212 0000             __ptext204 0000  
           __ptext205 079A             __ptext206 06C3             __ptext207 0711             __ptext208 068C  
           __ptext209 06E2             __pstrings 0003              ?_display 0072           string@data1 0077  
      __size_of_delay 0014        __size_of_pulse 0019           __size_of_RC 0066           __size_of_tx 001E  
         __stringbase 0008      __size_of_display 002F         __size_of_main 005A              display@a 0075  
            display@b 0072              display@c 0073             stringcode 0003              strcmp@s1 0075  
            strcmp@s2 0070              stringdir 0003              stringtab 0003  
